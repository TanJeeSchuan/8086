.MODEL SMALL
.STACK 100
.DATA

;Header
	WLC_MSG db "Welcome to Boots Technologies" ,13,10,'$'
	NL DB 0DH,0AH,'$'                ;NEW LINE
;MENU OPTION
	INFO_CAT  DB 10,13,"KEYS     	    ITEMS  $"
	CATEGORY1 DB 10,13," 1		IPHONE 11 Series	$"
	CATEGORY2 DB 10,13," 2		IPHONE 12 Series	$"
	CATEGORY3 DB 10,13," 3		IPHONE 13 Series	$"
	PROMPT_CAT DB 10,13,"PLEASE ENTER THE KEY OF AVAILABLE CATEGORIES ABOVE: $"
;..........SERIES
	INFO_PHONE  DB 10,13,"KEYS     	    DESCRIPTION		PRICE  $"
	PROMPT_PHONE DB 10,13,"DO YOU WANT TO ORDER ? (Y=YES || N=NO,BACK TO CATEGORY MENU ) $"
	PROMPT_ORDER DB 10,13,"PLEASE SELECT THE KEY OF AVAILABLE OPTIONS ABOVE: $"
	PROMPT_CAPACITY DB 10,13,"PLEASE SELECT THE CAPACITY(GB): $"
;IPHONE11 SERIES
	PHONE11_1 DB 10,13," 1		IPHONE 11        	600USD(64GB) $"			;downpay120    before downpay 600/12=50  600/24=25    480/12=40   480/24=20
	PHONE11_2 DB 10,13," 2    	IPHONE 11PRO	   	840USD(64GB) $"			;downpay120    before downpay 840/12=70	840/24=35	720/12=60  720/24=30

	CAPACITY11_1 DB 10,13,"64GB $"		
	CAPACITY11_2 DB 10,13,"128GB $"		;+24   624   be4 624/12=52  624/24=26	504/12-42     504/24=21


	QTY11_1 DW ?
	QTY11_2 DW ?

	DOWNPAY11_1 DW ?
	DOWNPAY11_2 DW ?
	
	MONTHLY11_1 DW ?
	INS11_CHOICE DB ?
	DOWNPAY_CHOICE DB ?

	PROMPT_DOWNPAY11 DB 10,13,"WOULD YOU LIKE TO MAKE AN EARLY PAYMENT (180USD) ? $"

	RM DB 10,13,"RM$"
	SHOWINST DB 10,13,"HERE'S YOUR MONTHLY REPAYMENT :) $"

	 

;IPHONE12 SERIES
	PHONE12_1 DB 10,13," 1		IPHONE 12		RM2800(128GB) $"
	PHONE12_2 DB 10,13," 2		IPHONE 12PRO		RM3100(128GB) $"
	PHONE12_3 DB 10,13," 3		IPHONE 12PROMAX		RM3400(128GB) $"

	CAPACITY12_1 DB 10,13,"128GB $"
	CAPACITY12_2 DB 10,13,"256GB $"
	CAPACITY12_3 DB 10,13,"512GB $"


;IPHONE13 SERIES
	PHONE13_1 DB 10,13," 1		IPHONE 13MINI		RM3200(256GB) $"
	PHONE13_2 DB 10,13," 2		IPHONE 13		RM3500(256GB) $"
	PHONE13_3 DB 10,13," 3		IPHONE 13PROMAX		RM4100(256GB) $"

	CAPACITY13_1 DB 10,13,"256GB $"
	CAPACITY13_2 DB 10,13,"512GB $"

;INSTALLMENT
	PROMPT_INST11 DB 10,13," CHOOSING 12 MONTHS / 24 MONTHS REPAYMENT ? $"

;ENTER OPTION
	E_CHOICE DB 10,13,'ENTER YOUR CHOICE:$'    
	E_QUANTITY DB 10,13,'ENTER QUANTITY: $'

;ERROR DISPLAYED
	ER_MSG DB 10,13,'ERROR INPUT$'  

;DECLARE VARIABLES
	USEROPTION DB ?
	INPUT1 DB ?
	INPUT2 DB ?
	INPUTCAPACITY11 DB ?
	INPUTCAPACITY12 DB ?
	INPUTCAPACITY13 DB ?

	A DW ?
	B DW ?
	INST Db ?
	PRICE DW ?
	PRICE11_1 DW ?
	PRICE11_2 DW ?

	PRICE12_1 Dw ?
	PRICE12_2 Dw ?
	PRICE12_3 Dw ?

	PRICE13_1 Dw ?
	PRICE13_2 Dw ?
	PRICE13_3 Dw ?

	QTY11 DB 0
	ATTEMP DB 0
	R1 Dw ?
	
.CODE	

	

print_num:
    push bx       ; Save CX register
    push dx       ; Save DX register

    mov bx, 10    ; Set CX to 10, to divide by 10 repeatedly
    mov cx, 0     ; Initialize BX to 0, to store the reversed number
    
reverse_loop:
    xor dx, dx    ; Clear DX for the division
    div bx        ; Divide AX by 10, result in AX (quotient) and DX (remainder)
    add dl, '0'   ; Convert remainder to ASCII
    push dx       ; Push ASCII digit onto the stack
    inc cx        ; Increment the count of digits

    test ax, ax   ; Check if AX is zero (end of division)
    jnz reverse_loop ; If not zero, continue dividing
    
print_loop:
    pop dx        ; Pop ASCII digit from the stack
    mov ah, 2     ; DOS function to print a character
    int 21h       ; Call DOS interrupt
    dec cx        ; Decrement the count of digits
    jnz print_loop ; If not zero, print the next digit

    pop dx        ; Restore the saved DX register
    pop bx        ; Restore the saved CX register
    ret
CAT_MENU:
	
	MOV AH,9
	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H
	
	MOV AH,9 
     	LEA DX,INFO_CAT                 ;PRINT INFO STRING
     	INT 21H                     

	MOV AH,9
	LEA DX,CATEGORY1	;PRINT CATEGORY1 STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	LEA DX,CATEGORY2	;PRINT CATEGORY2 STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	LEA DX,CATEGORY3	;PRINT CATEGORY3 STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H
	
	LEA DX,PROMPT_CAT
	INT 21H
	
	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H
	
	JMP ASKCAT

ASKCAT:
	LEA DX,E_CHOICE
	INT 21H
	
	
	MOV AH,1                    ;TAKE AN INPUT & SAVED TO AL
	INT 21H 
	
	CMP AL,49                   ;IF AL=1 GO TO SERIES11 LABEL
     	JE TOSERIES11
     
	
     	CMP AL,50                   ;IF AL=2 GO TO SERIES12 LABEL
     	JE TOSERIES12
     
	MOV CL,BL
     	CMP CL,51                   ;IF AL=3 GO TO SERIES13 LABEL
     	JE TOSERIES13

	JMP ERRORCAT                ;IF WRONG KEYWORD IS PRESSED THEN ERROR

TOSERIES11:
	JMP SERIES11

TOSERIES12:
	JMP SERIES12

TOSERIES13:
	JMP SERIES13

ERRORCAT:  
                  
     LEA DX,ER_MSG               ;PRINT ERROR MESSAGE 
     MOV AH,9
     INT 21H 
                                 ;IF USER GIVES AN ERROR THEN USER WILL BE ASKED TO INPUT AGAIN
     JMP ASKCAT

SERIES11:
	MOV AH,9
	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H
	
	MOV BL,10                   ;COLOR CODE
     	MOV AH,9 
     	MOV AL,0  
     	INT 10H                
      
	MOV AH,9 
     	LEA DX,INFO_PHONE                 ;PRINT INFO STRING
     	INT 21H                     
     
     	MOV BL,11                   ;COLOR CODE
     	MOV AH,9 
     	MOV AL,0  
     	INT 10H   

	MOV AH,9
	LEA DX,PHONE11_1	;PRINT PHONE11 STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	LEA DX,PHONE11_2	;PRINT PHONE11PRO STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	MOV AH,9
	LEA DX,PROMPT_PHONE
	INT 21H
	
	LEA DX,NL
	INT 21H

	JMP ASKPHONE11

ASKPHONE11:
	LEA DX,E_CHOICE
	INT 21H

	MOV AH,1                    ;TAKE AN INPUT & SAVED TO AL
	INT 21H 

	MOV USEROPTION,AL
	
	CMP USEROPTION,49		;'Y'
	JE BUYPHONE11

	CMP USEROPTION,50		;'N'
	JE LOGOUT

	JMP ERRORPHONE11

LOGOUT:
	JMP CAT_MENU

BUYPHONE11:
	MOV AH,09H
	LEA DX,PROMPT_ORDER
	INT 21H
	LEA DX,E_CHOICE
	INT 21H
	;JMP ORDER11

ORDER11:
	MOV AH,1
	int 21h
	MOV INPUT1,AL
	CMP INPUT1,49
	JE IPHONE11
	CMP INPUT1,50
	JE IPHONE11PRO

	JMP ERRORPHONE11

IPHONE11:
	CALL CAPACITY11

	MOV AH,01H
	INT 21H

	MOV INPUTCAPACITY11,AL
	CMP INPUTCAPACITY11,'1'
	JE  CAP11_64
	CMP INPUTCAPACITY11,'2'
	JE CAP11_128

	JMP ERRORPHONE11

IPHONE11PRO:
	CALL CAPACITY11
	MOV AH,01H
	INT 21H
	MOV INPUTCAPACITY11,AL
	CMP INPUTCAPACITY11,'1'
	JE  CAP11PRO_64
	CMP INPUTCAPACITY11,'2'
	JE CAP11PRO_128

	JMP ERRORPHONE11

CAP11_64:
	MOV PRICE11_1,600		
	JMP DOWNPAY11_64

CAP11PRO_64:
	MOV PRICE11_2,840
	JMP DOWNPAY11PRO_64

CAP11_128:
	MOV PRICE11_1,624
	JMP DOWNPAY11_128

CAP11PRO_128:
	MOV PRICE11_2,864
	JMP DOWNPAY11PRO_128

TOINS11_64:
	JMP INS11_64
TOINS11_128:
	JMP INS11_128

DOWNPAY11_64:
	REPEATASK1:
	MOV AH,09H
	LEA DX,PROMPT_DOWNPAY11
	INT 21H
	
	MOV AH,01H
	INT 21H

	MOV DOWNPAY_CHOICE,AL
	CMP DOWNPAY_CHOICE,'Y'
	JE EARLYPAY11_64

	CMP DOWNPAY_CHOICE,'N'
	JE TOINS11_64

	JMP REPEATASK1

DOWNPAY11PRO_64:
	REPEATASK2:
	MOV AH,09H
	LEA DX,PROMPT_DOWNPAY11
	INT 21H
	
	MOV AH,01H
	INT 21H

	MOV DOWNPAY_CHOICE,AL
	CMP DOWNPAY_CHOICE,'Y'
	JE EARLYPAY11PRO_64

	CMP DOWNPAY_CHOICE,'N'
	JE TOINS11PRO_64

	JMP REPEATASK2

TOINS11PRO_64:
	JMP INS11PRO_64
TOINS11PRO_128:
	JMP INS11PRO_128

DOWNPAY11_128:
	REPEATASK3:
	MOV AH,09H
	LEA DX,PROMPT_DOWNPAY11
	INT 21H
	
	MOV AH,01H
	INT 21H

	MOV DOWNPAY_CHOICE,AL
	CMP DOWNPAY_CHOICE,'Y'
	JE EARLYPAY11_128

	CMP DOWNPAY_CHOICE,'N'
	JE TOINS11_128
	
	JMP REPEATASK3

DOWNPAY11PRO_128:
	REPEATASK4:
	MOV AH,09H
	LEA DX,PROMPT_DOWNPAY11
	INT 21H
	
	MOV AH,01H
	INT 21H

	MOV DOWNPAY_CHOICE,AL
	CMP DOWNPAY_CHOICE,'Y'
	;JE EARLYPAY11PRO_128

	CMP INS11_CHOICE,'N'
	JE TOINS11PRO_128
	JMP REPEATASK4

EARLYPAY11_64:
	MOV AX,PRICE11_1
	MOV B,120
	SUB AX,B
	MOV PRICE11_1,AX
	
	JMP INS11_64	

EARLYPAY11PRO_64:
	MOV AX,PRICE11_2
	MOV B,300
	SUB AX,B
	MOV PRICE11_2,AX
	
	JMP INS11PRO_64	

EARLYPAY11_128:
	MOV AX,PRICE11_1
	MOV B,120
	SUB AX,B
	MOV PRICE11_1,AX
	
	JMP INS11_128	


INS11_64:
	
	REPEAT1:
	MOV AH,09H
	LEA DX,PROMPT_INST11
	INT 21H
	
	MOV AH,01H
	INT 21H
	
	MOV INST,AL
	CMP INST,'1'
	JE DIV11_12
	CMP INST,'2'
	JE DIV11_24

	JMP REPEAT1

INS11_128:

	REPEAT2:
	MOV AH,09H
	LEA DX,PROMPT_INST11
	INT 21H
	
	MOV AH,01H
	INT 21H
	
	MOV INST,AL
	CMP INST,'1'
	JE DIV11_12
	CMP INST,'2'
	JE DIV11_24

	JMP REPEAT2
	
DIV11_12:
	MOV AH,09H
	LEA DX,RM
	INT 21H
	
	MOV AX,PRICE11_1	
	MOV BX,12
	MOV DX,0
	DIV BX
	
	MOV R1,AX
	mov ax, [R1] ; Load the number 800 into AX register
	
  call print_num ; Call a function to print the number
;
    	MOV AH,09H
	LEA DX,SHOWINST
	INT 21H
	JMP EXIT_PROGRAM
	
DIV11_24:
	MOV AH,09H
	LEA DX,RM
	INT 21H

	MOV AX,PRICE11_1	
	MOV BX,24
	MOV DX,0
	DIV BX
	
	MOV R1,AX
mov ax, [R1] ; Load the number 800 into AX register
	
  call print_num ; Call a function to print the number
;
    	MOV AH,09H
	LEA DX,SHOWINST
	INT 21H
	JMP EXIT_PROGRAM

INS11PRO_64:
	
	REPEAT3:
	MOV AH,09H
	LEA DX,PROMPT_INST11
	INT 21H
	
	MOV AH,01H
	INT 21H
	
	MOV INST,AL
	CMP INST,'1'
	JE DIV11PRO_12
	CMP INST,'2'
	JE DIV11PRO_24

	JMP REPEAT3

INS11PRO_128:

	REPEAT4:
	MOV AH,09H
	LEA DX,PROMPT_INST11
	INT 21H
	
	MOV AH,01H
	INT 21H
	
	MOV INST,AL
	CMP INST,'1'
	JE DIV11PRO_12
	CMP INST,'2'
	JE DIV11PRO_24

	JMP REPEAT4



DIV11PRO_12:
	MOV AH,09H
	LEA DX,RM
	INT 21H

	MOV AX,PRICE11_2	
	MOV BX,12
	MOV DX,0
	DIV BX
	
	MOV R1,AX
mov ax, [R1] ; Load the number 800 into AX register
	
  call print_num ; Call a function to print the number
;
    	MOV AH,09H
	LEA DX,SHOWINST
	INT 21H
	JMP EXIT_PROGRAM



DIV11PRO_24:
	MOV AH,09H
	LEA DX,RM
	INT 21H

	MOV AX,PRICE11_2	
	MOV BX,24
	MOV DX,0
	DIV BX
	
	MOV R1,AX
mov ax, [R1] ; Load the number 800 into AX register
	
  call print_num ; Call a function to print the number
;
    	MOV AH,09H
	LEA DX,SHOWINST
	INT 21H
	JMP EXIT_PROGRAM




ERRORPHONE11:
	LEA DX,ER_MSG               ;PRINT ERROR MESSAGE 
     	MOV AH,9
     	INT 21H 
                                 ;IF USER GIVES AN ERROR THEN USER WILL BE ASKED TO INPUT AGAIN
     	JMP ASKPHONE11
	

SERIES12:
	MOV AH,9
	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H
	     
      
	MOV AH,9 
     	LEA DX,INFO_PHONE                 ;PRINT INFO STRING
     	INT 21H                     
      

	MOV AH,9
	LEA DX,PHONE12_1	;PRINT PHONE12 STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	LEA DX,PHONE12_2	;PRINT PHONE12PRO STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	LEA DX,PHONE12_3	;PRINT PHONE12PROMAX STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	MOV AH,9
	LEA DX,PROMPT_PHONE
	INT 21H
	
	LEA DX,NL
	INT 21H

	JMP ASKPHONE12

ASKPHONE12:
	LEA DX,E_CHOICE
	INT 21H

	MOV AH,1                    ;TAKE AN INPUT & SAVED TO AL
	INT 21H 

	MOV USEROPTION,AL
	
	CMP USEROPTION,49
	JE BUYPHONE12

	CMP USEROPTION,50
	JE BACK1

	JMP ERRORPHONE12

BACK1:
	JMP CAT_MENU
BUYPHONE12:
	MOV AX,2800
	MOV PRICE12_1,AX
	MOV AX,3100
	MOV PRICE12_2,AX
	MOV AX,3400
	MOV PRICE12_3,AX
	MOV AH,09H
	LEA DX,PROMPT_ORDER
	INT 21H
	LEA DX,E_CHOICE
	INT 21H


ERRORPHONE12:
	LEA DX,ER_MSG               ;PRINT ERROR MESSAGE 
     	MOV AH,9
     	INT 21H 
                                 ;IF USER GIVES AN ERROR THEN USER WILL BE ASKED TO INPUT AGAIN
     	JMP ASKPHONE11

SERIES13:
	MOV AH,9
	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H
	
	MOV BL,10                   ;COLOR CODE
     	MOV AH,9 
     	MOV AL,0  
     	INT 10H                
      
	MOV AH,9 
     	LEA DX,INFO_PHONE                 ;PRINT INFO STRING
     	INT 21H                     
   

	MOV AH,9
	LEA DX,PHONE13_1	;PRINT PHONE13 STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	LEA DX,PHONE13_2	;PRINT PHONE13PRO STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	LEA DX,PHONE13_3	;PRINT PHONE13PROMAX STRING
	INT 21H

	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H

	MOV AH,9
	LEA DX,PROMPT_PHONE
	INT 21H
	
	LEA DX,NL
	INT 21H

	JMP ASKPHONE13
	

ASKPHONE13:
	LEA DX,E_CHOICE
	INT 21H

	MOV AH,1                    ;TAKE AN INPUT & SAVED TO AL
	INT 21H 

	MOV USEROPTION,AL
	
	CMP USEROPTION,49
	JE BUYPHONE13

	CMP USEROPTION,50
	JE BACK

	JMP ERRORPHONE13
BACK:
	JMP CAT_MENU


BUYPHONE13:
	MOV AX,3200
	MOV PRICE13_1,AX
	MOV AX,3500
	MOV PRICE13_2,AX
	MOV AX,4100
	MOV PRICE13_3,AX
	MOV AH,09H
	LEA DX,PROMPT_ORDER
	INT 21H
	LEA DX,E_CHOICE
	INT 21H
	


ERRORPHONE13:
	LEA DX,ER_MSG               ;PRINT ERROR MESSAGE 
     	MOV AH,9
     	INT 21H 
                                 ;IF USER GIVES AN ERROR THEN USER WILL BE ASKED TO INPUT AGAIN
     	JMP ASKPHONE13



main proc
	mov ax,@data
	mov ds,ax
	
	MOV AH,09h
	LEA DX,WLC_MSG
	INT 21H
	
	MOV AH,9
	LEA DX,NL                   ;PRINT A NEW LINE
     	INT 21H     

	

	JMP CAT_MENU



main endp

	
	
CAPACITY11 proc
	PUSH AX
	MOV AH,09H
	LEA DX,PROMPT_CAPACITY
	INT 21H
	LEA DX,CAPACITY11_1
	INT 21H
	LEA DX,CAPACITY11_2
	INT 21H
	LEA DX,NL
	INT 21H
	LEA DX,E_CHOICE
	INT 21H
	LEA DX,NL
	INT 21H
	POP AX
	RET
CAPACITY11 endp


EXIT_PROGRAM:	
	mov ah,4ch
	int 21h 
end main	
	

