Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-1


       1				.MODEL      SMALL 
       2 0064				.STACK      100 
       3 0000				.DATA 
       4				 
       5 0000  24 24 24			bcdInputBuffer  DB  "$$$" 
       6				 
       7 0003  20 20 20 20 20 20 20	abcLogo         DB "                   
					          **      ******      ******", 
					 10d, 13d 
       8       20 20 20 20 20 20 20	
       9       20 20 20 20 20 20 20	
      10       20 20 20 20 20 20 20	
      11       20 2A 2A 20 20 20 20	
      12       20 20 2A 2A 2A 2A 2A	
      13       2A 20 20 20 20 20 20	
      14       2A 2A 2A 2A 2A 2A 0A	
      15       0D			
      16 003C  20 20 20 20 20 20 20	                DB "                   
					         ****    /*////**    **////**",
					 10d, 13d 
      17       20 20 20 20 20 20 20	
      18       20 20 20 20 20 20 20	
      19       20 20 20 20 20 20 20	
      20       2A 2A 2A 2A 20 20 20	
      21       20 2F 2A 2F 2F 2F 2F	
      22       2A 2A 20 20 20 20 2A	
      23       2A 2F 2F 2F 2F 2A 2A	
      24       0A 0D			
      25 0076  20 20 20 20 20 20 20	                DB "                   
					        **//**   /*   /**   **    // ",
					 10d, 13d 
      26       20 20 20 20 20 20 20	
      27       20 20 20 20 20 20 20	
      28       20 20 20 20 20 20 2A	
      29       2A 2F 2F 2A 2A 20 20	
      30       20 2F 2A 20 20 20 2F	
      31       2A 2A 20 20 20 2A 2A	
      32       20 20 20 20 2F 2F 20	
      33       0A 0D			
      34 00B0  20 20 20 20 20 20 20	                DB "                   
					       **  //**  /******   /**       ",
					 10d, 13d 
      35       20 20 20 20 20 20 20	
      36       20 20 20 20 20 20 20	
      37       20 20 20 20 20 2A 2A	
      38       20 20 2F 2F 2A 2A 20	
      39       20 2F 2A 2A 2A 2A 2A	
      40       2A 20 20 20 2F 2A 2A	
      41       20 20 20 20 20 20 20	
      42       0A 0D			
      43 00EA  20 20 20 20 20 20 20	                DB "                   
					      ********** /*//// ** /**       ",
					 10d, 13d 
      44       20 20 20 20 20 20 20	
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-2


      45       20 20 20 20 20 20 20	
      46       20 20 20 20 2A 2A 2A	
      47       2A 2A 2A 2A 2A 2A 2A	
      48       20 2F 2A 2F 2F 2F 2F	
      49       20 2A 2A 20 2F 2A 2A	
      50       20 20 20 20 20 20 20	
      51       0A 0D			
      52 0124  20 20 20 20 20 20 20	                DB "                   
					     /**//////** /*    /** //**    **",
					 10d, 13d 
      53       20 20 20 20 20 20 20	
      54       20 20 20 20 20 20 20	
      55       20 20 20 2F 2A 2A 2F	
      56       2F 2F 2F 2F 2F 2A 2A	
      57       20 2F 2A 20 20 20 20	
      58       2F 2A 2A 20 2F 2F 2A	
      59       2A 20 20 20 20 2A 2A	
      60       0A 0D			
      61 015E  20 20 20 20 20 20 20	                DB "                   
					     /**     /** /*******   //****** ",
					 10d, 13d 
      62       20 20 20 20 20 20 20	
      63       20 20 20 20 20 20 20	
      64       20 20 20 2F 2A 2A 20	
      65       20 20 20 20 2F 2A 2A	
      66       20 2F 2A 2A 2A 2A 2A	
      67       2A 2A 20 20 20 2F 2F	
      68       2A 2A 2A 2A 2A 2A 20	
      69       0A 0D			
      70 0198  20 20 20 20 20 20 20	                DB "                   
					     //      //  ///////     //////  $"
					 
      71       20 20 20 20 20 20 20	
      72       20 20 20 20 20 20 20	
      73       20 20 20 2F 2F 20 20	
      74       20 20 20 20 2F 2F 20	
      75       20 2F 2F 2F 2F 2F 2F	
      76       2F 20 20 20 20 20 2F	
      77       2F 2F 2F 2F 2F 20 20	
      78       24			
      79				 
      80				;++++++++++++++++++++++++++++++++++++++
					++++++++LOGIN SECTION++++++++++++++++++
					++++++++++++++++++++++++++++++++++ 
      81 01D1  05			loginChances    DB  5 
      82 01D2  00			loginState      DB  0 
      83				 
      84 01D3  03			userNumber      DB  3 
      85 01D4  32 32 30 31 36 31 30	loginInfo       DB  "2201610$$$","12345
					ABC$$$$$$$$$$$$" 
      86       24 24 24 31 32 33 34	
      87       35 41 42 43 24 24 24	
      88       24 24 24 24 24 24 24	
      89       24 24			
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-3


      90 01F2  53 32 32 30 31 31 33	                DB  "S2201130$$","67890
					XYZ$$$$$$$$$$$$" 
      91       30 24 24 36 37 38 39	
      92       30 58 59 5A 24 24 24	
      93       24 24 24 24 24 24 24	
      94       24 24			
      95 0210  31 24 24 24 24 24 24	                DB  "1$$$$$$$$$","1$$$$
					$$$$$$$$$$$$$$$" 
      96       24 24 24 31 24 24 24	
      97       24 24 24 24 24 24 24	
      98       24 24 24 24 24 24 24	
      99       24 24			
     100				 
     101 022E  0050[			loginHeader     DB  80 DUP("=") 
     102	   3D			
     103			 ]	
     104				
     105 027E  0023[			                DB  35 DUP(" "), "LOGIN
					 PAGE" 
     106	   20			
     107			 ]	
     108       4C 4F 47 49 4E 20 50	
     109       41 47 45			
     110 02AB  0A			                DB  10d 
     111 02AC  0050[			                DB  80 DUP("=") 
     112	   3D			
     113			 ]	
     114				
     115 02FC  24			                DB  "$" 
     116				 
     117 02FD  20 20 20 20 20 20 20	loginBorder     DB  "                  
					", 201d, 40 DUP(205d), 187d, 10d 
     118       20 20 20 20 20 20 20	
     119       20 20 20 20 C9		
     120       0028[			
     121	   CD			
     122			 ]	
     123       BB 0A			
     124 033A  20 20 20 20 20 20 20	                DB  "                  
					", 186d, 40 DUP(" ") , 186d, 10d 
     125       20 20 20 20 20 20 20	
     126       20 20 20 20 BA		
     127       0028[			
     128	   20			
     129			 ]	
     130       BA 0A			
     131 0377  20 20 20 20 20 20 20	                DB  "                  
					", 204d, 40 DUP(205d), 185d, 10d 
     132       20 20 20 20 20 20 20	
     133       20 20 20 20 CC		
     134       0028[			
     135	   CD			
     136			 ]	
     137       B9 0A			
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-4


     138 03B4  20 20 20 20 20 20 20	                DB  "                  
					", 186d, 40 DUP(" ") , 186d, 10d 
     139       20 20 20 20 20 20 20	
     140       20 20 20 20 BA		
     141       0028[			
     142	   20			
     143			 ]	
     144       BA 0A			
     145 03F1  20 20 20 20 20 20 20	                DB  "                  
					", 200d, 40 DUP(205d), 188d 
     146       20 20 20 20 20 20 20	
     147       20 20 20 20 C8		
     148       0028[			
     149	   CD			
     150			 ]	
     151       BC			
     152 042D  24			                DB  "$" 
     153				 
     154 042E  55 73 65 72 6E 61 6D	promptUsername  DB  "Username: $" 
     155       65 3A 20 24		
     156 0439  50 61 73 73 77 6F 72	promptPassword  DB  "Password: $" 
     157       64 3A 20 24		
     158				 
     159 0444  55 53 45 52 20 4E 4F	userNotFound    DB  "USER NOT FOUND!$" 
     160       54 20 46 4F 55 4E 44	
     161       21 24			
     162 0454  57 52 4F 4E 47 20 50	passWrong       DB  "WRONG PASSWORD$" 
     163       41 53 53 57 4F 52 44	
     164       24			
     165				 
     166 0463  4C 4F 47 49 4E 20 53	successfulLogin DB  "LOGIN SUCCESSFUL!$
					" 
     167       55 43 43 45 53 53 46	
     168       55 4C 21 24		
     169 0475  4C 4F 47 49 4E 20 46	failedLogin1    DB  "LOGIN FAILED $" 
     170       41 49 4C 45 44 20 24	
     171 0483  20 43 48 41 4E 43 45	failedLogin2    DB  " CHANCES LEFT!$" 
     172       53 20 4C 45 46 54 21	
     173       24			
     174 0492  4E 6F 20 6D 6F 72 65	noMoreChance    DB  "No more login chan
					ces...$" 
     175       20 6C 6F 67 69 6E 20	
     176       63 68 61 6E 63 65 73	
     177       2E 2E 2E 24		
     178				 
     179 04AB  50 72 65 73 73 20 61	anyKeyToCont    DB  "Press any key to c
					ontinue!$" 
     180       6E 79 20 6B 65 79 20	
     181       74 6F 20 63 6F 6E 74	
     182       69 6E 75 65 21 24	
     183				 
     184 04C6  54 45 53 54 20 53 54	testStr         DB  "TEST STRING$" 
     185       52 49 4E 47 24		
     186				 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-5


     187 04D2  20			buffer          DB 32 
     188 04D3  ??			                DB ? 
     189 04D4  0020[			                DB 32 DUP(0) 
     190	   00			
     191			 ]	
     192				
     193 04F4  24			                DB "$" 
     194				 
     195 04F5  000A[			inputUsername   DB  10 DUP("$") 
     196	   24			
     197			 ]	
     198				
     199 04FF  0014[			inputPassword   DB  20 DUP("$") 
     200	   24			
     201			 ]	
     202				
     203				 
     204 0513  20 20 20 20 20 20 20	skull           DB  "        .... NO! .
					..                  ... MNO! ...       
					  ", 10d 
     205       20 2E 2E 2E 2E 20 4E	
     206       4F 21 20 2E 2E 2E 20	
     207       20 20 20 20 20 20 20	
     208       20 20 20 20 20 20 20	
     209       20 20 20 2E 2E 2E 20	
     210       4D 4E 4F 21 20 2E 2E	
     211       2E 20 20 20 20 20 20	
     212       20 20 20 0A		
     213 054F  20 20 20 20 20 20 2E	                DB  "      ..... MNO!! 
					...................... MNNOO! ...      
					  ", 10d 
     214       2E 2E 2E 2E 20 4D 4E	
     215       4F 21 21 20 2E 2E 2E	
     216       2E 2E 2E 2E 2E 2E 2E	
     217       2E 2E 2E 2E 2E 2E 2E	
     218       2E 2E 2E 2E 2E 20 4D	
     219       4E 4E 4F 4F 21 20 2E	
     220       2E 2E 20 20 20 20 20	
     221       20 20 20 0A		
     222 058B  20 20 20 20 20 20 20	                DB  "        ..... MMNO
					! ......................... MNNOO!! .  
					  ", 10d 
     223       20 2E 2E 2E 2E 2E 20	
     224       4D 4D 4E 4F 21 20 2E	
     225       2E 2E 2E 2E 2E 2E 2E	
     226       2E 2E 2E 2E 2E 2E 2E	
     227       2E 2E 2E 2E 2E 2E 2E	
     228       2E 2E 2E 20 4D 4E 4E	
     229       4F 4F 21 21 20 2E 20	
     230       20 20 20 0A		
     231 05C7  20 20 20 20 20 20 20	                DB  "        .... MNOON
					NOO!   MMMMMMMMMMPPPOII!   MNNO!!!! .  
					  ", 10d 
     232       20 2E 2E 2E 2E 20 4D	
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-6


     233       4E 4F 4F 4E 4E 4F 4F	
     234       21 20 20 20 4D 4D 4D	
     235       4D 4D 4D 4D 4D 4D 4D	
     236       50 50 50 4F 49 49 21	
     237       20 20 20 4D 4E 4E 4F	
     238       21 21 21 21 20 2E 20	
     239       20 20 20 0A		
     240 0603  20 20 20 20 20 20 20	                DB  "        ... !O! NN
					O! MMMMMMMMMMMMMPPPOOOII!! NO! ....    
					  ", 10d 
     241       20 2E 2E 2E 20 21 4F	
     242       21 20 4E 4E 4F 21 20	
     243       4D 4D 4D 4D 4D 4D 4D	
     244       4D 4D 4D 4D 4D 4D 50	
     245       50 50 4F 4F 4F 49 49	
     246       21 21 20 4E 4F 21 20	
     247       2E 2E 2E 2E 20 20 20	
     248       20 20 20 0A		
     249 063F  20 20 20 20 20 20 20	                DB  "            ......
					 ! MMMMMMMMMMMMMPPPPOOOOIII! ! ...     
					  ", 10d 
     250       20 20 20 20 20 2E 2E	
     251       2E 2E 2E 2E 20 21 20	
     252       4D 4D 4D 4D 4D 4D 4D	
     253       4D 4D 4D 4D 4D 4D 50	
     254       50 50 50 4F 4F 4F 4F	
     255       49 49 49 21 20 21 20	
     256       2E 2E 2E 20 20 20 20	
     257       20 20 20 0A		
     258 067B  20 20 20 20 20 20 20	                DB  "        ........ M
					MMMMMMMMMMMPPPPPOOOOOOII!! .....       
					  ", 10d 
     259       20 2E 2E 2E 2E 2E 2E	
     260       2E 2E 20 4D 4D 4D 4D	
     261       4D 4D 4D 4D 4D 4D 4D	
     262       4D 50 50 50 50 50 4F	
     263       4F 4F 4F 4F 4F 49 49	
     264       21 21 20 2E 2E 2E 2E	
     265       2E 20 20 20 20 20 20	
     266       20 20 20 0A		
     267 06B7  20 20 20 20 20 20 20	                DB  "        ........ M
					MMMMOOOOOOPPPPPPPPOOOOMII! ...         
					  ", 10d 
     268       20 2E 2E 2E 2E 2E 2E	
     269       2E 2E 20 4D 4D 4D 4D	
     270       4D 4F 4F 4F 4F 4F 4F	
     271       50 50 50 50 50 50 50	
     272       50 4F 4F 4F 4F 4D 49	
     273       49 21 20 2E 2E 2E 20	
     274       20 20 20 20 20 20 20	
     275       20 20 20 0A		
     276 06F3  20 20 20 20 20 20 20	                DB  "            ......
					. MMMMM..    OPPMMP    .,OMI! ....     
					  ", 10d 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-7


     277       20 20 20 20 20 2E 2E	
     278       2E 2E 2E 2E 2E 20 4D	
     279       4D 4D 4D 4D 2E 2E 20	
     280       20 20 20 4F 50 50 4D	
     281       4D 50 20 20 20 20 2E	
     282       2C 4F 4D 49 21 20 2E	
     283       2E 2E 2E 20 20 20 20	
     284       20 20 20 0A		
     285 072F  20 20 20 20 20 20 20	                DB  "            ......
					 MMMM::   o.,OPMP,.o   ::I!! ...       
					  ", 10d 
     286       20 20 20 20 20 2E 2E	
     287       2E 2E 2E 2E 20 4D 4D	
     288       4D 4D 3A 3A 20 20 20	
     289       6F 2E 2C 4F 50 4D 50	
     290       2C 2E 6F 20 20 20 3A	
     291       3A 49 21 21 20 2E 2E	
     292       2E 20 20 20 20 20 20	
     293       20 20 20 0A		
     294 076B  20 20 20 20 20 20 20	                DB  "                ..
					.. NNM:::.,,OOPM!P,.::::!! ....        
					  ", 10d 
     295       20 20 20 20 20 20 20	
     296       20 20 2E 2E 2E 2E 20	
     297       4E 4E 4D 3A 3A 3A 2E	
     298       2C 2C 4F 4F 50 4D 21	
     299       50 2C 2E 3A 3A 3A 3A	
     300       21 21 20 2E 2E 2E 2E	
     301       20 20 20 20 20 20 20	
     302       20 20 20 0A		
     303 07A7  20 20 20 20 20 20 20	                DB  "                ..
					 MMNNNNNOOOOPMO!!IIPPO!!O! .....       
					  ", 10d 
     304       20 20 20 20 20 20 20	
     305       20 20 2E 2E 20 4D 4D	
     306       4E 4E 4E 4E 4E 4F 4F	
     307       4F 4F 50 4D 4F 21 21	
     308       49 49 50 50 4F 21 21	
     309       4F 21 20 2E 2E 2E 2E	
     310       2E 20 20 20 20 20 20	
     311       20 20 20 0A		
     312 07E3  20 20 20 20 20 20 20	                DB  "                ..
					. MMMMMNNNNOO:!!:!!IPPPPOO! ....       
					  ", 10d 
     313       20 20 20 20 20 20 20	
     314       20 20 2E 2E 2E 20 4D	
     315       4D 4D 4D 4D 4E 4E 4E	
     316       4E 4F 4F 3A 21 21 3A	
     317       21 21 49 50 50 50 50	
     318       4F 4F 21 20 2E 2E 2E	
     319       2E 20 20 20 20 20 20	
     320       20 20 20 0A		
     321 081F  20 20 20 20 20 20 20	                DB  "                ..
					 MMMMMNNOOMMNNIIIPPPOO!! ......        
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-8


					  ", 10d 
     322       20 20 20 20 20 20 20	
     323       20 20 2E 2E 20 4D 4D	
     324       4D 4D 4D 4E 4E 4F 4F	
     325       4D 4D 4E 4E 49 49 49	
     326       50 50 50 4F 4F 21 21	
     327       20 2E 2E 2E 2E 2E 2E	
     328       20 20 20 20 20 20 20	
     329       20 20 20 0A		
     330 085B  20 20 20 20 20 20 20	                DB  "                ..
					.... MMMONNMMNNNIIIOO!..........       
					  ", 10d 
     331       20 20 20 20 20 20 20	
     332       20 20 2E 2E 2E 2E 2E	
     333       2E 20 4D 4D 4D 4F 4E	
     334       4E 4D 4D 4E 4E 4E 49	
     335       49 49 4F 4F 21 2E 2E	
     336       2E 2E 2E 2E 2E 2E 2E	
     337       2E 20 20 20 20 20 20	
     338       20 20 20 0A		
     339 0897  20 20 20 20 20 20 20	                DB  "            ......
					. MN MOMMMNNNIIIIIO! OO ..........     
					  ", 10d 
     340       20 20 20 20 20 2E 2E	
     341       2E 2E 2E 2E 2E 20 4D	
     342       4E 20 4D 4F 4D 4D 4D	
     343       4E 4E 4E 49 49 49 49	
     344       49 4F 21 20 4F 4F 20	
     345       2E 2E 2E 2E 2E 2E 2E	
     346       2E 2E 2E 20 20 20 20	
     347       20 20 20 0A		
     348 08D3  20 20 20 20 20 20 20	                DB  "            ......
					... MNO! IiiiiiiiiiiiI OOOO ...........
					  ", 10d 
     349       20 20 20 20 20 2E 2E	
     350       2E 2E 2E 2E 2E 2E 2E	
     351       20 4D 4E 4F 21 20 49	
     352       69 69 69 69 69 69 69	
     353       69 69 69 69 49 20 4F	
     354       4F 4F 4F 20 2E 2E 2E	
     355       2E 2E 2E 2E 2E 2E 2E	
     356       2E 20 20 0A		
     357 090F  20 20 20 20 20 20 20	                DB  "        ...... NNN
					.MNO! . O!!!!!!!!!O . OONO NO! ........
					  ", 10d 
     358       20 2E 2E 2E 2E 2E 2E	
     359       20 4E 4E 4E 2E 4D 4E	
     360       4F 21 20 2E 20 4F 21	
     361       21 21 21 21 21 21 21	
     362       21 4F 20 2E 20 4F 4F	
     363       4E 4F 20 4E 4F 21 20	
     364       2E 2E 2E 2E 2E 2E 2E	
     365       2E 20 20 0A		
     366 094B  20 20 20 20 20 20 20	                DB  "        .... MNNNN
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-9


					NO! ...OOOOOOOOOOO .  MMNNON!........  
					  ", 10d 
     367       20 2E 2E 2E 2E 20 4D	
     368       4E 4E 4E 4E 4E 4F 21	
     369       20 2E 2E 2E 4F 4F 4F	
     370       4F 4F 4F 4F 4F 4F 4F	
     371       4F 20 2E 20 20 4D 4D	
     372       4E 4E 4F 4E 21 2E 2E	
     373       2E 2E 2E 2E 2E 2E 20	
     374       20 20 20 0A		
     375 0987  20 20 20 20 20 20 20	                DB  "        ...... MNN
					NNO! .. PPPPPPPPP .. MMNON!........    
					  ", 10d 
     376       20 2E 2E 2E 2E 2E 2E	
     377       20 4D 4E 4E 4E 4E 4F	
     378       21 20 2E 2E 20 50 50	
     379       50 50 50 50 50 50 50	
     380       20 2E 2E 20 4D 4D 4E	
     381       4F 4E 21 2E 2E 2E 2E	
     382       2E 2E 2E 2E 20 20 20	
     383       20 20 20 0A		
     384 09C3  20 20 20 20 20 20 20	                DB  "            ......
					 OO! ................. ON! .......     
					  $", 10d 
     385       20 20 20 20 20 2E 2E	
     386       2E 2E 2E 2E 20 4F 4F	
     387       21 20 2E 2E 2E 2E 2E	
     388       2E 2E 2E 2E 2E 2E 2E	
     389       2E 2E 2E 2E 2E 20 4F	
     390       4E 21 20 2E 2E 2E 2E	
     391       2E 2E 2E 20 20 20 20	
     392       20 20 20 24 0A		
     393				 
     394 = 001E				accountSize     EQU 30 
     395 = 0000				usernameOffset  EQU 0 
     396 = 000A				passwordOffset  EQU 10 
     397				;++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					++++++++++ 
     398				 
     399				;++++++++++++++++++++++++++++++++++++++
					++++++++MENU SECTION+++++++++++++++++++
					+++++++++++++++++++++++++++++++++ 
     400				 
     401 0A00  20 20 20 20 20 20 20	menuHeader      DB          "          
					                   __   __      __   __
					   __  ", 10d 
     402       20 20 20 20 20 20 20	
     403       20 20 20 20 20 20 20	
     404       20 20 20 20 20 20 20	
     405       20 5F 5F 20 20 20 5F	
     406       5F 20 20 20 20 20 20	
     407       5F 5F 20 20 20 5F 5F	
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-10


     408       20 20 20 5F 5F 20 20	
     409       0A			
     410 0A39  20 20 20 20 20 20 20	                DB          "          
					              /\  |__) /  `    |__) /  
					\ /__` ", 10d 
     411       20 20 20 20 20 20 20	
     412       20 20 20 20 20 20 20	
     413       20 20 20 2F 5C 20 20	
     414       7C 5F 5F 29 20 2F 20	
     415       20 60 20 20 20 20 7C	
     416       5F 5F 29 20 2F 20 20	
     417       5C 20 2F 5F 5F 60 20	
     418       0A			
     419 0A72  20 20 20 20 20 20 20	                DB          "          
					             /~~\ |__) \__,    |    \__
					/ .__/ $" 
     420       20 20 20 20 20 20 20	
     421       20 20 20 20 20 20 20	
     422       20 20 2F 7E 7E 5C 20	
     423       7C 5F 5F 29 20 5C 5F	
     424       5F 2C 20 20 20 20 7C	
     425       20 20 20 20 5C 5F 5F	
     426       2F 20 2E 5F 5F 2F 20	
     427       24			
     428				 
     429 0AAB  0028[			divider         DB          40 DUP ("->
					"),"$" 
     430	   2D 3E		
     431			 ]	
     432       24			
     433				 
     434 0AFC  20 20 20 20 20 20 20	menuBorder      DB          "        __
					_______________________________________
					______________ "         ,10d 
     435       20 5F 5F 5F 5F 5F 5F	
     436       5F 5F 5F 5F 5F 5F 5F	
     437       5F 5F 5F 5F 5F 5F 5F	
     438       5F 5F 5F 5F 5F 5F 5F	
     439       5F 5F 5F 5F 5F 5F 5F	
     440       5F 5F 5F 5F 5F 5F 5F	
     441       5F 5F 5F 5F 5F 5F 5F	
     442       5F 5F 5F 5F 5F 5F 5F	
     443       20 0A			
     444 0B3D  20 20 20 20 20 20 20	                DB          "       /\ 
					                                       
					              \"         ,10d 
     445       2F 5C 20 20 20 20 20	
     446       20 20 20 20 20 20 20	
     447       20 20 20 20 20 20 20	
     448       20 20 20 20 20 20 20	
     449       20 20 20 20 20 20 20	
     450       20 20 20 20 20 20 20	
     451       20 20 20 20 20 20 20	
     452       20 20 20 20 20 20 20	
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-11


     453       5C 0A			
     454 0B7E  20 20 20 28 4F 29 3D	                DB          "   (O)===)
					><><><><><><><><><><><><><><><><><><><>
					<><><><><><><><)==(O)"   ,10d 
     455       3D 3D 29 3E 3C 3E 3C	
     456       3E 3C 3E 3C 3E 3C 3E	
     457       3C 3E 3C 3E 3C 3E 3C	
     458       3E 3C 3E 3C 3E 3C 3E	
     459       3C 3E 3C 3E 3C 3E 3C	
     460       3E 3C 3E 3C 3E 3C 3E	
     461       3C 3E 3C 3E 3C 3E 3C	
     462       3E 3C 3E 3C 3E 3C 3E	
     463       3C 29 3D 3D 28 4F 29	
     464       0A			
     465 0BC5  20 20 20 20 20 20 20	                DB          "       \/'
					'''''''''''''''''''''''''''''''''''''''
					''''''''''''''/"         ,10d 
     466       5C 2F 27 27 27 27 27	
     467       27 27 27 27 27 27 27	
     468       27 27 27 27 27 27 27	
     469       27 27 27 27 27 27 27	
     470       27 27 27 27 27 27 27	
     471       27 27 27 27 27 27 27	
     472       27 27 27 27 27 27 27	
     473       27 27 27 27 27 27 27	
     474       2F 0A			
     475 0C06  0005[			                DB    5 DUP("       (  
					                                       
					             (",10d,"        )         
					               
     476	   20 20 20 20 20	
     477	   20 20 28 20 20	
     478	   20 20 20 20 20	
     479	   20 20 20 20 20	
     480	   20 20 20 20 20	
     481	   20 20 20 20 20	
     482	   20 20 20 20 20	
     483	   20 20 20 20 20	
     484	   20 20 20 20 20	
     485	   20 20 20 20 20	
     486	   20 20 20 20 20	
     487	   20 20 20 20 20	
     488	   20 20 28		
     489	   0A			
     490	   20 20 20 20 20	
     491	   20 20 20 29 20	
     492	   20 20 20 20 20	
     493	   20 20 20 20 20	
     494	   20 20 20 20 20	
     495	   20 20 20 20 20	
     496	   20 20 20 20 20	
     497	   20 20 20 20 20	
     498	   20 20 20 20 20	
     499	   20 20 20 20 20	
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-12


     500	   20 20 20 20 20	
     501	   20 20 20 20 20	
     502	   20 20 20 29		
     503	   0A			
     504			 ]	
     505				
     506 0E8B  20 20 20 20 20 20 20	                DB          "       /\'
					'''''''''''''''''''''''''''''''''''''''
					''''''''''''''\    "     ,10d 
     507       2F 5C 27 27 27 27 27	
     508       27 27 27 27 27 27 27	
     509       27 27 27 27 27 27 27	
     510       27 27 27 27 27 27 27	
     511       27 27 27 27 27 27 27	
     512       27 27 27 27 27 27 27	
     513       27 27 27 27 27 27 27	
     514       27 27 27 27 27 27 27	
     515       5C 20 20 20 20 0A	
     516 0ED0  20 20 20 28 4F 29 3D	                DB          "   (O)===)
					><><><><><><><><><><><><><><><><><><><>
					<><><><><><><><)==(O)"   ,10d 
     517       3D 3D 29 3E 3C 3E 3C	
     518       3E 3C 3E 3C 3E 3C 3E	
     519       3C 3E 3C 3E 3C 3E 3C	
     520       3E 3C 3E 3C 3E 3C 3E	
     521       3C 3E 3C 3E 3C 3E 3C	
     522       3E 3C 3E 3C 3E 3C 3E	
     523       3C 3E 3C 3E 3C 3E 3C	
     524       3E 3C 3E 3C 3E 3C 3E	
     525       3C 29 3D 3D 28 4F 29	
     526       0A			
     527 0F17  20 20 20 20 20 20 20	                DB          "       \/_
					_______________________________________
					______________/"         ,10d 
     528       5C 2F 5F 5F 5F 5F 5F	
     529       5F 5F 5F 5F 5F 5F 5F	
     530       5F 5F 5F 5F 5F 5F 5F	
     531       5F 5F 5F 5F 5F 5F 5F	
     532       5F 5F 5F 5F 5F 5F 5F	
     533       5F 5F 5F 5F 5F 5F 5F	
     534       5F 5F 5F 5F 5F 5F 5F	
     535       5F 5F 5F 5F 5F 5F 5F	
     536       2F 0A			
     537 0F58  24			                DB          "$" 
     538				 
     539 0F59  31 29 20 20 20 20 20	menuSelections  DB          "1)     SAL
					ES$$$$$$$$"  
     540       53 41 4C 45 53 24 24	
     541       24 24 24 24 24 24	
     542 0F6D  32 29 20 20 20 20 20	                DB          "2)     CUS
					TOMER$$$$$" 
     543       43 55 53 54 4F 4D 45	
     544       52 24 24 24 24 24	
     545 0F81  33 29 20 20 20 20 20	                DB          "3)     EXI
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-13


					T$$$$$$$$$" 
     546       45 58 49 54 24 24 24	
     547       24 24 24 24 24 24	
     548				 
     549 0F95  01			currentSel      DB          1 
     550				 
     551 = 0003				maxSel          EQU         3 
     552				 
     553				;++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					++++++++++ 
     554				 
     555				;++++++++++++++++++++++++++++++++++++++
					++++++++EXIT SECTION+++++++++++++++++++
					+++++++++++++++++++++++++++++++++ 
     556				 
     557 0F96  45 58 49 54 20 50 4F	confirmExit     DB  "EXIT POS SYSTEM ?$
					" 
     558       53 20 53 59 53 54 45	
     559       4D 20 3F 24		
     560				 
     561 0FA8  5B 20 59 20 45 20 53	yesStr          DB  "[ Y E S ]$" 
     562       20 5D 24			
     563				 
     564 0FB2  5B 20 4E 20 4F 20 5D	noStr           DB  "[ N O ]$" 
     565       24			
     566				 
     567 0FBA  01			exitSel         DB  1 
     568				 
     569 0FBB  00			exitBox         DB  00000000b   ;colour
					   
     570 0FBC  07 0C			                DB  7   ,12         ;fi
					rst corner (row, column) 
     571 0FBE  13 40			                DB  19  ,64       ;seco
					nd corner 
     572				 
     573 0FC0  8F			exitBox1        DB  10001111b   ;colour
					   
     574 0FC1  04 08			                DB  4    ,8         ;fi
					rst corner (row, column) 
     575 0FC3  12 3C			                DB  18   ,60      ;seco
					nd corner 
     576				 
     577 0FC5  FF			exitBox2        DB  11111111b   ;colour
					   
     578 0FC6  04 08			                DB  4    ,8         ;fi
					rst corner (row, column) 
     579 0FC8  11 3A			                DB  17   ,58      ;seco
					nd corner 
     580				 
     581 0FCA  70			exitBox3        DB  01110000b   ;colour
					   
     582 0FCB  05 0A			                DB  5    ,10         ;f
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-14


					irst corner (row, column) 
     583 0FCD  11 3A			                DB  17   ,58      ;seco
					nd corner 
     584				 
     585 0FCF  0E 10			yesPos          DB  14  ,16 
     586 0FD1  0E 2A			noPos           DB  14  ,42 
     587				;++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					++++++++++ 
     588				 
     589				;++++++++++++++++++++++++++++++++++++++
					++++++++SALES SECTION++++++++++++++++++
					++++++++++++++++++++++++++++++++++ 
     590 0FD3  01			itemSelectionChoice DB  1 
     591				 
     592 0FD4  08			numberOfItems   DB  8 
     593				                       ;1        0     
					    01           qty 
     594 0FD5  01 4C 65 6D 6F 6E 73	items           DB  1, "Lemons$$$$$$$$$
					$$$$$1.20$$$$", 16 
     595       24 24 24 24 24 24 24	
     596       24 24 24 24 24 24 24	
     597       31 2E 32 30 24 24 24	
     598       24 10			
     599 0FF3  02 42 6C 75 65 62 65	                DB  2, "Blueberries$$$$
					$$$$$4.99$$$$", 78 
     600       72 72 69 65 73 24 24	
     601       24 24 24 24 24 24 24	
     602       34 2E 39 39 24 24 24	
     603       24 4E			
     604 1011  03 54 65 61 24 24 24	                DB  3, "Tea$$$$$$$$$$$$
					$$$$$14.99$$$", 45 
     605       24 24 24 24 24 24 24	
     606       24 24 24 24 24 24 24	
     607       31 34 2E 39 39 24 24	
     608       24 2D			
     609 102F  04 42 72 61 6E 64 79	                DB  4, "Brandy Apricot$
					$$$$$17.37$$$", 79 
     610       20 41 70 72 69 63 6F	
     611       74 24 24 24 24 24 24	
     612       31 37 2E 33 37 24 24	
     613       24 4F			
     614 104D  05 54 6F 6D 61 74 6F	                DB  5, "Tomato Ravioli 
					Soup$3.99$$$$" ,27 
     615       20 52 61 76 69 6F 6C	
     616       69 20 53 6F 75 70 24	
     617       33 2E 39 39 24 24 24	
     618       24 1B			
     619 106B  06 57 61 73 61 62 69	                DB  6, "Wasabi Paste$$$
					$$$$$18.21$$$", 63 
     620       20 50 61 73 74 65 24	
     621       24 24 24 24 24 24 24	
     622       31 38 2E 32 31 24 24	
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-15


     623       24 3F			
     624 1089  07 43 68 65 65 73 65	                DB  7, "Cheese$$$$$$$$$
					$$$$$15.67$$$", 7 
     625       24 24 24 24 24 24 24	
     626       24 24 24 24 24 24 24	
     627       31 35 2E 36 37 24 24	
     628       24 07			
     629 10A7  08 47 61 72 6C 69 63	                DB  8, "Garlic$$$$$$$$$
					$$$$$3.08$$$$", 13 
     630       24 24 24 24 24 24 24	
     631       24 24 24 24 24 24 24	
     632       33 2E 30 38 24 24 24	
     633       24 0D			
     634 10C5  00			                DB  0 
     635				 
     636 10C6  00 00 00 00 00 00 00	itemSaleRecord  DB  0,  0,  0,  0,  0, 
					 0,  0,  0 
     637       00			
     638				 
     639				;ITEM SELECTION 
     640				 
     641 10CE  C9			itemSelHeader   DB  201d, 32 DUP (205d)
					, "ITEM SELECTION", 32 DUP (205d), 187d
					 
     642       0020[			
     643	   CD			
     644			 ]	
     645       49 54 45 4D 20 53 45	
     646       4C 45 43 54 49 4F 4E	
     647       0020[			
     648	   CD			
     649			 ]	
     650       BB			
     651 111E  0014[			                DB  20  DUP(186d, 78 DU
					P(" "), 186d) 
     652	   BA			
     653	004E[			
     654	    20			
     655			]	
     656	   BA			
     657			 ]	
     658				
     659 175E  C8			                DB  200d, 78 DUP (205d)
					, 188d 
     660       004E[			
     661	   CD			
     662			 ]	
     663       BC			
     664 17AE  24			                DB  "$" 
     665				 
     666 17AF  49 44			itemHeader      DB  "ID", 10 DUP(" "), 
					"Item Name", 15 DUP(" "), "Price", 8 DU
					P(" "), "Qty" 
     667       000A[			
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-16


     668	   20			
     669			 ]	
     670       49 74 65 6D 20 4E 61	
     671       6D 65			
     672       000F[			
     673	   20			
     674			 ]	
     675       50 72 69 63 65		
     676       0008[			
     677	   20			
     678			 ]	
     679       51 74 79			
     680 17E3  24			                DB  "$" 
     681				 
     682 17E4  C0			itemSelBorder   DB  192d ,52 DUP(196d),
					 217d 
     683       0034[			
     684	   C4			
     685			 ]	
     686       D9			
     687 181A  24			                DB  "$" 
     688				 
     689				 
     690 181B  30 20 20 20 20 20 20	itemExitString  DB  "0           FINISH
					 SALE$" 
     691       20 20 20 20 20 46 49	
     692       4E 49 53 48 20 53 41	
     693       4C 45 24			
     694				 
     695				;QTY SECTION 
     696 1833  5F			qtyDisplayBox   DB  01011111b 
     697 1834  05 14			                DB   5, 20             
					;row,column 
     698 1836  08 29			                DB  8, 41 
     699				 
     700 1838  C9			qtyBorder1      DB  201d, 1 DUP (205d),
					 "QTY (1-999)", 7 DUP (205d), 187d,10d 
     701       0001[			
     702	   CD			
     703			 ]	
     704       51 54 59 20 28 31 2D	
     705       39 39 39 29		
     706       0007[			
     707	   CD			
     708			 ]	
     709       BB 0A			
     710 184E  24			                DB  "$" 
     711 184F  BA			qtyBorder2      DB  186d, 19 DUP (" "),
					 186d,10d 
     712       0013[			
     713	   20			
     714			 ]	
     715       BA 0A			
     716 1865  24			                DB  "$" 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-17


     717 1866  C8			qtyBorder3      DB  200d, 19 DUP (205d)
					, 188d 
     718       0013[			
     719	   CD			
     720			 ]	
     721       BC			
     722 187B  24			                DB  "$" 
     723				 
     724 187C  51 54 59 3A 20 24	qtyPrompt       DB  "QTY: $" 
     725				 
     726 1882  49 6E 76 61 6C 69 64	qtyError        DB  "Invalid QTY$" 
     727       20 51 54 59 24		
     728				 
     729 = 0000				itemID      EQU     0 
     730 = 0001				itemName    EQU     1 
     731 = 0015				itemPrice   EQU     21 
     732 = 001D				itemQty     EQU     29 
     733 = 001E				itemSize    EQU     30 
     734				 
     735 = 004E				selColour   EQU     01001110b 
     736				 
     737				;++++++++++++++++++++++++++++++++++++++
					++++++++CUSTOMER SECTION+++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					++++++++++++=++
     738				 
     739 188E  20 20 20 20 20 20 20	customerMenu                DB "       
					         ",218d, 38 DUP(196d) , 191d, 1
					3d, 10d 
     740       20 20 20 20 20 20 20	
     741       20 20 DA			
     742       0026[			
     743	   C4			
     744			 ]	
     745       BF 0D 0A			
     746 18C8  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "   ABC Customer Manag
					ement Function   ", 179d, 13d, 10d 
     747       20 20 20 20 20 20 20	
     748       20 20 B3 20 20 20 41	
     749       42 43 20 43 75 73 74	
     750       6F 6D 65 72 20 4D 61	
     751       6E 61 67 65 6D 65 6E	
     752       74 20 46 75 6E 63 74	
     753       69 6F 6E 20 20 20 B3	
     754       0D 0A			
     755 1902  20 20 20 20 20 20 20	                            DB "       
					         ",179d, 38 DUP(196d), 179d, 13
					d, 10d 
     756       20 20 20 20 20 20 20	
     757       20 20 B3			
     758       0026[			
     759	   C4			
     760			 ]	
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-18


     761       B3 0D 0A			
     762 193C  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "**       |Functions A
					vailable|      **", 179d, 13d, 10d 
     763       20 20 20 20 20 20 20	
     764       20 20 B3 2A 2A 20 20	
     765       20 20 20 20 20 7C 46	
     766       75 6E 63 74 69 6F 6E	
     767       73 20 41 76 61 69 6C	
     768       61 62 6C 65 7C 20 20	
     769       20 20 20 20 2A 2A B3	
     770       0D 0A			
     771 1976  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "**       |===========
					========|      **", 179d, 13d, 10d 
     772       20 20 20 20 20 20 20	
     773       20 20 B3 2A 2A 20 20	
     774       20 20 20 20 20 7C 3D	
     775       3D 3D 3D 3D 3D 3D 3D	
     776       3D 3D 3D 3D 3D 3D 3D	
     777       3D 3D 3D 3D 7C 20 20	
     778       20 20 20 20 2A 2A B3	
     779       0D 0A			
     780 19B0  20 20 20 20 20 20 20	                            DB "       
					         ",179d, 38 DUP(196d), 179d, 13
					d, 10d 
     781       20 20 20 20 20 20 20	
     782       20 20 B3			
     783       0026[			
     784	   C4			
     785			 ]	
     786       B3 0D 0A			
     787 19EA  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "        ^|  1. Add Cu
					stomer  |^       ", 179d, 13d, 10d 
     788       20 20 20 20 20 20 20	
     789       20 20 B3 20 20 20 20	
     790       20 20 20 20 5E 7C 20	
     791       20 31 2E 20 41 64 64	
     792       20 43 75 73 74 6F 6D	
     793       65 72 20 20 7C 5E 20	
     794       20 20 20 20 20 20 B3	
     795       0D 0A			
     796 1A24  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "        ^|  2. Displa
					y Cust  |^       ", 179d, 13d, 10d 
     797       20 20 20 20 20 20 20	
     798       20 20 B3 20 20 20 20	
     799       20 20 20 20 5E 7C 20	
     800       20 32 2E 20 44 69 73	
     801       70 6C 61 79 20 43 75	
     802       73 74 20 20 7C 5E 20	
     803       20 20 20 20 20 20 B3	
     804       0D 0A			
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-19


     805 1A5E  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "        ^|  3. Remove
					 Cust   |^       ", 179d, 13d, 10d 
     806       20 20 20 20 20 20 20	
     807       20 20 B3 20 20 20 20	
     808       20 20 20 20 5E 7C 20	
     809       20 33 2E 20 52 65 6D	
     810       6F 76 65 20 43 75 73	
     811       74 20 20 20 7C 5E 20	
     812       20 20 20 20 20 20 B3	
     813       0D 0A			
     814 1A98  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "        ^|  4. Exit t
					o Main  |^       ", 179d, 13d, 10d 
     815       20 20 20 20 20 20 20	
     816       20 20 B3 20 20 20 20	
     817       20 20 20 20 5E 7C 20	
     818       20 34 2E 20 45 78 69	
     819       74 20 74 6F 20 4D 61	
     820       69 6E 20 20 7C 5E 20	
     821       20 20 20 20 20 20 B3	
     822       0D 0A			
     823 1AD2  20 20 20 20 20 20 20	                            DB "       
					         ",192d, 38 DUP(196d), 217d, 13
					d, 10d, "$" 
     824       20 20 20 20 20 20 20	
     825       20 20 C0			
     826       0026[			
     827	   C4			
     828			 ]	
     829       D9 0D 0A 24		
     830				 
     831 1B0D  41 42 43 20 43 75 73	customerMenuStr1            DB  "ABC Cu
					stomer Management Function$" 
     832       74 6F 6D 65 72 20 4D	
     833       61 6E 61 67 65 6D 65	
     834       6E 74 20 46 75 6E 63	
     835       74 69 6F 6E 24		
     836 1B2E  46 75 6E 63 74 69 6F	customerMenuStr2            DB  "Functi
					ons Available$" 
     837       6E 73 20 41 76 61 69	
     838       6C 61 62 6C 65 24	
     839 1B42  31 2E 20 41 64 64 20	customerMenuAdd             DB  "1. Add
					 Customer$" 
     840       43 75 73 74 6F 6D 65	
     841       72 24			
     842 1B52  32 2E 20 44 69 73 70	customerMenuDisplay         DB  "2. Dis
					play Cust$" 
     843       6C 61 79 20 43 75 73	
     844       74 24			
     845 1B62  33 2E 20 52 65 6D 6F	customerMenuRemove          DB  "3. Rem
					ove Cust$" 
     846       76 65 20 43 75 73 74	
     847       24			
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-20


     848 1B71  34 2E 20 45 78 69 74	customerMenuExit            DB  "4. Exi
					t to Main$" 
     849       20 74 6F 20 4D 61 69	
     850       6E 24			
     851				 
     852 1B81  45 6E 74 65 72 20 61	customerMenuInputPrompt     DB  "Enter 
					a selection (1-4): $" 
     853       20 73 65 6C 65 63 74	
     854       69 6F 6E 20 28 31 2D	
     855       34 29 3A 20 24		
     856				 
     857 1B9B  45 6E 74 65 72 20 76	customerInvalidInput        DB  "Enter 
					valid input!$" 
     858       61 6C 69 64 20 69 6E	
     859       70 75 74 21 24		
     860				 
     861 1BAE  0050[			customerHeader              DB  80 DUP(
					"=") 
     862	   3D			
     863			 ]	
     864				
     865 1BFE  001E[			                            DB  30 DUP(
					" "), "CUSTOMER PAGE" 
     866	   20			
     867			 ]	
     868       43 55 53 54 4F 4D 45	
     869       52 20 50 41 47 45	
     870 1C29  0A			                            DB  10d 
     871 1C2A  0050[			                            DB  80 DUP(
					"=") 
     872	   3D			
     873			 ]	
     874				
     875 1C7A  24			                            DB  "$" 
     876				 
     877 1C7B  43 75 73 74 6F 6D 65	promptCustomerID            DB      "Cu
					stomer ID: $" 
     878       72 20 49 44 3A 20 24	
     879 1C89  43 75 73 74 6F 6D 65	promptCustomerName          DB      "Cu
					stomer Name: $" 
     880       72 20 4E 61 6D 65 3A	
     881       20 24			
     882 1C99  43 75 73 74 6F 6D 65	promptCustomerAge           DB      "Cu
					stomer Age: $" 
     883       72 20 41 67 65 3A 20	
     884       24			
     885 1CA8  43 75 73 74 6F 6D 65	promptCustomerPhone         DB      "Cu
					stomer Phone: $" 
     886       72 20 50 68 6F 6E 65	
     887       3A 20 24			
     888 1CB9  43 75 73 74 6F 6D 65	promptCustPoint             DB      "Cu
					stomer Point: $"     
     889       72 20 50 6F 69 6E 74	
     890       3A 20 24			
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-21


     891				     
     892 1CCA  43 75 73 74 6F 6D 65	promptCustomerFull          DB      "Cu
					stomer List Full!$" 
     893       72 20 4C 69 73 74 20	
     894       46 75 6C 6C 21 24	
     895				     
     896 1CDE  43 6F 6E 74 69 6E 75	promptCustContinueAdd       DB      "Co
					ntinue adding ? (y/n) : $" 
     897       65 20 61 64 64 69 6E	
     898       67 20 3F 20 28 79 2F	
     899       6E 29 20 3A 20 24	
     900				     
     901 1CF9  4E 75 6D 62 65 72 20	totalCustomersStr           DB      "Nu
					mber of customers: $" 
     902       6F 66 20 63 75 73 74	
     903       6F 6D 65 72 73 3A 20	
     904       24			
     905				     
     906 1D0F  C9			custInputBorder             DB  201d, 4
					0 DUP(205d), 187d 
     907       0028[			
     908	   CD			
     909			 ]	
     910       BB			
     911 1D39  0A			                            DB  10d 
     912 1D3A  0004[			                            DB  4 DUP(1
					86d, 40 DUP(" ") , 186d, 10d,    204d, 
					40 DUP(205d), 185d,10d) 
     913	   BA			
     914	0028[			
     915	    20			
     916			]	
     917	   BA			
     918	   0A			
     919	   CC			
     920	0028[			
     921	    CD			
     922			]	
     923	   B9			
     924	   0A			
     925			 ]	
     926				
     927 1E92  BA			                            DB  186d, 4
					0 DUP(" ") , 186d, 10d 
     928       0028[			
     929	   20			
     930			 ]	
     931       BA 0A			
     932 1EBD  C8			                            DB  200d, 4
					0 DUP(205d), 188d 
     933       0028[			
     934	   CD			
     935			 ]	
     936       BC			
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-22


     937 1EE7  24			                            DB  "$"  
     938				 
     939 1EE8  49 44 24			customerIDHeader            DB  "ID$" 
     940 1EEB  4E 41 4D 45 24		customerNameHeader          DB  "NAME$"
					        
     941 1EF0  41 47 45 24		customerAgeHeader           DB  "AGE$" 
					       
     942 1EF4  50 48 4F 4E 45 24	customerPhoneHeader         DB  "PHONE$
					"        
     943 1EFA  50 4F 49 4E 54 53 24	customerPointHeader         DB  "POINTS
					$"        
     944				 
     945				 
     946 1F01  0009[			custDisplayBorder           DB  9 DUP(1
					96d), 194d, 20 DUP(196d), 194d , 5 DUP(
					196d), 194d, 14 DUP(196d), 194d , 8 DUP
					(196d), 191d , 
     947	   C4			
     948			 ]	
     949       C2			
     950       0014[			
     951	   C4			
     952			 ]	
     953       C2			
     954       0005[			
     955	   C4			
     956			 ]	
     957       C2			
     958       000E[			
     959	   C4			
     960			 ]	
     961       C2			
     962       0008[			
     963	   C4			
     964			 ]	
     965       BF 0A			
     966 1F3F  0005[			                            DB  5 DUP(9
					 DUP(" "), 179d, 20 DUP(" "), 179d , 5 
					DUP(" "), 179d, 14 DUP(" "), 179d , 8 D
					UP(" "), 179d, 
     967	0009[			
     968	    20			
     969			]	
     970	   B3			
     971	0014[			
     972	    20			
     973			]	
     974	   B3			
     975	0005[			
     976	    20			
     977			]	
     978	   B3			
     979	000E[			
     980	    20			
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-23


     981			]	
     982	   B3			
     983	0008[			
     984	    20			
     985			]	
     986	   B3			
     987	   0A			
     988	0009[			
     989	    C4			
     990			]	
     991	   C5			
     992	0014[			
     993	    C4			
     994			]	
     995	   C5			
     996	0005[			
     997	    C4			
     998			]	
     999	   C5			
    1000	000E[			
    1001	    C4			
    1002			]	
    1003	   C5			
    1004	0008[			
    1005	    C4			
    1006			]	
    1007	   B4			
    1008	   0A			
    1009			 ]	
    1010				
    1011 21AB  0009[			                            DB  9 DUP("
					 "), 179d, 20 DUP(" "), 179d , 5 DUP(" 
					"), 179d, 14 DUP(" "), 179d , 8 DUP(" "
					), 179d, 10d 
    1012	   20			
    1013			 ]	
    1014       B3			
    1015       0014[			
    1016	   20			
    1017			 ]	
    1018       B3			
    1019       0005[			
    1020	   20			
    1021			 ]	
    1022       B3			
    1023       000E[			
    1024	   20			
    1025			 ]	
    1026       B3			
    1027       0008[			
    1028	   20			
    1029			 ]	
    1030       B3 0A			
    1031 21E9  0009[			                            DB  9 DUP(1
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-24


					96d), 193d, 20 DUP(196d), 193d , 5 DUP(
					196d), 193d, 14 DUP(196d), 193d , 8 DUP
					(196d), 217d , 
    1032	   C4			
    1033			 ]	
    1034       C1			
    1035       0014[			
    1036	   C4			
    1037			 ]	
    1038       C1			
    1039       0005[			
    1040	   C4			
    1041			 ]	
    1042       C1			
    1043       000E[			
    1044	   C4			
    1045			 ]	
    1046       C1			
    1047       0008[			
    1048	   C4			
    1049			 ]	
    1050       D9 0A			
    1051 2227  24			                            DB  "$"  
    1052				 
    1053 2228  FC			custFullBox1                DB  1111110
					0b 
    1054 2229  05 14			                            DB  5,  20 
    1055 222B  0C 32			                            DB  12, 50 
    1056				 
    1057 222D  8C			custFullBox2                DB  1000110
					0b 
    1058 222E  06 16			                            DB  6,  22 
    1059 2230  0C 32			                            DB  12, 50 
    1060				 
    1061 2232  74			custFullBox3                DB  0111010
					0b 
    1062 2233  06 16			                            DB  6,  22 
    1063 2235  0B 30			                            DB  11, 48 
    1064				 
    1065 2237  C3			customerNumberLine          DB  195d, 1
					0 DUP(196d), " " 
    1066       000A[			
    1067	   C4			
    1068			 ]	
    1069       20			
    1070 2243  24			                            DB  "$" 
    1071				 
    1072 2244  45 6E 74 65 72 20 63	customerRemovePrompt        DB  "Enter 
					customer number to delete: $" 
    1073       75 73 74 6F 6D 65 72	
    1074       20 6E 75 6D 62 65 72	
    1075       20 74 6F 20 64 65 6C	
    1076       65 74 65 3A 20 24	
    1077				 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-25


    1078 2266  02			customerCount               DB  2 
    1079				 
    1080				                                ;012345
					678901234567890123456789012345678901234
					567890 
    1081 2267  53 32 32 39 39 24 54	customerArr                 DB  "S2299$
					Tan Jee Schuan$$$$$$21$$0164189855$$100
					$$$" 
    1082       61 6E 20 4A 65 65 20	
    1083       53 63 68 75 61 6E 24	
    1084       24 24 24 24 24 32 31	
    1085       24 24 30 31 36 34 31	
    1086       38 39 38 35 35 24 24	
    1087       31 30 30 24 24 24	
    1088 2297  53 32 32 39 39 24 54	                            DB  "S2299$
					Tan Test Name$$$$$$$80$$01641898555$100
					55$" 
    1089       61 6E 20 54 65 73 74	
    1090       20 4E 61 6D 65 24 24	
    1091       24 24 24 24 24 38 30	
    1092       24 24 30 31 36 34 31	
    1093       38 39 38 35 35 35 24	
    1094       31 30 30 35 35 24	
    1095 22C7  01F4[			                            DB  500 dup
					 ("$")    
    1096	   24			
    1097			 ]	
    1098				
    1099				 
    1100 = 0030				customerSize                EQU 48d 
    1101 = 0005				maxCustNum                  EQU 5 
    1102				 
    1103 = 0000				id                          EQU 0 
    1104 = 0006				custName                    EQU 6 
    1105 = 001A				age                         EQU 26 
    1106 = 001E				phone                       EQU 30  
    1107 = 002A				bonusPoint                  EQU 42 
    1108				 
    1109				;_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/
					~\_/~\_/~\_/~\_/~\_.  MACROS _/~\_/~\_/
					~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_
					/~\_/~\_ 
    1110				CURSOR MACRO row,column 
    1111				                push    ax 
    1112				                push    bx 
    1113				                push    cx 
    1114				                push    dx 
    1115				 
    1116				                ;set cursor 
    1117				                mov dh, row        ;row
					 
    1118				                mov dl, column       ;c
					olumn 
    1119				                mov bh, 0         ; 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-26


    1120				                mov ah, 02h       ;  
    1121				                int 10h 
    1122				 
    1123				                pop    dx 
    1124				                pop    cx 
    1125				                pop    bx 
    1126				                pop    ax 
    1127				ENDM 
    1128				 
    1129				COLOUR_CHAR MACRO character, colour, pr
					intNum 
    1130				                push    ax 
    1131				                push    bx 
    1132				                push    cx 
    1133				                push    dx 
    1134				 
    1135				                xor     bx,bx 
    1136				 
    1137				                mov cx, printNum       
					   
    1138				                mov al, character      
					   
    1139				                mov bl, colour        
    1140				                mov ah, 09h        
    1141				                int 10h 
    1142				 
    1143				                pop    dx 
    1144				                pop    cx 
    1145				                pop    bx 
    1146				                pop    ax 
    1147				ENDM 
    1148				 
    1149				BG_16_COLOUR    MACRO 
    1150				                push    ax 
    1151				                push    bx 
    1152				                push    cx 
    1153				                push    dx 
    1154				 
    1155				                xor     ax,ax 
    1156				                xor     bx,bx 
    1157				                xor     cx,cx 
    1158				                xor     dx,dx 
    1159				 
    1160				                mov         ax, 1003h 
    1161				                mov         bl, 0000h  
					     ;enable 16 colours for background,
					 disable text blink 
    1162				                int         10h 
    1163				 
    1164				                pop    dx 
    1165				                pop    cx 
    1166				                pop    bx 
    1167				                pop    ax 
    1168				ENDM 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-27


    1169				 
    1170				BG_8_COLOUR     MACRO 
    1171				                push    ax 
    1172				                push    bx 
    1173				                push    cx 
    1174				                push    dx 
    1175				 
    1176				                xor     ax,ax 
    1177				                xor     bx,bx 
    1178				                xor     cx,cx 
    1179				                xor     dx,dx 
    1180				 
    1181				                mov         ax, 1003h 
    1182				                mov         bl, 0001h  
					     ;enable 8 colours for background, 
					enable text blink 
    1183				                int         10h 
    1184				 
    1185				                pop    dx 
    1186				                pop    cx 
    1187				                pop    bx 
    1188				                pop    ax 
    1189				ENDM 
    1190				 
    1191 0000				.CODE 
    1192				 
    1193 0000				MAIN            PROC 
    1194 0000  B8 ---- R		                mov         ax  ,@DATA 
    1195 0003  8E D8			                mov         ds  ,ax 
    1196 0005  33 C0			                xor         ax  ,ax 
    1197				 
    1198 0007				                LOGIN_START: 
    1199 0007  E8 13D9 R		                            call       
					 cls 
    1200				 
    1201 000A  8D 16 0003 R		                            lea        
					 dx, abcLogo 
    1202 000E  E8 13D2 R		                            call       
					 PRINT_STR 
    1203				 
    1204				                            CURSOR     
					 8,  0 
    1205 0011  50                    1	                push    ax 
    1206 0012  53                    1	                push    bx 
    1207 0013  51                    1	                push    cx 
    1208 0014  52                    1	                push    dx 
    1209 0015  B6 08                 1	                mov dh, 8        ;row 
    1210 0017  B2 00                 1	                mov dl, 0       ;column
					 
    1211 0019  B7 00                 1	                mov bh, 0         ; 
    1212 001B  B4 02                 1	                mov ah, 02h       ; 
    1213 001D  CD 10                 1	                int 10h 
    1214 001F  5A                    1	                pop    dx 
    1215 0020  59                    1	                pop    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-28


    1216 0021  5B                    1	                pop    bx 
    1217 0022  58                    1	                pop    ax 
    1218				                            COLOUR_CHAR
					 0,  00001011b,  240d 
    1219 0023  50                    1	                push    ax 
    1220 0024  53                    1	                push    bx 
    1221 0025  51                    1	                push    cx 
    1222 0026  52                    1	                push    dx 
    1223 0027  33 DB                 1	                xor     bx,bx 
    1224 0029  B9 00F0               1	                mov cx, 240d 
    1225 002C  B0 00                 1	                mov al, 0 
    1226 002E  B3 0B                 1	                mov bl, 00001011b 
    1227 0030  B4 09                 1	                mov ah, 09h 
    1228 0032  CD 10                 1	                int 10h 
    1229 0034  5A                    1	                pop    dx 
    1230 0035  59                    1	                pop    cx 
    1231 0036  5B                    1	                pop    bx 
    1232 0037  58                    1	                pop    ax 
    1233 0038  8D 16 022E R		                            lea        
					 dx  ,loginHeader 
    1234 003C  E8 13D2 R		                            call       
					 PRINT_STR 
    1235				 
    1236				                            COLOUR_CHAR
					 0,  00001111b,  280d 
    1237 003F  50                    1	                push    ax 
    1238 0040  53                    1	                push    bx 
    1239 0041  51                    1	                push    cx 
    1240 0042  52                    1	                push    dx 
    1241 0043  33 DB                 1	                xor     bx,bx 
    1242 0045  B9 0118               1	                mov cx, 280d 
    1243 0048  B0 00                 1	                mov al, 0 
    1244 004A  B3 0F                 1	                mov bl, 00001111b 
    1245 004C  B4 09                 1	                mov ah, 09h 
    1246 004E  CD 10                 1	                int 10h 
    1247 0050  5A                    1	                pop    dx 
    1248 0051  59                    1	                pop    cx 
    1249 0052  5B                    1	                pop    bx 
    1250 0053  58                    1	                pop    ax 
    1251 0054  E8 1481 R		                            call       
					 CHANGE_COLOUR 
    1252				 
    1253 0057  E8 0490 R		                            call       
					 LOGIN_INPUT 
    1254				 
    1255 005A  E8 054D R		                            call       
					 LOGIN_CHECK 
    1256				 
    1257				                            ;;login cha
					nces check 
    1258 005D  A0 01D1 R		                            mov        
					 al  ,[loginChances] 
    1259 0060  3C 00			                            cmp        
					 al  ,0 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-29


    1260 0062  74 0A			                            je         
					 LOGIN_NO_CHANCES 
    1261				 
    1262				                            ;;if login 
					not successful 
    1263 0064  A0 01D2 R		                            mov        
					 al  ,[loginState] 
    1264 0067  3C 00			                            cmp        
					 al  ,0 
    1265 0069  74 9C			                            je         
					 LOGIN_START 
    1266				 
    1267 006B  EB 20 90			                            jmp        
					 AFTER_LOGIN                 ;if login 
					successful 
    1268				 
    1269 006E				                            LOGIN_NO_CH
					ANCES: 
    1270 006E  E8 13D9 R		                                       
					 call        cls 
    1271				 
    1272 0071  B3 4F			                                       
					 mov         bl, 01001111b 
    1273 0073  B9 FFFF			                                       
					 mov         cx, 0FFFFh 
    1274 0076  E8 1481 R		                                       
					 call        CHANGE_COLOUR 
    1275				 
    1276 0079  8D 16 0513 R		                                       
					 lea         dx, skull 
    1277 007D  E8 13D2 R		                                       
					 call        PRINT_STR 
    1278				 
    1279 0080  E8 1450 R		                                       
					 call        NEWLINE 
    1280 0083  8D 16 0492 R		                                       
					 lea         dx, noMoreChance 
    1281 0087  E8 13D2 R		                                       
					 call        PRINT_STR 
    1282				 
    1283 008A  EB 45 90			                                       
					 jmp         EXIT_LABLE 
    1284 008D				                AFTER_LOGIN: 
    1285				 
    1286 008D				                MENU_START: 
    1287				                            BG_8_COLOUR
					 
    1288 008D  50                    1	                push    ax 
    1289 008E  53                    1	                push    bx 
    1290 008F  51                    1	                push    cx 
    1291 0090  52                    1	                push    dx 
    1292 0091  33 C0                 1	                xor     ax,ax 
    1293 0093  33 DB                 1	                xor     bx,bx 
    1294 0095  33 C9                 1	                xor     cx,cx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-30


    1295 0097  33 D2                 1	                xor     dx,dx 
    1296 0099  B8 1003               1	                mov         ax, 1003h 
    1297 009C  B3 01                 1	                mov         bl, 0001h  
					     ;enable 8 colours for background, 
					enable text blink 
    1298 009E  CD 10                 1	                int         10h 
    1299 00A0  5A                    1	                pop    dx 
    1300 00A1  59                    1	                pop    cx 
    1301 00A2  5B                    1	                pop    bx 
    1302 00A3  58                    1	                pop    ax 
    1303 00A4  E8 13D9 R		                            call       
					 cls 
    1304				 
    1305 00A7  E8 0303 R		                            call       
					 MENU        ;will change [currentSel] 
    1306				 
    1307 00AA  A0 0F95 R		                            mov        
					 al, [currentSel] 
    1308				                             
    1309				                            ;;match cur
					rentSel and function to call  
    1310 00AD  3C 01			                            cmp        
					 al, 1 
    1311 00AF  74 0A			                            je         
					 main_menu_sales 
    1312				 
    1313 00B1  3C 02			                            cmp        
					 al, 2 
    1314 00B3  74 0B			                            je         
					 main_menu_customer 
    1315				 
    1316 00B5  3C 03			                            cmp        
					 al, 3 
    1317 00B7  74 0C			                            je         
					 main_menu_exit 
    1318				 
    1319 00B9  EB D2			                            jmp        
					 MENU_START 
    1320				                             
    1321 00BB				                            main_menu_s
					ales: 
    1322 00BB  E8 069C R		                                       
					 call        SALES 
    1323 00BE  EB CD			                                       
					 jmp         MENU_START 
    1324				 
    1325 00C0				                            main_menu_c
					ustomer: 
    1326 00C0  E8 078A R		                                       
					 call        CUSTOMER 
    1327 00C3  EB C8			                                       
					 jmp         MENU_START 
    1328				 
    1329 00C5				                            main_menu_e
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-31


					xit: 
    1330 00C5  E8 00E7 R		                                       
					 call        EXIT                      
					  ;output selection in exitSel 
    1331 00C8  A0 0FBA R		                                       
					             mov         al, [exitSel] 
    1332 00CB  3C 01			                                       
					             cmp         al, 1 
    1333 00CD  74 02			                                       
					             je          MENU_EXIT 
    1334 00CF  EB BC			                                       
					 jmp         MENU_START 
    1335 00D1				                MENU_EXIT: 
    1336				 
    1337 00D1				                EXIT_LABLE: 
    1338				                CURSOR      21,0 
    1339 00D1  50                    1	                push    ax 
    1340 00D2  53                    1	                push    bx 
    1341 00D3  51                    1	                push    cx 
    1342 00D4  52                    1	                push    dx 
    1343 00D5  B6 15                 1	                mov dh, 21        ;row 
    1344 00D7  B2 00                 1	                mov dl, 0       ;column
					 
    1345 00D9  B7 00                 1	                mov bh, 0         ; 
    1346 00DB  B4 02                 1	                mov ah, 02h       ; 
    1347 00DD  CD 10                 1	                int 10h 
    1348 00DF  5A                    1	                pop    dx 
    1349 00E0  59                    1	                pop    cx 
    1350 00E1  5B                    1	                pop    bx 
    1351 00E2  58                    1	                pop    ax 
    1352 00E3  B4 4C			                mov         ah  ,4ch 
    1353 00E5  CD 21			                int         21h 
    1354 00E7				MAIN            ENDP 
    1355				 
    1356 00E7				EXIT            PROC                   
					     ;output selection in exitSel 
    1357				 
    1358 00E7  33 C0			                xor         ax,ax 
    1359 00E9  33 DB			                xor         bx,bx 
    1360 00EB  33 C9			                xor         cx,cx 
    1361 00ED  33 D2			                xor         dx,dx 
    1362				 
    1363 00EF  E8 13D9 R		                call        cls 
    1364				                CURSOR      0,0        
					     ;change BG colour 
    1365 00F2  50                    1	                push    ax 
    1366 00F3  53                    1	                push    bx 
    1367 00F4  51                    1	                push    cx 
    1368 00F5  52                    1	                push    dx 
    1369 00F6  B6 00                 1	                mov dh, 0        ;row 
    1370 00F8  B2 00                 1	                mov dl, 0       ;column
					 
    1371 00FA  B7 00                 1	                mov bh, 0         ; 
    1372 00FC  B4 02                 1	                mov ah, 02h       ; 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-32


    1373 00FE  CD 10                 1	                int 10h 
    1374 0100  5A                    1	                pop    dx 
    1375 0101  59                    1	                pop    cx 
    1376 0102  5B                    1	                pop    bx 
    1377 0103  58                    1	                pop    ax 
    1378				                COLOUR_CHAR 0,  0001111
					1b,  1000h 
    1379 0104  50                    1	                push    ax 
    1380 0105  53                    1	                push    bx 
    1381 0106  51                    1	                push    cx 
    1382 0107  52                    1	                push    dx 
    1383 0108  33 DB                 1	                xor     bx,bx 
    1384 010A  B9 1000               1	                mov cx, 1000h 
    1385 010D  B0 00                 1	                mov al, 0 
    1386 010F  B3 1F                 1	                mov bl, 00011111b 
    1387 0111  B4 09                 1	                mov ah, 09h 
    1388 0113  CD 10                 1	                int 10h 
    1389 0115  5A                    1	                pop    dx 
    1390 0116  59                    1	                pop    cx 
    1391 0117  5B                    1	                pop    bx 
    1392 0118  58                    1	                pop    ax 
    1393				 
    1394 0119  8D 36 0FBB R		                lea         si, exitBox
					 
    1395 011D  E8 1381 R		                call        DISPLAY_BOX
					 
    1396				 
    1397				                BG_16_COLOUR 
    1398 0120  50                    1	                push    ax 
    1399 0121  53                    1	                push    bx 
    1400 0122  51                    1	                push    cx 
    1401 0123  52                    1	                push    dx 
    1402 0124  33 C0                 1	                xor     ax,ax 
    1403 0126  33 DB                 1	                xor     bx,bx 
    1404 0128  33 C9                 1	                xor     cx,cx 
    1405 012A  33 D2                 1	                xor     dx,dx 
    1406 012C  B8 1003               1	                mov         ax, 1003h 
    1407 012F  B3 00                 1	                mov         bl, 0000h  
					     ;enable 16 colours for background,
					 disable text blink 
    1408 0131  CD 10                 1	                int         10h 
    1409 0133  5A                    1	                pop    dx 
    1410 0134  59                    1	                pop    cx 
    1411 0135  5B                    1	                pop    bx 
    1412 0136  58                    1	                pop    ax 
    1413				 
    1414 0137  8D 36 0FC0 R		                lea         si, exitBox
					1 
    1415 013B  E8 1381 R		                call        DISPLAY_BOX
					 
    1416				 
    1417 013E  8D 36 0FC5 R		                lea         si, exitBox
					2 
    1418 0142  E8 1381 R		                call        DISPLAY_BOX
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-33


					 
    1419				 
    1420 0145  8D 36 0FCA R		                lea         si, exitBox
					3 
    1421 0149  E8 1381 R		                call        DISPLAY_BOX
					 
    1422				 
    1423				                CURSOR      4,  58 
    1424 014C  50                    1	                push    ax 
    1425 014D  53                    1	                push    bx 
    1426 014E  51                    1	                push    cx 
    1427 014F  52                    1	                push    dx 
    1428 0150  B6 04                 1	                mov dh, 4        ;row 
    1429 0152  B2 3A                 1	                mov dl, 58       ;colum
					n 
    1430 0154  B7 00                 1	                mov bh, 0         ; 
    1431 0156  B4 02                 1	                mov ah, 02h       ; 
    1432 0158  CD 10                 1	                int 10h 
    1433 015A  5A                    1	                pop    dx 
    1434 015B  59                    1	                pop    cx 
    1435 015C  5B                    1	                pop    bx 
    1436 015D  58                    1	                pop    ax 
    1437				                COLOUR_CHAR 0,  0111111
					1b,  2 
    1438 015E  50                    1	                push    ax 
    1439 015F  53                    1	                push    bx 
    1440 0160  51                    1	                push    cx 
    1441 0161  52                    1	                push    dx 
    1442 0162  33 DB                 1	                xor     bx,bx 
    1443 0164  B9 0002               1	                mov cx, 2 
    1444 0167  B0 00                 1	                mov al, 0 
    1445 0169  B3 7F                 1	                mov bl, 01111111b 
    1446 016B  B4 09                 1	                mov ah, 09h 
    1447 016D  CD 10                 1	                int 10h 
    1448 016F  5A                    1	                pop    dx 
    1449 0170  59                    1	                pop    cx 
    1450 0171  5B                    1	                pop    bx 
    1451 0172  58                    1	                pop    ax 
    1452				 
    1453				                CURSOR      17,  8 
    1454 0173  50                    1	                push    ax 
    1455 0174  53                    1	                push    bx 
    1456 0175  51                    1	                push    cx 
    1457 0176  52                    1	                push    dx 
    1458 0177  B6 11                 1	                mov dh, 17        ;row 
    1459 0179  B2 08                 1	                mov dl, 8       ;column
					 
    1460 017B  B7 00                 1	                mov bh, 0         ; 
    1461 017D  B4 02                 1	                mov ah, 02h       ; 
    1462 017F  CD 10                 1	                int 10h 
    1463 0181  5A                    1	                pop    dx 
    1464 0182  59                    1	                pop    cx 
    1465 0183  5B                    1	                pop    bx 
    1466 0184  58                    1	                pop    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-34


    1467				                COLOUR_CHAR 0,  0111111
					1b,  2 
    1468 0185  50                    1	                push    ax 
    1469 0186  53                    1	                push    bx 
    1470 0187  51                    1	                push    cx 
    1471 0188  52                    1	                push    dx 
    1472 0189  33 DB                 1	                xor     bx,bx 
    1473 018B  B9 0002               1	                mov cx, 2 
    1474 018E  B0 00                 1	                mov al, 0 
    1475 0190  B3 7F                 1	                mov bl, 01111111b 
    1476 0192  B4 09                 1	                mov ah, 09h 
    1477 0194  CD 10                 1	                int 10h 
    1478 0196  5A                    1	                pop    dx 
    1479 0197  59                    1	                pop    cx 
    1480 0198  5B                    1	                pop    bx 
    1481 0199  58                    1	                pop    ax 
    1482				 
    1483				                CURSOR      7,25 
    1484 019A  50                    1	                push    ax 
    1485 019B  53                    1	                push    bx 
    1486 019C  51                    1	                push    cx 
    1487 019D  52                    1	                push    dx 
    1488 019E  B6 07                 1	                mov dh, 7        ;row 
    1489 01A0  B2 19                 1	                mov dl, 25       ;colum
					n 
    1490 01A2  B7 00                 1	                mov bh, 0         ; 
    1491 01A4  B4 02                 1	                mov ah, 02h       ; 
    1492 01A6  CD 10                 1	                int 10h 
    1493 01A8  5A                    1	                pop    dx 
    1494 01A9  59                    1	                pop    cx 
    1495 01AA  5B                    1	                pop    bx 
    1496 01AB  58                    1	                pop    ax 
    1497 01AC  8D 16 0F96 R		                lea         dx, confirm
					Exit 
    1498 01B0  E8 13D2 R		                call        PRINT_STR 
    1499				 
    1500				                CURSOR      [yesPos],[y
					esPos+1] 
    1501 01B3  50                    1	                push    ax 
    1502 01B4  53                    1	                push    bx 
    1503 01B5  51                    1	                push    cx 
    1504 01B6  52                    1	                push    dx 
    1505 01B7  8A 36 0FCF R          1	                mov dh, [yesPos]       
					 ;row 
    1506 01BB  8A 16 0FD0 R          1	                mov dl, [yesPos+1]     
					  ;column 
    1507 01BF  B7 00                 1	                mov bh, 0         ; 
    1508 01C1  B4 02                 1	                mov ah, 02h       ; 
    1509 01C3  CD 10                 1	                int 10h 
    1510 01C5  5A                    1	                pop    dx 
    1511 01C6  59                    1	                pop    cx 
    1512 01C7  5B                    1	                pop    bx 
    1513 01C8  58                    1	                pop    ax 
    1514				                COLOUR_CHAR 0, 00001111
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-35


					b, 9 
    1515 01C9  50                    1	                push    ax 
    1516 01CA  53                    1	                push    bx 
    1517 01CB  51                    1	                push    cx 
    1518 01CC  52                    1	                push    dx 
    1519 01CD  33 DB                 1	                xor     bx,bx 
    1520 01CF  B9 0009               1	                mov cx, 9 
    1521 01D2  B0 00                 1	                mov al, 0 
    1522 01D4  B3 0F                 1	                mov bl, 00001111b 
    1523 01D6  B4 09                 1	                mov ah, 09h 
    1524 01D8  CD 10                 1	                int 10h 
    1525 01DA  5A                    1	                pop    dx 
    1526 01DB  59                    1	                pop    cx 
    1527 01DC  5B                    1	                pop    bx 
    1528 01DD  58                    1	                pop    ax 
    1529 01DE  8D 16 0FA8 R		                lea         dx, yesStr 
    1530 01E2  E8 13D2 R		                call        PRINT_STR 
    1531				 
    1532				                CURSOR      [noPos],[no
					Pos+1] 
    1533 01E5  50                    1	                push    ax 
    1534 01E6  53                    1	                push    bx 
    1535 01E7  51                    1	                push    cx 
    1536 01E8  52                    1	                push    dx 
    1537 01E9  8A 36 0FD1 R          1	                mov dh, [noPos]        
					;row 
    1538 01ED  8A 16 0FD2 R          1	                mov dl, [noPos+1]      
					 ;column 
    1539 01F1  B7 00                 1	                mov bh, 0         ; 
    1540 01F3  B4 02                 1	                mov ah, 02h       ; 
    1541 01F5  CD 10                 1	                int 10h 
    1542 01F7  5A                    1	                pop    dx 
    1543 01F8  59                    1	                pop    cx 
    1544 01F9  5B                    1	                pop    bx 
    1545 01FA  58                    1	                pop    ax 
    1546 01FB  8D 16 0FB2 R		                lea         dx, noStr 
    1547 01FF  E8 13D2 R		                call        PRINT_STR 
    1548				 
    1549				                CURSOR      [yesPos],[y
					esPos+1] 
    1550 0202  50                    1	                push    ax 
    1551 0203  53                    1	                push    bx 
    1552 0204  51                    1	                push    cx 
    1553 0205  52                    1	                push    dx 
    1554 0206  8A 36 0FCF R          1	                mov dh, [yesPos]       
					 ;row 
    1555 020A  8A 16 0FD0 R          1	                mov dl, [yesPos+1]     
					  ;column 
    1556 020E  B7 00                 1	                mov bh, 0         ; 
    1557 0210  B4 02                 1	                mov ah, 02h       ; 
    1558 0212  CD 10                 1	                int 10h 
    1559 0214  5A                    1	                pop    dx 
    1560 0215  59                    1	                pop    cx 
    1561 0216  5B                    1	                pop    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-36


    1562 0217  58                    1	                pop    ax 
    1563				 
    1564 0218				                exitSelectionLoop: 
    1565 0218  B4 07			                            mov        
					 ah, 07h 
    1566 021A  CD 21			                            int        
					 21h 
    1567				 
    1568 021C  3C 61			                            cmp        
					 al, "a" 
    1569 021E  74 0B			                            je         
					 exitSelectionLeft 
    1570				 
    1571 0220  3C 64			                            cmp        
					 al, "d" 
    1572 0222  74 72			                            je         
					 exitSelectionRight 
    1573				 
    1574 0224  3C 0D			                            cmp        
					 al  ,13d 
    1575 0226  75 F0			                            jne        
					 exitSelectionLoop 
    1576 0228  E9 0302 R		                            jmp        
					 exitSelectionLoopExit 
    1577				 
    1578 022B				                            exitSelecti
					onLeft: 
    1579 022B  C6 06 0FBA R 01		                                       
					 mov         [exitSel] , 1 
    1580				 
    1581				                                       
					 CURSOR      [yesPos],[yesPos+1] 
    1582 0230  50                    1	                push    ax 
    1583 0231  53                    1	                push    bx 
    1584 0232  51                    1	                push    cx 
    1585 0233  52                    1	                push    dx 
    1586 0234  8A 36 0FCF R          1	                mov dh, [yesPos]       
					 ;row 
    1587 0238  8A 16 0FD0 R          1	                mov dl, [yesPos+1]     
					  ;column 
    1588 023C  B7 00                 1	                mov bh, 0         ; 
    1589 023E  B4 02                 1	                mov ah, 02h       ; 
    1590 0240  CD 10                 1	                int 10h 
    1591 0242  5A                    1	                pop    dx 
    1592 0243  59                    1	                pop    cx 
    1593 0244  5B                    1	                pop    bx 
    1594 0245  58                    1	                pop    ax 
    1595				                                       
					 COLOUR_CHAR 0, 00001111b, 9 
    1596 0246  50                    1	                push    ax 
    1597 0247  53                    1	                push    bx 
    1598 0248  51                    1	                push    cx 
    1599 0249  52                    1	                push    dx 
    1600 024A  33 DB                 1	                xor     bx,bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-37


    1601 024C  B9 0009               1	                mov cx, 9 
    1602 024F  B0 00                 1	                mov al, 0 
    1603 0251  B3 0F                 1	                mov bl, 00001111b 
    1604 0253  B4 09                 1	                mov ah, 09h 
    1605 0255  CD 10                 1	                int 10h 
    1606 0257  5A                    1	                pop    dx 
    1607 0258  59                    1	                pop    cx 
    1608 0259  5B                    1	                pop    bx 
    1609 025A  58                    1	                pop    ax 
    1610				 
    1611 025B  8D 16 0FA8 R		                                       
					 lea         dx, yesStr 
    1612 025F  E8 13D2 R		                                       
					 call        PRINT_STR 
    1613				 
    1614				                                       
					 CURSOR      [noPos],[noPos+1] 
    1615 0262  50                    1	                push    ax 
    1616 0263  53                    1	                push    bx 
    1617 0264  51                    1	                push    cx 
    1618 0265  52                    1	                push    dx 
    1619 0266  8A 36 0FD1 R          1	                mov dh, [noPos]        
					;row 
    1620 026A  8A 16 0FD2 R          1	                mov dl, [noPos+1]      
					 ;column 
    1621 026E  B7 00                 1	                mov bh, 0         ; 
    1622 0270  B4 02                 1	                mov ah, 02h       ; 
    1623 0272  CD 10                 1	                int 10h 
    1624 0274  5A                    1	                pop    dx 
    1625 0275  59                    1	                pop    cx 
    1626 0276  5B                    1	                pop    bx 
    1627 0277  58                    1	                pop    ax 
    1628				                                       
					 COLOUR_CHAR 0, 01110000b, 7 
    1629 0278  50                    1	                push    ax 
    1630 0279  53                    1	                push    bx 
    1631 027A  51                    1	                push    cx 
    1632 027B  52                    1	                push    dx 
    1633 027C  33 DB                 1	                xor     bx,bx 
    1634 027E  B9 0007               1	                mov cx, 7 
    1635 0281  B0 00                 1	                mov al, 0 
    1636 0283  B3 70                 1	                mov bl, 01110000b 
    1637 0285  B4 09                 1	                mov ah, 09h 
    1638 0287  CD 10                 1	                int 10h 
    1639 0289  5A                    1	                pop    dx 
    1640 028A  59                    1	                pop    cx 
    1641 028B  5B                    1	                pop    bx 
    1642 028C  58                    1	                pop    ax 
    1643				 
    1644 028D  8D 16 0FB2 R		                                       
					 lea         dx, noStr 
    1645 0291  E8 13D2 R		                                       
					 call        PRINT_STR 
    1646				 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-38


    1647 0294  EB 82			                                       
					 jmp         exitSelectionLoop 
    1648				 
    1649 0296				                            exitSelecti
					onRight: 
    1650 0296  C6 06 0FBA R 02		                                       
					 mov         [exitSel] , 2 
    1651				 
    1652				                                       
					 CURSOR      [noPos],[noPos+1] 
    1653 029B  50                    1	                push    ax 
    1654 029C  53                    1	                push    bx 
    1655 029D  51                    1	                push    cx 
    1656 029E  52                    1	                push    dx 
    1657 029F  8A 36 0FD1 R          1	                mov dh, [noPos]        
					;row 
    1658 02A3  8A 16 0FD2 R          1	                mov dl, [noPos+1]      
					 ;column 
    1659 02A7  B7 00                 1	                mov bh, 0         ; 
    1660 02A9  B4 02                 1	                mov ah, 02h       ; 
    1661 02AB  CD 10                 1	                int 10h 
    1662 02AD  5A                    1	                pop    dx 
    1663 02AE  59                    1	                pop    cx 
    1664 02AF  5B                    1	                pop    bx 
    1665 02B0  58                    1	                pop    ax 
    1666				                                       
					 COLOUR_CHAR 0, 00001111b, 7 
    1667 02B1  50                    1	                push    ax 
    1668 02B2  53                    1	                push    bx 
    1669 02B3  51                    1	                push    cx 
    1670 02B4  52                    1	                push    dx 
    1671 02B5  33 DB                 1	                xor     bx,bx 
    1672 02B7  B9 0007               1	                mov cx, 7 
    1673 02BA  B0 00                 1	                mov al, 0 
    1674 02BC  B3 0F                 1	                mov bl, 00001111b 
    1675 02BE  B4 09                 1	                mov ah, 09h 
    1676 02C0  CD 10                 1	                int 10h 
    1677 02C2  5A                    1	                pop    dx 
    1678 02C3  59                    1	                pop    cx 
    1679 02C4  5B                    1	                pop    bx 
    1680 02C5  58                    1	                pop    ax 
    1681				 
    1682				 
    1683 02C6  8D 16 0FB2 R		                                       
					 lea         dx, noStr 
    1684 02CA  E8 13D2 R		                                       
					 call        PRINT_STR 
    1685				 
    1686				                                       
					 CURSOR      [yesPos],[yesPos+1] 
    1687 02CD  50                    1	                push    ax 
    1688 02CE  53                    1	                push    bx 
    1689 02CF  51                    1	                push    cx 
    1690 02D0  52                    1	                push    dx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-39


    1691 02D1  8A 36 0FCF R          1	                mov dh, [yesPos]       
					 ;row 
    1692 02D5  8A 16 0FD0 R          1	                mov dl, [yesPos+1]     
					  ;column 
    1693 02D9  B7 00                 1	                mov bh, 0         ; 
    1694 02DB  B4 02                 1	                mov ah, 02h       ; 
    1695 02DD  CD 10                 1	                int 10h 
    1696 02DF  5A                    1	                pop    dx 
    1697 02E0  59                    1	                pop    cx 
    1698 02E1  5B                    1	                pop    bx 
    1699 02E2  58                    1	                pop    ax 
    1700				                                       
					 COLOUR_CHAR 0, 01110000b, 9 
    1701 02E3  50                    1	                push    ax 
    1702 02E4  53                    1	                push    bx 
    1703 02E5  51                    1	                push    cx 
    1704 02E6  52                    1	                push    dx 
    1705 02E7  33 DB                 1	                xor     bx,bx 
    1706 02E9  B9 0009               1	                mov cx, 9 
    1707 02EC  B0 00                 1	                mov al, 0 
    1708 02EE  B3 70                 1	                mov bl, 01110000b 
    1709 02F0  B4 09                 1	                mov ah, 09h 
    1710 02F2  CD 10                 1	                int 10h 
    1711 02F4  5A                    1	                pop    dx 
    1712 02F5  59                    1	                pop    cx 
    1713 02F6  5B                    1	                pop    bx 
    1714 02F7  58                    1	                pop    ax 
    1715				 
    1716				 
    1717 02F8  8D 16 0FA8 R		                                       
					 lea         dx, yesStr 
    1718 02FC  E8 13D2 R		                                       
					 call        PRINT_STR 
    1719				 
    1720 02FF  E9 0218 R		                                       
					 jmp         exitSelectionLoop 
    1721 0302				                exitSelectionLoopExit: 
    1722 0302  C3			                ret 
    1723				 
    1724 0303				EXIT            ENDP 
    1725				 
    1726 0303				MENU            PROC 
    1727				     
    1728				                CURSOR      0,  0 
    1729 0303  50                    1	                push    ax 
    1730 0304  53                    1	                push    bx 
    1731 0305  51                    1	                push    cx 
    1732 0306  52                    1	                push    dx 
    1733 0307  B6 00                 1	                mov dh, 0        ;row 
    1734 0309  B2 00                 1	                mov dl, 0       ;column
					 
    1735 030B  B7 00                 1	                mov bh, 0         ; 
    1736 030D  B4 02                 1	                mov ah, 02h       ; 
    1737 030F  CD 10                 1	                int 10h 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-40


    1738 0311  5A                    1	                pop    dx 
    1739 0312  59                    1	                pop    cx 
    1740 0313  5B                    1	                pop    bx 
    1741 0314  58                    1	                pop    ax 
    1742				                COLOUR_CHAR 0,  0000101
					1b,  240d 
    1743 0315  50                    1	                push    ax 
    1744 0316  53                    1	                push    bx 
    1745 0317  51                    1	                push    cx 
    1746 0318  52                    1	                push    dx 
    1747 0319  33 DB                 1	                xor     bx,bx 
    1748 031B  B9 00F0               1	                mov cx, 240d 
    1749 031E  B0 00                 1	                mov al, 0 
    1750 0320  B3 0B                 1	                mov bl, 00001011b 
    1751 0322  B4 09                 1	                mov ah, 09h 
    1752 0324  CD 10                 1	                int 10h 
    1753 0326  5A                    1	                pop    dx 
    1754 0327  59                    1	                pop    cx 
    1755 0328  5B                    1	                pop    bx 
    1756 0329  58                    1	                pop    ax 
    1757 032A  8D 16 0A00 R		                lea         dx  ,menuHe
					ader 
    1758 032E  E8 13D2 R		                call        PRINT_STR 
    1759				 
    1760				                CURSOR      4,  0 
    1761 0331  50                    1	                push    ax 
    1762 0332  53                    1	                push    bx 
    1763 0333  51                    1	                push    cx 
    1764 0334  52                    1	                push    dx 
    1765 0335  B6 04                 1	                mov dh, 4        ;row 
    1766 0337  B2 00                 1	                mov dl, 0       ;column
					 
    1767 0339  B7 00                 1	                mov bh, 0         ; 
    1768 033B  B4 02                 1	                mov ah, 02h       ; 
    1769 033D  CD 10                 1	                int 10h 
    1770 033F  5A                    1	                pop    dx 
    1771 0340  59                    1	                pop    cx 
    1772 0341  5B                    1	                pop    bx 
    1773 0342  58                    1	                pop    ax 
    1774 0343  8D 16 0AAB R		                lea         dx  ,divide
					r 
    1775 0347  E8 13D2 R		                call        PRINT_STR 
    1776				 
    1777				                CURSOR      5,  0 
    1778 034A  50                    1	                push    ax 
    1779 034B  53                    1	                push    bx 
    1780 034C  51                    1	                push    cx 
    1781 034D  52                    1	                push    dx 
    1782 034E  B6 05                 1	                mov dh, 5        ;row 
    1783 0350  B2 00                 1	                mov dl, 0       ;column
					 
    1784 0352  B7 00                 1	                mov bh, 0         ; 
    1785 0354  B4 02                 1	                mov ah, 02h       ; 
    1786 0356  CD 10                 1	                int 10h 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-41


    1787 0358  5A                    1	                pop    dx 
    1788 0359  59                    1	                pop    cx 
    1789 035A  5B                    1	                pop    bx 
    1790 035B  58                    1	                pop    ax 
    1791				                COLOUR_CHAR 0,  0000110
					1b,  1600d 
    1792 035C  50                    1	                push    ax 
    1793 035D  53                    1	                push    bx 
    1794 035E  51                    1	                push    cx 
    1795 035F  52                    1	                push    dx 
    1796 0360  33 DB                 1	                xor     bx,bx 
    1797 0362  B9 0640               1	                mov cx, 1600d 
    1798 0365  B0 00                 1	                mov al, 0 
    1799 0367  B3 0D                 1	                mov bl, 00001101b 
    1800 0369  B4 09                 1	                mov ah, 09h 
    1801 036B  CD 10                 1	                int 10h 
    1802 036D  5A                    1	                pop    dx 
    1803 036E  59                    1	                pop    cx 
    1804 036F  5B                    1	                pop    bx 
    1805 0370  58                    1	                pop    ax 
    1806 0371  8D 16 0AFC R		                lea         dx  ,menuBo
					rder 
    1807 0375  E8 13D2 R		                call        PRINT_STR 
    1808				 
    1809				                CURSOR      9,15 
    1810 0378  50                    1	                push    ax 
    1811 0379  53                    1	                push    bx 
    1812 037A  51                    1	                push    cx 
    1813 037B  52                    1	                push    dx 
    1814 037C  B6 09                 1	                mov dh, 9        ;row 
    1815 037E  B2 0F                 1	                mov dl, 15       ;colum
					n 
    1816 0380  B7 00                 1	                mov bh, 0         ; 
    1817 0382  B4 02                 1	                mov ah, 02h       ; 
    1818 0384  CD 10                 1	                int 10h 
    1819 0386  5A                    1	                pop    dx 
    1820 0387  59                    1	                pop    cx 
    1821 0388  5B                    1	                pop    bx 
    1822 0389  58                    1	                pop    ax 
    1823				                COLOUR_CHAR 0,  0000101
					0b,  30d 
    1824 038A  50                    1	                push    ax 
    1825 038B  53                    1	                push    bx 
    1826 038C  51                    1	                push    cx 
    1827 038D  52                    1	                push    dx 
    1828 038E  33 DB                 1	                xor     bx,bx 
    1829 0390  B9 001E               1	                mov cx, 30d 
    1830 0393  B0 00                 1	                mov al, 0 
    1831 0395  B3 0A                 1	                mov bl, 00001010b 
    1832 0397  B4 09                 1	                mov ah, 09h 
    1833 0399  CD 10                 1	                int 10h 
    1834 039B  5A                    1	                pop    dx 
    1835 039C  59                    1	                pop    cx 
    1836 039D  5B                    1	                pop    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-42


    1837 039E  58                    1	                pop    ax 
    1838 039F  8D 16 0F59 R		                lea         dx  ,menuSe
					lections 
    1839 03A3  E8 13D2 R		                call        PRINT_STR 
    1840				 
    1841				                CURSOR      12,15 
    1842 03A6  50                    1	                push    ax 
    1843 03A7  53                    1	                push    bx 
    1844 03A8  51                    1	                push    cx 
    1845 03A9  52                    1	                push    dx 
    1846 03AA  B6 0C                 1	                mov dh, 12        ;row 
    1847 03AC  B2 0F                 1	                mov dl, 15       ;colum
					n 
    1848 03AE  B7 00                 1	                mov bh, 0         ; 
    1849 03B0  B4 02                 1	                mov ah, 02h       ; 
    1850 03B2  CD 10                 1	                int 10h 
    1851 03B4  5A                    1	                pop    dx 
    1852 03B5  59                    1	                pop    cx 
    1853 03B6  5B                    1	                pop    bx 
    1854 03B7  58                    1	                pop    ax 
    1855				                COLOUR_CHAR 0,  0000101
					0b,  30d 
    1856 03B8  50                    1	                push    ax 
    1857 03B9  53                    1	                push    bx 
    1858 03BA  51                    1	                push    cx 
    1859 03BB  52                    1	                push    dx 
    1860 03BC  33 DB                 1	                xor     bx,bx 
    1861 03BE  B9 001E               1	                mov cx, 30d 
    1862 03C1  B0 00                 1	                mov al, 0 
    1863 03C3  B3 0A                 1	                mov bl, 00001010b 
    1864 03C5  B4 09                 1	                mov ah, 09h 
    1865 03C7  CD 10                 1	                int 10h 
    1866 03C9  5A                    1	                pop    dx 
    1867 03CA  59                    1	                pop    cx 
    1868 03CB  5B                    1	                pop    bx 
    1869 03CC  58                    1	                pop    ax 
    1870 03CD  8D 16 0F6D R		                lea         dx  ,menuSe
					lections+20 
    1871 03D1  E8 13D2 R		                call        PRINT_STR 
    1872				 
    1873				                CURSOR      15,15 
    1874 03D4  50                    1	                push    ax 
    1875 03D5  53                    1	                push    bx 
    1876 03D6  51                    1	                push    cx 
    1877 03D7  52                    1	                push    dx 
    1878 03D8  B6 0F                 1	                mov dh, 15        ;row 
    1879 03DA  B2 0F                 1	                mov dl, 15       ;colum
					n 
    1880 03DC  B7 00                 1	                mov bh, 0         ; 
    1881 03DE  B4 02                 1	                mov ah, 02h       ; 
    1882 03E0  CD 10                 1	                int 10h 
    1883 03E2  5A                    1	                pop    dx 
    1884 03E3  59                    1	                pop    cx 
    1885 03E4  5B                    1	                pop    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-43


    1886 03E5  58                    1	                pop    ax 
    1887				                COLOUR_CHAR 0,  0000101
					0b,  30d 
    1888 03E6  50                    1	                push    ax 
    1889 03E7  53                    1	                push    bx 
    1890 03E8  51                    1	                push    cx 
    1891 03E9  52                    1	                push    dx 
    1892 03EA  33 DB                 1	                xor     bx,bx 
    1893 03EC  B9 001E               1	                mov cx, 30d 
    1894 03EF  B0 00                 1	                mov al, 0 
    1895 03F1  B3 0A                 1	                mov bl, 00001010b 
    1896 03F3  B4 09                 1	                mov ah, 09h 
    1897 03F5  CD 10                 1	                int 10h 
    1898 03F7  5A                    1	                pop    dx 
    1899 03F8  59                    1	                pop    cx 
    1900 03F9  5B                    1	                pop    bx 
    1901 03FA  58                    1	                pop    ax 
    1902 03FB  8D 16 0F81 R		                lea         dx  ,menuSe
					lections+40 
    1903 03FF  E8 13D2 R		                call        PRINT_STR 
    1904				 
    1905				                ;menu selection code 
    1906 0402  C6 06 0F95 R 01		                mov         [currentSel
					],1 
    1907				 
    1908 0407  B9 0009			                mov         cx, 9d 
    1909				                CURSOR      cx,35 
    1910 040A  50                    1	                push    ax 
    1911 040B  53                    1	                push    bx 
    1912 040C  51                    1	                push    cx 
    1913 040D  52                    1	                push    dx 
    1914 040E  8A F1                 1	                mov dh, cx        ;row 
ASMFiles\A\AMain.asm(612): warning A4031: Operand types must match
    1915 0410  B2 23                 1	                mov dl, 35       ;colum
					n 
    1916 0412  B7 00                 1	                mov bh, 0         ; 
    1917 0414  B4 02                 1	                mov ah, 02h       ; 
    1918 0416  CD 10                 1	                int 10h 
    1919 0418  5A                    1	                pop    dx 
    1920 0419  59                    1	                pop    cx 
    1921 041A  5B                    1	                pop    bx 
    1922 041B  58                    1	                pop    ax 
    1923 041C				                selectionLoop: 
    1924 041C  52			                            push       
					 dx 
    1925 041D  B2 20			                            mov        
					 dl, " " 
    1926 041F  E8 1449 R		                            call       
					 PRINT_CHAR          ;clear current sel
					ection arrow 
    1927 0422  5A			                            pop        
					 dx 
    1928				 
    1929				                            CURSOR     
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-44


					 cx  ,35 
    1930 0423  50                    1	                push    ax 
    1931 0424  53                    1	                push    bx 
    1932 0425  51                    1	                push    cx 
    1933 0426  52                    1	                push    dx 
    1934 0427  8A F1                 1	                mov dh, cx        ;row 
ASMFiles\A\AMain.asm(619): warning A4031: Operand types must match
    1935 0429  B2 23                 1	                mov dl, 35       ;colum
					n 
    1936 042B  B7 00                 1	                mov bh, 0         ; 
    1937 042D  B4 02                 1	                mov ah, 02h       ; 
    1938 042F  CD 10                 1	                int 10h 
    1939 0431  5A                    1	                pop    dx 
    1940 0432  59                    1	                pop    cx 
    1941 0433  5B                    1	                pop    bx 
    1942 0434  58                    1	                pop    ax 
    1943				                            COLOUR_CHAR
					 17d ,00001100b,1    ;print arrow symbo
					l once 
    1944 0435  50                    1	                push    ax 
    1945 0436  53                    1	                push    bx 
    1946 0437  51                    1	                push    cx 
    1947 0438  52                    1	                push    dx 
    1948 0439  33 DB                 1	                xor     bx,bx 
    1949 043B  B9 0001               1	                mov cx, 1 
    1950 043E  B0 11                 1	                mov al, 17d 
    1951 0440  B3 0C                 1	                mov bl, 00001100b 
    1952 0442  B4 09                 1	                mov ah, 09h 
    1953 0444  CD 10                 1	                int 10h 
    1954 0446  5A                    1	                pop    dx 
    1955 0447  59                    1	                pop    cx 
    1956 0448  5B                    1	                pop    bx 
    1957 0449  58                    1	                pop    ax 
    1958				 
    1959 044A  B4 07			                            mov        
					 ah  ,07h 
    1960 044C  CD 21			                            int        
					 21h 
    1961				 
    1962 044E  3C 77			                            cmp        
					 al, "w"             ;up 
    1963 0450  74 0B			                            je         
					 selectionUp 
    1964				 
    1965 0452  3C 73			                            cmp        
					 al, "s"             ;down 
    1966 0454  74 13			                            je         
					 selectionDown           
    1967				 
    1968 0456  3C 0D			                            cmp        
					 al  ,13d 
    1969 0458  75 C2			                            jne        
					 selectionLoop 
    1970				 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-45


    1971 045A  EB 33 90			                            jmp        
					 selectionLoopExit 
    1972				 
    1973 045D				                            selectionUp
					: 
    1974 045D  B3 01			                                       
					 mov         bl, 1 
    1975 045F  8A 3E 0F95 R		                                       
					 mov         bh, [currentSel]        ;o
					nly move up if current selection is lar
					ger than 1 
    1976 0463  3A FB			                                       
					 cmp         bh, bl 
    1977 0465  77 0E			                                       
					 ja          selectionMoveUp 
    1978 0467  EB B3			                                       
					 jmp         selectionLoop 
    1979				 
    1980 0469				                            selectionDo
					wn: 
    1981 0469  B3 03			                                       
					 mov         bl, maxSel 
    1982 046B  8A 3E 0F95 R		                                       
					 mov         bh, [currentSel]        ;o
					nly move down if current selection is s
					maller than max
    1983 046F  3A FB			                                       
					 cmp         bh, bl 
    1984 0471  72 0F			                                       
					 jb          selectionMoveDown 
    1985 0473  EB A7			                                       
					 jmp         selectionLoop 
    1986				 
    1987 0475				                            selectionMo
					veUp: 
    1988 0475  FE CF			                                       
					 dec         bh 
    1989 0477  88 3E 0F95 R		                                       
					 mov         [currentSel],bh 
    1990 047B  B0 06			                                       
					 mov         al, 06d 
    1991				                                       
					  
    1992 047D  83 E9 03			                                       
					 sub         cx,3                    ;c
					x track row of cursor, add 3 to move do
					wn one part 
    1993				 
    1994 0480  EB 9A			                                       
					 jmp         selectionLoop 
    1995				 
    1996 0482				                            selectionMo
					veDown: 
    1997 0482  FE C7			                                       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-46


					 inc         bh 
    1998 0484  88 3E 0F95 R		                                       
					 mov         [currentSel],bh 
    1999 0488  B0 06			                                       
					 mov         al, 06d 
    2000				 
    2001 048A  83 C1 03			                                       
					 add         cx,3                    ;c
					x track row of cursor, sub 3 to move up
					 one part 
    2002				 
    2003 048D  EB 8D			                                       
					 jmp         selectionLoop 
    2004 048F				                selectionLoopExit: 
    2005				 
    2006 048F  C3			                ret 
    2007 0490				MENU            ENDP 
    2008				 
    2009 0490				LOGIN_INPUT     PROC                   
					          
    2010				                            CURSOR     
					 12, 0 
    2011 0490  50                    1	                push    ax 
    2012 0491  53                    1	                push    bx 
    2013 0492  51                    1	                push    cx 
    2014 0493  52                    1	                push    dx 
    2015 0494  B6 0C                 1	                mov dh, 12        ;row 
    2016 0496  B2 00                 1	                mov dl, 0       ;column
					 
    2017 0498  B7 00                 1	                mov bh, 0         ; 
    2018 049A  B4 02                 1	                mov ah, 02h       ; 
    2019 049C  CD 10                 1	                int 10h 
    2020 049E  5A                    1	                pop    dx 
    2021 049F  59                    1	                pop    cx 
    2022 04A0  5B                    1	                pop    bx 
    2023 04A1  58                    1	                pop    ax 
    2024				                            COLOUR_CHAR
					 0,  00001110b,  400d 
    2025 04A2  50                    1	                push    ax 
    2026 04A3  53                    1	                push    bx 
    2027 04A4  51                    1	                push    cx 
    2028 04A5  52                    1	                push    dx 
    2029 04A6  33 DB                 1	                xor     bx,bx 
    2030 04A8  B9 0190               1	                mov cx, 400d 
    2031 04AB  B0 00                 1	                mov al, 0 
    2032 04AD  B3 0E                 1	                mov bl, 00001110b 
    2033 04AF  B4 09                 1	                mov ah, 09h 
    2034 04B1  CD 10                 1	                int 10h 
    2035 04B3  5A                    1	                pop    dx 
    2036 04B4  59                    1	                pop    cx 
    2037 04B5  5B                    1	                pop    bx 
    2038 04B6  58                    1	                pop    ax 
    2039				                             
    2040 04B7  8D 16 02FD R		                            lea        
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-47


					 dx, loginBorder 
    2041 04BB  E8 13D2 R		                            call       
					 PRINT_STR 
    2042				 
    2043				                            CURSOR     
					 13  ,20 
    2044 04BE  50                    1	                push    ax 
    2045 04BF  53                    1	                push    bx 
    2046 04C0  51                    1	                push    cx 
    2047 04C1  52                    1	                push    dx 
    2048 04C2  B6 0D                 1	                mov dh, 13        ;row 
    2049 04C4  B2 14                 1	                mov dl, 20       ;colum
					n 
    2050 04C6  B7 00                 1	                mov bh, 0         ; 
    2051 04C8  B4 02                 1	                mov ah, 02h       ; 
    2052 04CA  CD 10                 1	                int 10h 
    2053 04CC  5A                    1	                pop    dx 
    2054 04CD  59                    1	                pop    cx 
    2055 04CE  5B                    1	                pop    bx 
    2056 04CF  58                    1	                pop    ax 
    2057				                            COLOUR_CHAR
					 0,  00001111b, 39d 
    2058 04D0  50                    1	                push    ax 
    2059 04D1  53                    1	                push    bx 
    2060 04D2  51                    1	                push    cx 
    2061 04D3  52                    1	                push    dx 
    2062 04D4  33 DB                 1	                xor     bx,bx 
    2063 04D6  B9 0027               1	                mov cx, 39d 
    2064 04D9  B0 00                 1	                mov al, 0 
    2065 04DB  B3 0F                 1	                mov bl, 00001111b 
    2066 04DD  B4 09                 1	                mov ah, 09h 
    2067 04DF  CD 10                 1	                int 10h 
    2068 04E1  5A                    1	                pop    dx 
    2069 04E2  59                    1	                pop    cx 
    2070 04E3  5B                    1	                pop    bx 
    2071 04E4  58                    1	                pop    ax 
    2072 04E5  8D 16 042E R		                            lea        
					 dx  ,promptUsername 
    2073 04E9  E8 13D2 R		                            call       
					 PRINT_STR 
    2074				 
    2075				                            CURSOR     
					 15  ,20 
    2076 04EC  50                    1	                push    ax 
    2077 04ED  53                    1	                push    bx 
    2078 04EE  51                    1	                push    cx 
    2079 04EF  52                    1	                push    dx 
    2080 04F0  B6 0F                 1	                mov dh, 15        ;row 
    2081 04F2  B2 14                 1	                mov dl, 20       ;colum
					n 
    2082 04F4  B7 00                 1	                mov bh, 0         ; 
    2083 04F6  B4 02                 1	                mov ah, 02h       ; 
    2084 04F8  CD 10                 1	                int 10h 
    2085 04FA  5A                    1	                pop    dx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-48


    2086 04FB  59                    1	                pop    cx 
    2087 04FC  5B                    1	                pop    bx 
    2088 04FD  58                    1	                pop    ax 
    2089				                            COLOUR_CHAR
					 0,  00001111b, 39d 
    2090 04FE  50                    1	                push    ax 
    2091 04FF  53                    1	                push    bx 
    2092 0500  51                    1	                push    cx 
    2093 0501  52                    1	                push    dx 
    2094 0502  33 DB                 1	                xor     bx,bx 
    2095 0504  B9 0027               1	                mov cx, 39d 
    2096 0507  B0 00                 1	                mov al, 0 
    2097 0509  B3 0F                 1	                mov bl, 00001111b 
    2098 050B  B4 09                 1	                mov ah, 09h 
    2099 050D  CD 10                 1	                int 10h 
    2100 050F  5A                    1	                pop    dx 
    2101 0510  59                    1	                pop    cx 
    2102 0511  5B                    1	                pop    bx 
    2103 0512  58                    1	                pop    ax 
    2104				 
    2105 0513  8D 16 0439 R		                            lea        
					 dx  ,promptPassword 
    2106 0517  E8 13D2 R		                            call       
					 PRINT_STR 
    2107				 
    2108				                            ;set cursor
					 to username:  
    2109				                            CURSOR     
					 13  ,30 
    2110 051A  50                    1	                push    ax 
    2111 051B  53                    1	                push    bx 
    2112 051C  51                    1	                push    cx 
    2113 051D  52                    1	                push    dx 
    2114 051E  B6 0D                 1	                mov dh, 13        ;row 
    2115 0520  B2 1E                 1	                mov dl, 30       ;colum
					n 
    2116 0522  B7 00                 1	                mov bh, 0         ; 
    2117 0524  B4 02                 1	                mov ah, 02h       ; 
    2118 0526  CD 10                 1	                int 10h 
    2119 0528  5A                    1	                pop    dx 
    2120 0529  59                    1	                pop    cx 
    2121 052A  5B                    1	                pop    bx 
    2122 052B  58                    1	                pop    ax 
    2123 052C  8D 3E 04F5 R		                            lea        
					 di  ,inputUsername 
    2124 0530  E8 13FA R		                            call       
					 input_str               ;write to DI 
    2125				 
    2126				                            ;set cursor
					 to password:  
    2127				                            CURSOR     
					 15  ,30 
    2128 0533  50                    1	                push    ax 
    2129 0534  53                    1	                push    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-49


    2130 0535  51                    1	                push    cx 
    2131 0536  52                    1	                push    dx 
    2132 0537  B6 0F                 1	                mov dh, 15        ;row 
    2133 0539  B2 1E                 1	                mov dl, 30       ;colum
					n 
    2134 053B  B7 00                 1	                mov bh, 0         ; 
    2135 053D  B4 02                 1	                mov ah, 02h       ; 
    2136 053F  CD 10                 1	                int 10h 
    2137 0541  5A                    1	                pop    dx 
    2138 0542  59                    1	                pop    cx 
    2139 0543  5B                    1	                pop    bx 
    2140 0544  58                    1	                pop    ax 
    2141 0545  8D 3E 04FF R		                            lea        
					 di  ,inputPassword 
    2142 0549  E8 142E R		                            call       
					 SECRET_INPUT            ;write to DI (
					input hidden) 
    2143 054C  C3			                            ret 
    2144 054D				LOGIN_INPUT     ENDP 
    2145				 
    2146 054D				LOGIN_CHECK     PROC 
    2147 054D  B9 0001			                            mov        
					 cx  ,1 
    2148 0550  8D 36 04F5 R		                            lea        
					 si  ,inputUsername 
    2149 0554  8D 3E 01D4 R		                            lea        
					 di  ,loginInfo 
    2150				 
    2151				                            CURSOR     
					 19, 0 
    2152 0558  50                    1	                push    ax 
    2153 0559  53                    1	                push    bx 
    2154 055A  51                    1	                push    cx 
    2155 055B  52                    1	                push    dx 
    2156 055C  B6 13                 1	                mov dh, 19        ;row 
    2157 055E  B2 00                 1	                mov dl, 0       ;column
					 
    2158 0560  B7 00                 1	                mov bh, 0         ; 
    2159 0562  B4 02                 1	                mov ah, 02h       ; 
    2160 0564  CD 10                 1	                int 10h 
    2161 0566  5A                    1	                pop    dx 
    2162 0567  59                    1	                pop    cx 
    2163 0568  5B                    1	                pop    bx 
    2164 0569  58                    1	                pop    ax 
    2165				                            COLOUR_CHAR
					 0,  10001100b, 80d 
    2166 056A  50                    1	                push    ax 
    2167 056B  53                    1	                push    bx 
    2168 056C  51                    1	                push    cx 
    2169 056D  52                    1	                push    dx 
    2170 056E  33 DB                 1	                xor     bx,bx 
    2171 0570  B9 0050               1	                mov cx, 80d 
    2172 0573  B0 00                 1	                mov al, 0 
    2173 0575  B3 8C                 1	                mov bl, 10001100b 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-50


    2174 0577  B4 09                 1	                mov ah, 09h 
    2175 0579  CD 10                 1	                int 10h 
    2176 057B  5A                    1	                pop    dx 
    2177 057C  59                    1	                pop    cx 
    2178 057D  5B                    1	                pop    bx 
    2179 057E  58                    1	                pop    ax 
    2180 057F				                            MATCH_USERN
					AME: 
    2181 057F  E8 1468 R		                                       
					 call        STRCMP              ;compa
					res string in si, di until "$" 
    2182 0582  3D 0000			                                       
					 cmp         ax  ,0              ;if ma
					tch, go the match user password 
    2183 0585  74 2C			                                       
					 je          MATCH_PASSWORD 
    2184				 
    2185 0587  33 D2			                                       
					 xor         dx  ,dx 
    2186 0589  8A 16 01D3 R		                                       
					 mov         dl  ,[userNumber] 
    2187 058D  3B CA			                                       
					 cmp         cx  ,dx                 ;i
					f number of tries more than number of u
					sers, user does
    2188 058F  73 06			                                       
					 jae         USER_NOT_FOUND   
    2189				 
    2190 0591  83 C7 1E			                                       
					 add         di  ,accountSize        ;o
					ffset to next user 
    2191 0594  41			                                       
					 inc         cx                      ;n
					umber of tries inc 1 
    2192				 
    2193 0595  EB E8			                                       
					 jmp         MATCH_USERNAME          ;f
					ind matching username 
    2194				 
    2195 0597				                                       
					 USER_NOT_FOUND: 
    2196				                                       
					             CURSOR      19, 33 
    2197 0597  50                    1	                push    ax 
    2198 0598  53                    1	                push    bx 
    2199 0599  51                    1	                push    cx 
    2200 059A  52                    1	                push    dx 
    2201 059B  B6 13                 1	                mov dh, 19        ;row 
    2202 059D  B2 21                 1	                mov dl, 33       ;colum
					n 
    2203 059F  B7 00                 1	                mov bh, 0         ; 
    2204 05A1  B4 02                 1	                mov ah, 02h       ; 
    2205 05A3  CD 10                 1	                int 10h 
    2206 05A5  5A                    1	                pop    dx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-51


    2207 05A6  59                    1	                pop    cx 
    2208 05A7  5B                    1	                pop    bx 
    2209 05A8  58                    1	                pop    ax 
    2210 05A9  8D 16 0444 R		                                       
					             lea         dx  ,userNotFo
					und 
    2211 05AD  E8 13D2 R		                                       
					             call        PRINT_STR 
    2212				 
    2213 05B0  EB 2C 90			                                       
					             jmp         LOGIN_FAIL 
    2214				 
    2215 05B3				                            MATCH_PASSW
					ORD: 
    2216 05B3  8D 36 04FF R		                                       
					 lea         si  ,inputPassword 
    2217 05B7  83 C7 0A			                                       
					 add         di  ,passwordOffset     ;o
					ffset to password region 
    2218				 
    2219 05BA  E8 1468 R		                                       
					 call        STRCMP                  ;c
					ompare input password with password of 
					found user 
    2220 05BD  3D 0000			                                       
					 cmp         ax  ,0                  ;i
					f found 
    2221 05C0  74 7D			                                       
					 je          LOGIN_SUCCESS 
    2222				 
    2223 05C2				                                       
					 PASS_NOT_FOUND: 
    2224				                                       
					             CURSOR      19, 33 
    2225 05C2  50                    1	                push    ax 
    2226 05C3  53                    1	                push    bx 
    2227 05C4  51                    1	                push    cx 
    2228 05C5  52                    1	                push    dx 
    2229 05C6  B6 13                 1	                mov dh, 19        ;row 
    2230 05C8  B2 21                 1	                mov dl, 33       ;colum
					n 
    2231 05CA  B7 00                 1	                mov bh, 0         ; 
    2232 05CC  B4 02                 1	                mov ah, 02h       ; 
    2233 05CE  CD 10                 1	                int 10h 
    2234 05D0  5A                    1	                pop    dx 
    2235 05D1  59                    1	                pop    cx 
    2236 05D2  5B                    1	                pop    bx 
    2237 05D3  58                    1	                pop    ax 
    2238 05D4  8D 16 0454 R		                                       
					             lea         dx  ,passWrong
					 
    2239 05D8  E8 13D2 R		                                       
					             call        PRINT_STR 
    2240				 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-52


    2241 05DB  EB 01 90			                                       
					             jmp         LOGIN_FAIL 
    2242				 
    2243 05DE				                            LOGIN_FAIL:
					 
    2244				                                       
					 CURSOR      21, 0 
    2245 05DE  50                    1	                push    ax 
    2246 05DF  53                    1	                push    bx 
    2247 05E0  51                    1	                push    cx 
    2248 05E1  52                    1	                push    dx 
    2249 05E2  B6 15                 1	                mov dh, 21        ;row 
    2250 05E4  B2 00                 1	                mov dl, 0       ;column
					 
    2251 05E6  B7 00                 1	                mov bh, 0         ; 
    2252 05E8  B4 02                 1	                mov ah, 02h       ; 
    2253 05EA  CD 10                 1	                int 10h 
    2254 05EC  5A                    1	                pop    dx 
    2255 05ED  59                    1	                pop    cx 
    2256 05EE  5B                    1	                pop    bx 
    2257 05EF  58                    1	                pop    ax 
    2258				                                       
					 COLOUR_CHAR 0,  00001100b, 80d 
    2259 05F0  50                    1	                push    ax 
    2260 05F1  53                    1	                push    bx 
    2261 05F2  51                    1	                push    cx 
    2262 05F3  52                    1	                push    dx 
    2263 05F4  33 DB                 1	                xor     bx,bx 
    2264 05F6  B9 0050               1	                mov cx, 80d 
    2265 05F9  B0 00                 1	                mov al, 0 
    2266 05FB  B3 0C                 1	                mov bl, 00001100b 
    2267 05FD  B4 09                 1	                mov ah, 09h 
    2268 05FF  CD 10                 1	                int 10h 
    2269 0601  5A                    1	                pop    dx 
    2270 0602  59                    1	                pop    cx 
    2271 0603  5B                    1	                pop    bx 
    2272 0604  58                    1	                pop    ax 
    2273				 
    2274 0605  8A 16 01D1 R		                                       
					 mov         dl  ,[loginChances]       
					  ;decrease number of chances left 
    2275 0609  FE CA			                                       
					 dec         dl 
    2276 060B  88 16 01D1 R		                                       
					 mov         [loginChances],dl 
    2277				 
    2278				                                       
					 ;;print LOGIN FAILED x CHANCES LEFT 
    2279 060F  8D 16 0475 R		                                       
					 lea         dx  ,failedLogin1 
    2280 0613  E8 13D2 R		                                       
					 call        PRINT_STR 
    2281				 
    2282 0616  8A 16 01D1 R		                                       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-53


					 mov         dl  ,[loginChances] 
    2283 061A  80 C2 30			                                       
					 add         dl  ,48d 
    2284 061D  E8 1449 R		                                       
					 call        PRINT_CHAR 
    2285				 
    2286 0620  8D 16 0483 R		                                       
					 lea         dx  ,failedLogin2 
    2287 0624  E8 13D2 R		                                       
					 call        PRINT_STR 
    2288				                                       
					 ;;------------------------------------
					------- 
    2289				 
    2290				                                       
					 CURSOR      24, 0 
    2291 0627  50                    1	                push    ax 
    2292 0628  53                    1	                push    bx 
    2293 0629  51                    1	                push    cx 
    2294 062A  52                    1	                push    dx 
    2295 062B  B6 18                 1	                mov dh, 24        ;row 
    2296 062D  B2 00                 1	                mov dl, 0       ;column
					 
    2297 062F  B7 00                 1	                mov bh, 0         ; 
    2298 0631  B4 02                 1	                mov ah, 02h       ; 
    2299 0633  CD 10                 1	                int 10h 
    2300 0635  5A                    1	                pop    dx 
    2301 0636  59                    1	                pop    cx 
    2302 0637  5B                    1	                pop    bx 
    2303 0638  58                    1	                pop    ax 
    2304 0639  E8 1458 R		                                       
					 call        ANYPAUSE 
    2305 063C  EB 49 90			                                       
					 jmp         LOGIN_EXIT 
    2306				 
    2307 063F				                            LOGIN_SUCCE
					SS: 
    2308				                                       
					 CURSOR      19, 31 
    2309 063F  50                    1	                push    ax 
    2310 0640  53                    1	                push    bx 
    2311 0641  51                    1	                push    cx 
    2312 0642  52                    1	                push    dx 
    2313 0643  B6 13                 1	                mov dh, 19        ;row 
    2314 0645  B2 1F                 1	                mov dl, 31       ;colum
					n 
    2315 0647  B7 00                 1	                mov bh, 0         ; 
    2316 0649  B4 02                 1	                mov ah, 02h       ; 
    2317 064B  CD 10                 1	                int 10h 
    2318 064D  5A                    1	                pop    dx 
    2319 064E  59                    1	                pop    cx 
    2320 064F  5B                    1	                pop    bx 
    2321 0650  58                    1	                pop    ax 
    2322				                                       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-54


					 COLOUR_CHAR 0,  10001010b,  40d 
    2323 0651  50                    1	                push    ax 
    2324 0652  53                    1	                push    bx 
    2325 0653  51                    1	                push    cx 
    2326 0654  52                    1	                push    dx 
    2327 0655  33 DB                 1	                xor     bx,bx 
    2328 0657  B9 0028               1	                mov cx, 40d 
    2329 065A  B0 00                 1	                mov al, 0 
    2330 065C  B3 8A                 1	                mov bl, 10001010b 
    2331 065E  B4 09                 1	                mov ah, 09h 
    2332 0660  CD 10                 1	                int 10h 
    2333 0662  5A                    1	                pop    dx 
    2334 0663  59                    1	                pop    cx 
    2335 0664  5B                    1	                pop    bx 
    2336 0665  58                    1	                pop    ax 
    2337				 
    2338 0666  8D 16 0463 R		                                       
					 lea         dx  ,successfulLogin 
    2339 066A  E8 13D2 R		                                       
					 call        PRINT_STR 
    2340				 
    2341 066D  C6 06 01D2 R 01		                                       
					 mov         [loginState],1          ;l
					ogin succesfull, set to 1 
    2342				 
    2343				                                       
					 CURSOR      24, 0 
    2344 0672  50                    1	                push    ax 
    2345 0673  53                    1	                push    bx 
    2346 0674  51                    1	                push    cx 
    2347 0675  52                    1	                push    dx 
    2348 0676  B6 18                 1	                mov dh, 24        ;row 
    2349 0678  B2 00                 1	                mov dl, 0       ;column
					 
    2350 067A  B7 00                 1	                mov bh, 0         ; 
    2351 067C  B4 02                 1	                mov ah, 02h       ; 
    2352 067E  CD 10                 1	                int 10h 
    2353 0680  5A                    1	                pop    dx 
    2354 0681  59                    1	                pop    cx 
    2355 0682  5B                    1	                pop    bx 
    2356 0683  58                    1	                pop    ax 
    2357 0684  E8 1458 R		                                       
					 call        ANYPAUSE 
    2358 0687				                            LOGIN_EXIT:
					 
    2359				 
    2360				                            ;clear logi
					n input data 
    2361 0687  56			                            push       
					 si 
    2362 0688  51			                            push       
					 cx 
    2363 0689  50			                            push       
					 ax 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-55


    2364 068A  8D 36 04F5 R		                            lea        
					 si, inputUsername 
    2365 068E  B9 001E			                            mov        
					 cx, 30 
    2366 0691				                            clearLoginI
					nput: 
    2367 0691  B0 24			                                       
					 mov     al,     "$" 
    2368 0693  88 04			                                       
					 mov     [si],   al 
    2369 0695  46			                                       
					 inc     si 
    2370 0696  E2 F9			                                       
					 loop    clearLoginInput 
    2371 0698  58			                            pop        
					 ax 
    2372 0699  59			                            pop        
					 cx 
    2373 069A  5E			                            pop        
					 si 
    2374 069B  C3			                            ret 
    2375 069C				LOGIN_CHECK     ENDP 
    2376				 
    2377 069C				SALES           PROC 
    2378 069C  33 C0			                            xor        
					 ax  ,ax 
    2379 069E  33 DB			                            xor        
					 bx  ,bx 
    2380 06A0  33 C9			                            xor        
					 cx  ,cx 
    2381 06A2  33 D2			                            xor        
					 dx  ,dx 
    2382				 
    2383 06A4  33 DB			    SALES_START:            xor        
					 bx, bx 
    2384 06A6  C6 06 0FD3 R 01		                            mov        
					 [itemSelectionChoice], 1        ;reset
					 selection 
    2385				 
    2386 06AB  E8 13D9 R		                            call       
					 cls 
    2387				                            CURSOR     
					 0,0  
    2388 06AE  50                    1	                push    ax 
    2389 06AF  53                    1	                push    bx 
    2390 06B0  51                    1	                push    cx 
    2391 06B1  52                    1	                push    dx 
    2392 06B2  B6 00                 1	                mov dh, 0        ;row 
    2393 06B4  B2 00                 1	                mov dl, 0       ;column
					 
    2394 06B6  B7 00                 1	                mov bh, 0         ; 
    2395 06B8  B4 02                 1	                mov ah, 02h       ; 
    2396 06BA  CD 10                 1	                int 10h 
    2397 06BC  5A                    1	                pop    dx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-56


    2398 06BD  59                    1	                pop    cx 
    2399 06BE  5B                    1	                pop    bx 
    2400 06BF  58                    1	                pop    ax 
    2401				 
    2402 06C0  8D 16 10CE R		                            lea        
					 dx  ,itemSelHeader 
    2403 06C4  E8 13D2 R		                            call       
					 PRINT_STR 
    2404				 
    2405				                            CURSOR     
					 2  ,3 
    2406 06C7  50                    1	                push    ax 
    2407 06C8  53                    1	                push    bx 
    2408 06C9  51                    1	                push    cx 
    2409 06CA  52                    1	                push    dx 
    2410 06CB  B6 02                 1	                mov dh, 2        ;row 
    2411 06CD  B2 03                 1	                mov dl, 3       ;column
					 
    2412 06CF  B7 00                 1	                mov bh, 0         ; 
    2413 06D1  B4 02                 1	                mov ah, 02h       ; 
    2414 06D3  CD 10                 1	                int 10h 
    2415 06D5  5A                    1	                pop    dx 
    2416 06D6  59                    1	                pop    cx 
    2417 06D7  5B                    1	                pop    bx 
    2418 06D8  58                    1	                pop    ax 
    2419				                            COLOUR_CHAR
					 0, 00011110b, 52d 
    2420 06D9  50                    1	                push    ax 
    2421 06DA  53                    1	                push    bx 
    2422 06DB  51                    1	                push    cx 
    2423 06DC  52                    1	                push    dx 
    2424 06DD  33 DB                 1	                xor     bx,bx 
    2425 06DF  B9 0034               1	                mov cx, 52d 
    2426 06E2  B0 00                 1	                mov al, 0 
    2427 06E4  B3 1E                 1	                mov bl, 00011110b 
    2428 06E6  B4 09                 1	                mov ah, 09h 
    2429 06E8  CD 10                 1	                int 10h 
    2430 06EA  5A                    1	                pop    dx 
    2431 06EB  59                    1	                pop    cx 
    2432 06EC  5B                    1	                pop    bx 
    2433 06ED  58                    1	                pop    ax 
    2434 06EE  8D 16 17AF R		                            lea        
					 dx  ,itemHeader 
    2435 06F2  E8 13D2 R		                            call       
					 PRINT_STR 
    2436				                             
    2437 06F5  EB 03 90			                            jmp        
					 SALES_START_BREAK 
    2438 06F8				                            SALES_START
					_CP: 
    2439 06F8  EB AA			                                       
					 jmp         SALES_START 
    2440 06FA				                            SALES_START
					_BREAK: 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-57


    2441				 
    2442				                            CURSOR     
					 3  ,2 
    2443 06FA  50                    1	                push    ax 
    2444 06FB  53                    1	                push    bx 
    2445 06FC  51                    1	                push    cx 
    2446 06FD  52                    1	                push    dx 
    2447 06FE  B6 03                 1	                mov dh, 3        ;row 
    2448 0700  B2 02                 1	                mov dl, 2       ;column
					 
    2449 0702  B7 00                 1	                mov bh, 0         ; 
    2450 0704  B4 02                 1	                mov ah, 02h       ; 
    2451 0706  CD 10                 1	                int 10h 
    2452 0708  5A                    1	                pop    dx 
    2453 0709  59                    1	                pop    cx 
    2454 070A  5B                    1	                pop    bx 
    2455 070B  58                    1	                pop    ax 
    2456 070C  8D 16 17E4 R		                            lea        
					 dx  ,itemSelBorder 
    2457 0710  E8 13D2 R		                            call       
					 PRINT_STR 
    2458				 
    2459 0713  E8 124C R		                            call       
					 PRINT_ALL_ITEMS 
    2460				                             
    2461 0716  E8 1167 R		                            call       
					 ITEM_SELECTION          ;modify variab
					le itemSelectionChoice 
    2462				 
    2463 0719  80 3E 0FD3 R 09		                                       
					 cmp         [itemSelectionChoice], 9  
					      ;exit if 9(exit selection) 
    2464 071E  74 69			                                       
					 je          ITEM_SELECTION_EXIT 
    2465				 
    2466 0720  E8 10FE R		                                       
					 call        DISPLAY_QTY_BOX 
    2467				 
    2468				                                       
					 ;;move qty input cursor 
    2469 0723  E8 10DB R		                                       
					 call        MOVE_CURSOR_QTY 
    2470				 
    2471				                                       
					 ;item choice to al 
    2472 0726  33 C0			                                       
					 xor         ax, ax 
    2473 0728  A0 0FD3 R		                                       
					 mov         al, [itemSelectionChoice] 
					  ;item choice to al 
    2474 072B  FE C8			                                       
					 dec         al                       
    2475				 
    2476				                                       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-58


					 ;change di into the address of the sal
					e record of the selected item 
    2477 072D  8D 3E 10C6 R		                                       
					 lea         di, itemSaleRecord        
					  ;change address to the selected item 
    2478 0731  03 F8			                                       
					 add         di, ax 
    2479				                                       
					 ;change si to the address of the selec
					ted item 
    2480 0733  33 DB			                                       
					 xor         bx, bx 
    2481 0735  B3 1E			                                       
					 mov         bl, itemSize 
    2482 0737  F7 E3			                                       
					 mul         bx                        
					  ;item choice number * itemSize to get
					 offset of the 
    2483 0739  8D 36 0FD5 R		                                       
					 lea         si, items                 
					   
    2484 073D  03 F0			                                       
					 add         si, ax                    
					  ;item + offset 
    2485				 
    2486 073F				                                       
					 QTY_CHECK: 
    2487 073F  33 DB			                                       
					             xor         bx, bx 
    2488 0741  E8 1331 R		                                       
					             call        BCD_INPUT     
					              ;store input into ax 
    2489 0744  8A 5C 1D			                                       
					             mov         bl, [si + item
					Qty]          ;quantity of selected ite
					m 
    2490				 
    2491 0747  E8 10DB R		                                       
					             call        MOVE_CURSOR_QT
					Y 
    2492				 
    2493 074A  3B C3			                                       
					             cmp         ax, bx        
					              ;if input is larger than 
					qty of item 
    2494 074C  77 03			                                       
					             ja          QTY_CHECK_ERRO
					R 
    2495 074E  EB 1F 90			                                       
					             jmp         QTY_CHECK_END 
    2496 0751				                                       
					             QTY_CHECK_ERROR: 
    2497 0751  8D 16 1882 R		                                       
					                         lea         dx
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-59


					, qtyError 
    2498 0755  E8 13D2 R		                                       
					                         call        PR
					INT_STR 
    2499				                                       
					                         CURSOR      22
					,0 
    2500 0758  50                    1	                push    ax 
    2501 0759  53                    1	                push    bx 
    2502 075A  51                    1	                push    cx 
    2503 075B  52                    1	                push    dx 
    2504 075C  B6 16                 1	                mov dh, 22        ;row 
    2505 075E  B2 00                 1	                mov dl, 0       ;column
					 
    2506 0760  B7 00                 1	                mov bh, 0         ; 
    2507 0762  B4 02                 1	                mov ah, 02h       ; 
    2508 0764  CD 10                 1	                int 10h 
    2509 0766  5A                    1	                pop    dx 
    2510 0767  59                    1	                pop    cx 
    2511 0768  5B                    1	                pop    bx 
    2512 0769  58                    1	                pop    ax 
    2513 076A  E8 1458 R		                                       
					                         call        AN
					YPAUSE 
    2514 076D  EB 89			                                       
					                         jmp         SA
					LES_START_CP 
    2515 076F				                                       
					 QTY_CHECK_END: 
    2516				 
    2517				                                       
					 ;;write sold qty to sales record 
    2518 076F  88 05			                                       
					 mov         [di],   al 
    2519				 
    2520				                                       
					 CURSOR      22,0 
    2521 0771  50                    1	                push    ax 
    2522 0772  53                    1	                push    bx 
    2523 0773  51                    1	                push    cx 
    2524 0774  52                    1	                push    dx 
    2525 0775  B6 16                 1	                mov dh, 22        ;row 
    2526 0777  B2 00                 1	                mov dl, 0       ;column
					 
    2527 0779  B7 00                 1	                mov bh, 0         ; 
    2528 077B  B4 02                 1	                mov ah, 02h       ; 
    2529 077D  CD 10                 1	                int 10h 
    2530 077F  5A                    1	                pop    dx 
    2531 0780  59                    1	                pop    cx 
    2532 0781  5B                    1	                pop    bx 
    2533 0782  58                    1	                pop    ax 
    2534 0783  E8 1458 R		                                       
					 call        ANYPAUSE 
    2535				 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-60


    2536 0786  E9 06F8 R		                                       
					 jmp         SALES_START_CP 
    2537 0789				                            ITEM_SELECT
					ION_EXIT: 
    2538 0789  C3			                            ret 
    2539 078A				SALES           ENDP 
    2540				 
    2541 078A				CUSTOMER        PROC 
    2542 078A				                    customerMenuLoop: 
    2543 078A  E8 13D9 R		                            call       
					 CLS 
    2544 078D  E8 0821 R		                            call       
					 CUSTOMER_MENU 
    2545				 
    2546				                            CURSOR     
					 20,  0 
    2547 0790  50                    1	                push    ax 
    2548 0791  53                    1	                push    bx 
    2549 0792  51                    1	                push    cx 
    2550 0793  52                    1	                push    dx 
    2551 0794  B6 14                 1	                mov dh, 20        ;row 
    2552 0796  B2 00                 1	                mov dl, 0       ;column
					 
    2553 0798  B7 00                 1	                mov bh, 0         ; 
    2554 079A  B4 02                 1	                mov ah, 02h       ; 
    2555 079C  CD 10                 1	                int 10h 
    2556 079E  5A                    1	                pop    dx 
    2557 079F  59                    1	                pop    cx 
    2558 07A0  5B                    1	                pop    bx 
    2559 07A1  58                    1	                pop    ax 
    2560 07A2  8D 16 1B81 R		                            lea        
					 dx,     customerMenuInputPrompt 
    2561 07A6  E8 13D2 R		                            call       
					 print_STR 
    2562				 
    2563 07A9  B4 01			                            mov        
					 ah, 01h 
    2564 07AB  CD 21			                            int        
					 21h 
    2565				                             
    2566 07AD  3C 31			                            cmp        
					 al, "1" 
    2567 07AF  74 3C			                            je         
					 customerMenu_Add 
    2568				 
    2569 07B1  3C 32			                            cmp        
					 al, "2" 
    2570 07B3  74 41			                            je         
					 customerMenu_Display 
    2571				 
    2572 07B5  3C 33			                            cmp        
					 al, "3" 
    2573 07B7  74 46			                            je         
					 customerMenu_Remove 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-61


    2574				 
    2575 07B9  3C 34			                            cmp        
					 al, "4" 
    2576 07BB  74 63			                            je         
					 customerMenu_Exit 
    2577				 
    2578				                            ;;invalid i
					nput 
    2579				                            CURSOR     
					 20,  0 
    2580 07BD  50                    1	                push    ax 
    2581 07BE  53                    1	                push    bx 
    2582 07BF  51                    1	                push    cx 
    2583 07C0  52                    1	                push    dx 
    2584 07C1  B6 14                 1	                mov dh, 20        ;row 
    2585 07C3  B2 00                 1	                mov dl, 0       ;column
					 
    2586 07C5  B7 00                 1	                mov bh, 0         ; 
    2587 07C7  B4 02                 1	                mov ah, 02h       ; 
    2588 07C9  CD 10                 1	                int 10h 
    2589 07CB  5A                    1	                pop    dx 
    2590 07CC  59                    1	                pop    cx 
    2591 07CD  5B                    1	                pop    bx 
    2592 07CE  58                    1	                pop    ax 
    2593 07CF  8D 16 1B9B R		                            lea        
					 dx, customerInvalidInput 
    2594 07D3  E8 13D2 R		                            call       
					 PRINT_STR 
    2595				                            CURSOR     
					 23,  0 
    2596 07D6  50                    1	                push    ax 
    2597 07D7  53                    1	                push    bx 
    2598 07D8  51                    1	                push    cx 
    2599 07D9  52                    1	                push    dx 
    2600 07DA  B6 17                 1	                mov dh, 23        ;row 
    2601 07DC  B2 00                 1	                mov dl, 0       ;column
					 
    2602 07DE  B7 00                 1	                mov bh, 0         ; 
    2603 07E0  B4 02                 1	                mov ah, 02h       ; 
    2604 07E2  CD 10                 1	                int 10h 
    2605 07E4  5A                    1	                pop    dx 
    2606 07E5  59                    1	                pop    cx 
    2607 07E6  5B                    1	                pop    bx 
    2608 07E7  58                    1	                pop    ax 
    2609 07E8  E8 1458 R		                            call       
					 ANYPAUSE 
    2610 07EB  EB 9D			                            jmp        
					 customerMenuLoop 
    2611				 
    2612 07ED				                            customerMen
					u_Add: 
    2613 07ED  E8 13D9 R		                                       
					 call        cls 
    2614 07F0  E8 0980 R		                                       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-62


					 call        ADD_CUSTOMER 
    2615 07F3  EB 13 90			                                       
					 jmp         customerMenu_End 
    2616				                             
    2617 07F6				                            customerMen
					u_Display: 
    2618 07F6  E8 13D9 R		                                       
					 call        cls 
    2619 07F9  E8 0B99 R		                                       
					 call        DISPLAY_ALL_CUST 
    2620 07FC  EB 0A 90			                                       
					 jmp         customerMenu_End 
    2621				 
    2622 07FF				                            customerMen
					u_Remove: 
    2623 07FF  E8 13D9 R		                                       
					 call        cls 
    2624 0802  E8 0B40 R		                                       
					 call        REMOVE_CUSTOMER 
    2625 0805  EB 01 90			                                       
					 jmp         customerMenu_End 
    2626				                                       
					  
    2627 0808				                            customerMen
					u_End: 
    2628				                                       
					 CURSOR      23, 0 
    2629 0808  50                    1	                push    ax 
    2630 0809  53                    1	                push    bx 
    2631 080A  51                    1	                push    cx 
    2632 080B  52                    1	                push    dx 
    2633 080C  B6 17                 1	                mov dh, 23        ;row 
    2634 080E  B2 00                 1	                mov dl, 0       ;column
					 
    2635 0810  B7 00                 1	                mov bh, 0         ; 
    2636 0812  B4 02                 1	                mov ah, 02h       ; 
    2637 0814  CD 10                 1	                int 10h 
    2638 0816  5A                    1	                pop    dx 
    2639 0817  59                    1	                pop    cx 
    2640 0818  5B                    1	                pop    bx 
    2641 0819  58                    1	                pop    ax 
    2642 081A  E8 1458 R		                                       
					 call        ANYPAUSE 
    2643 081D  E9 078A R		                                       
					 jmp         customerMenuLoop 
    2644				                 
    2645 0820				                customerMenu_Exit: 
    2646 0820  C3			                            ret 
    2647 0821				CUSTOMER        ENDP 
    2648				 
    2649				;;;;;; 
    2650				 
    2651 0821				CUSTOMER_MENU       PROC 
    2652				                            COLOUR_CHAR
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-63


					 0,  00001011b, 640d 
    2653 0821  50                    1	                push    ax 
    2654 0822  53                    1	                push    bx 
    2655 0823  51                    1	                push    cx 
    2656 0824  52                    1	                push    dx 
    2657 0825  33 DB                 1	                xor     bx,bx 
    2658 0827  B9 0280               1	                mov cx, 640d 
    2659 082A  B0 00                 1	                mov al, 0 
    2660 082C  B3 0B                 1	                mov bl, 00001011b 
    2661 082E  B4 09                 1	                mov ah, 09h 
    2662 0830  CD 10                 1	                int 10h 
    2663 0832  5A                    1	                pop    dx 
    2664 0833  59                    1	                pop    cx 
    2665 0834  5B                    1	                pop    bx 
    2666 0835  58                    1	                pop    ax 
    2667 0836  8D 16 0003 R		                            lea        
					 dx, abcLogo 
    2668 083A  E8 13D2 R		                            call       
					 PRINT_STR 
    2669				 
    2670				                            CURSOR     
					 9,0 
    2671 083D  50                    1	                push    ax 
    2672 083E  53                    1	                push    bx 
    2673 083F  51                    1	                push    cx 
    2674 0840  52                    1	                push    dx 
    2675 0841  B6 09                 1	                mov dh, 9        ;row 
    2676 0843  B2 00                 1	                mov dl, 0       ;column
					 
    2677 0845  B7 00                 1	                mov bh, 0         ; 
    2678 0847  B4 02                 1	                mov ah, 02h       ; 
    2679 0849  CD 10                 1	                int 10h 
    2680 084B  5A                    1	                pop    dx 
    2681 084C  59                    1	                pop    cx 
    2682 084D  5B                    1	                pop    bx 
    2683 084E  58                    1	                pop    ax 
    2684				                            COLOUR_CHAR
					 0,  00001101b, 880d 
    2685 084F  50                    1	                push    ax 
    2686 0850  53                    1	                push    bx 
    2687 0851  51                    1	                push    cx 
    2688 0852  52                    1	                push    dx 
    2689 0853  33 DB                 1	                xor     bx,bx 
    2690 0855  B9 0370               1	                mov cx, 880d 
    2691 0858  B0 00                 1	                mov al, 0 
    2692 085A  B3 0D                 1	                mov bl, 00001101b 
    2693 085C  B4 09                 1	                mov ah, 09h 
    2694 085E  CD 10                 1	                int 10h 
    2695 0860  5A                    1	                pop    dx 
    2696 0861  59                    1	                pop    cx 
    2697 0862  5B                    1	                pop    bx 
    2698 0863  58                    1	                pop    ax 
    2699 0864  8D 16 188E R		                            lea        
					 dx, customerMenu 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-64


    2700 0868  E8 13D2 R		                            call       
					 PRINT_STR 
    2701				 
    2702				                            CURSOR     
					 10, 20 
    2703 086B  50                    1	                push    ax 
    2704 086C  53                    1	                push    bx 
    2705 086D  51                    1	                push    cx 
    2706 086E  52                    1	                push    dx 
    2707 086F  B6 0A                 1	                mov dh, 10        ;row 
    2708 0871  B2 14                 1	                mov dl, 20       ;colum
					n 
    2709 0873  B7 00                 1	                mov bh, 0         ; 
    2710 0875  B4 02                 1	                mov ah, 02h       ; 
    2711 0877  CD 10                 1	                int 10h 
    2712 0879  5A                    1	                pop    dx 
    2713 087A  59                    1	                pop    cx 
    2714 087B  5B                    1	                pop    bx 
    2715 087C  58                    1	                pop    ax 
    2716				                            COLOUR_CHAR
					 0,  00001111b, 35d 
    2717 087D  50                    1	                push    ax 
    2718 087E  53                    1	                push    bx 
    2719 087F  51                    1	                push    cx 
    2720 0880  52                    1	                push    dx 
    2721 0881  33 DB                 1	                xor     bx,bx 
    2722 0883  B9 0023               1	                mov cx, 35d 
    2723 0886  B0 00                 1	                mov al, 0 
    2724 0888  B3 0F                 1	                mov bl, 00001111b 
    2725 088A  B4 09                 1	                mov ah, 09h 
    2726 088C  CD 10                 1	                int 10h 
    2727 088E  5A                    1	                pop    dx 
    2728 088F  59                    1	                pop    cx 
    2729 0890  5B                    1	                pop    bx 
    2730 0891  58                    1	                pop    ax 
    2731 0892  8D 16 1B0D R		                            lea        
					 dx, customerMenuStr1 
    2732 0896  E8 13D2 R		                            call       
					 PRINT_STR 
    2733				 
    2734				                            CURSOR     
					 12, 27 
    2735 0899  50                    1	                push    ax 
    2736 089A  53                    1	                push    bx 
    2737 089B  51                    1	                push    cx 
    2738 089C  52                    1	                push    dx 
    2739 089D  B6 0C                 1	                mov dh, 12        ;row 
    2740 089F  B2 1B                 1	                mov dl, 27       ;colum
					n 
    2741 08A1  B7 00                 1	                mov bh, 0         ; 
    2742 08A3  B4 02                 1	                mov ah, 02h       ; 
    2743 08A5  CD 10                 1	                int 10h 
    2744 08A7  5A                    1	                pop    dx 
    2745 08A8  59                    1	                pop    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-65


    2746 08A9  5B                    1	                pop    bx 
    2747 08AA  58                    1	                pop    ax 
    2748				                            COLOUR_CHAR
					 0,  00001111b, 19d 
    2749 08AB  50                    1	                push    ax 
    2750 08AC  53                    1	                push    bx 
    2751 08AD  51                    1	                push    cx 
    2752 08AE  52                    1	                push    dx 
    2753 08AF  33 DB                 1	                xor     bx,bx 
    2754 08B1  B9 0013               1	                mov cx, 19d 
    2755 08B4  B0 00                 1	                mov al, 0 
    2756 08B6  B3 0F                 1	                mov bl, 00001111b 
    2757 08B8  B4 09                 1	                mov ah, 09h 
    2758 08BA  CD 10                 1	                int 10h 
    2759 08BC  5A                    1	                pop    dx 
    2760 08BD  59                    1	                pop    cx 
    2761 08BE  5B                    1	                pop    bx 
    2762 08BF  58                    1	                pop    ax 
    2763 08C0  8D 16 1B2E R		                            lea        
					 dx, customerMenuStr2 
    2764 08C4  E8 13D2 R		                            call       
					 PRINT_STR 
    2765				 
    2766				                            CURSOR     
					 15, 29 
    2767 08C7  50                    1	                push    ax 
    2768 08C8  53                    1	                push    bx 
    2769 08C9  51                    1	                push    cx 
    2770 08CA  52                    1	                push    dx 
    2771 08CB  B6 0F                 1	                mov dh, 15        ;row 
    2772 08CD  B2 1D                 1	                mov dl, 29       ;colum
					n 
    2773 08CF  B7 00                 1	                mov bh, 0         ; 
    2774 08D1  B4 02                 1	                mov ah, 02h       ; 
    2775 08D3  CD 10                 1	                int 10h 
    2776 08D5  5A                    1	                pop    dx 
    2777 08D6  59                    1	                pop    cx 
    2778 08D7  5B                    1	                pop    bx 
    2779 08D8  58                    1	                pop    ax 
    2780				                            COLOUR_CHAR
					 0,  00001010b, 15d 
    2781 08D9  50                    1	                push    ax 
    2782 08DA  53                    1	                push    bx 
    2783 08DB  51                    1	                push    cx 
    2784 08DC  52                    1	                push    dx 
    2785 08DD  33 DB                 1	                xor     bx,bx 
    2786 08DF  B9 000F               1	                mov cx, 15d 
    2787 08E2  B0 00                 1	                mov al, 0 
    2788 08E4  B3 0A                 1	                mov bl, 00001010b 
    2789 08E6  B4 09                 1	                mov ah, 09h 
    2790 08E8  CD 10                 1	                int 10h 
    2791 08EA  5A                    1	                pop    dx 
    2792 08EB  59                    1	                pop    cx 
    2793 08EC  5B                    1	                pop    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-66


    2794 08ED  58                    1	                pop    ax 
    2795 08EE  8D 16 1B42 R		                            lea        
					 dx, customerMenuAdd 
    2796 08F2  E8 13D2 R		                            call       
					 PRINT_STR 
    2797				 
    2798				                            CURSOR     
					 16, 29 
    2799 08F5  50                    1	                push    ax 
    2800 08F6  53                    1	                push    bx 
    2801 08F7  51                    1	                push    cx 
    2802 08F8  52                    1	                push    dx 
    2803 08F9  B6 10                 1	                mov dh, 16        ;row 
    2804 08FB  B2 1D                 1	                mov dl, 29       ;colum
					n 
    2805 08FD  B7 00                 1	                mov bh, 0         ; 
    2806 08FF  B4 02                 1	                mov ah, 02h       ; 
    2807 0901  CD 10                 1	                int 10h 
    2808 0903  5A                    1	                pop    dx 
    2809 0904  59                    1	                pop    cx 
    2810 0905  5B                    1	                pop    bx 
    2811 0906  58                    1	                pop    ax 
    2812				                            COLOUR_CHAR
					 0,  00001010b, 15d 
    2813 0907  50                    1	                push    ax 
    2814 0908  53                    1	                push    bx 
    2815 0909  51                    1	                push    cx 
    2816 090A  52                    1	                push    dx 
    2817 090B  33 DB                 1	                xor     bx,bx 
    2818 090D  B9 000F               1	                mov cx, 15d 
    2819 0910  B0 00                 1	                mov al, 0 
    2820 0912  B3 0A                 1	                mov bl, 00001010b 
    2821 0914  B4 09                 1	                mov ah, 09h 
    2822 0916  CD 10                 1	                int 10h 
    2823 0918  5A                    1	                pop    dx 
    2824 0919  59                    1	                pop    cx 
    2825 091A  5B                    1	                pop    bx 
    2826 091B  58                    1	                pop    ax 
    2827 091C  8D 16 1B52 R		                            lea        
					 dx, customerMenuDisplay 
    2828 0920  E8 13D2 R		                            call       
					 PRINT_STR 
    2829				 
    2830				                            CURSOR     
					 17, 29 
    2831 0923  50                    1	                push    ax 
    2832 0924  53                    1	                push    bx 
    2833 0925  51                    1	                push    cx 
    2834 0926  52                    1	                push    dx 
    2835 0927  B6 11                 1	                mov dh, 17        ;row 
    2836 0929  B2 1D                 1	                mov dl, 29       ;colum
					n 
    2837 092B  B7 00                 1	                mov bh, 0         ; 
    2838 092D  B4 02                 1	                mov ah, 02h       ; 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-67


    2839 092F  CD 10                 1	                int 10h 
    2840 0931  5A                    1	                pop    dx 
    2841 0932  59                    1	                pop    cx 
    2842 0933  5B                    1	                pop    bx 
    2843 0934  58                    1	                pop    ax 
    2844				                            COLOUR_CHAR
					 0,  00001010b, 15d 
    2845 0935  50                    1	                push    ax 
    2846 0936  53                    1	                push    bx 
    2847 0937  51                    1	                push    cx 
    2848 0938  52                    1	                push    dx 
    2849 0939  33 DB                 1	                xor     bx,bx 
    2850 093B  B9 000F               1	                mov cx, 15d 
    2851 093E  B0 00                 1	                mov al, 0 
    2852 0940  B3 0A                 1	                mov bl, 00001010b 
    2853 0942  B4 09                 1	                mov ah, 09h 
    2854 0944  CD 10                 1	                int 10h 
    2855 0946  5A                    1	                pop    dx 
    2856 0947  59                    1	                pop    cx 
    2857 0948  5B                    1	                pop    bx 
    2858 0949  58                    1	                pop    ax 
    2859 094A  8D 16 1B62 R		                            lea        
					 dx, customerMenuRemove 
    2860 094E  E8 13D2 R		                            call       
					 PRINT_STR 
    2861				 
    2862				                            CURSOR     
					 18, 29 
    2863 0951  50                    1	                push    ax 
    2864 0952  53                    1	                push    bx 
    2865 0953  51                    1	                push    cx 
    2866 0954  52                    1	                push    dx 
    2867 0955  B6 12                 1	                mov dh, 18        ;row 
    2868 0957  B2 1D                 1	                mov dl, 29       ;colum
					n 
    2869 0959  B7 00                 1	                mov bh, 0         ; 
    2870 095B  B4 02                 1	                mov ah, 02h       ; 
    2871 095D  CD 10                 1	                int 10h 
    2872 095F  5A                    1	                pop    dx 
    2873 0960  59                    1	                pop    cx 
    2874 0961  5B                    1	                pop    bx 
    2875 0962  58                    1	                pop    ax 
    2876				                            COLOUR_CHAR
					 0,  00001010b, 15d 
    2877 0963  50                    1	                push    ax 
    2878 0964  53                    1	                push    bx 
    2879 0965  51                    1	                push    cx 
    2880 0966  52                    1	                push    dx 
    2881 0967  33 DB                 1	                xor     bx,bx 
    2882 0969  B9 000F               1	                mov cx, 15d 
    2883 096C  B0 00                 1	                mov al, 0 
    2884 096E  B3 0A                 1	                mov bl, 00001010b 
    2885 0970  B4 09                 1	                mov ah, 09h 
    2886 0972  CD 10                 1	                int 10h 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-68


    2887 0974  5A                    1	                pop    dx 
    2888 0975  59                    1	                pop    cx 
    2889 0976  5B                    1	                pop    bx 
    2890 0977  58                    1	                pop    ax 
    2891 0978  8D 16 1B71 R		                            lea        
					 dx, customerMenuExit 
    2892 097C  E8 13D2 R		                            call       
					 PRINT_STR 
    2893				 
    2894 097F  C3			                            ret 
    2895 0980				CUSTOMER_MENU       ENDP 
    2896				 
    2897 0980				ADD_CUSTOMER        PROC 
    2898				                            CURSOR     
					 0,0 
    2899 0980  50                    1	                push    ax 
    2900 0981  53                    1	                push    bx 
    2901 0982  51                    1	                push    cx 
    2902 0983  52                    1	                push    dx 
    2903 0984  B6 00                 1	                mov dh, 0        ;row 
    2904 0986  B2 00                 1	                mov dl, 0       ;column
					 
    2905 0988  B7 00                 1	                mov bh, 0         ; 
    2906 098A  B4 02                 1	                mov ah, 02h       ; 
    2907 098C  CD 10                 1	                int 10h 
    2908 098E  5A                    1	                pop    dx 
    2909 098F  59                    1	                pop    cx 
    2910 0990  5B                    1	                pop    bx 
    2911 0991  58                    1	                pop    ax 
    2912				 
    2913				                            COLOUR_CHAR
					 0, 00001011b, 380d 
    2914 0992  50                    1	                push    ax 
    2915 0993  53                    1	                push    bx 
    2916 0994  51                    1	                push    cx 
    2917 0995  52                    1	                push    dx 
    2918 0996  33 DB                 1	                xor     bx,bx 
    2919 0998  B9 017C               1	                mov cx, 380d 
    2920 099B  B0 00                 1	                mov al, 0 
    2921 099D  B3 0B                 1	                mov bl, 00001011b 
    2922 099F  B4 09                 1	                mov ah, 09h 
    2923 09A1  CD 10                 1	                int 10h 
    2924 09A3  5A                    1	                pop    dx 
    2925 09A4  59                    1	                pop    cx 
    2926 09A5  5B                    1	                pop    bx 
    2927 09A6  58                    1	                pop    ax 
    2928				 
    2929 09A7  8D 16 1BAE R		                            lea        
					 dx, customerHeader 
    2930 09AB  E8 13D2 R		                            call       
					 PRINT_STR 
    2931				 
    2932 09AE  E8 1450 R		                            call       
					 NEWLINE 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-69


    2933 09B1  E8 1450 R		                            call       
					 NEWLINE    
    2934				 
    2935				                            COLOUR_CHAR
					 0, 00001110b, 1100d 
    2936 09B4  50                    1	                push    ax 
    2937 09B5  53                    1	                push    bx 
    2938 09B6  51                    1	                push    cx 
    2939 09B7  52                    1	                push    dx 
    2940 09B8  33 DB                 1	                xor     bx,bx 
    2941 09BA  B9 044C               1	                mov cx, 1100d 
    2942 09BD  B0 00                 1	                mov al, 0 
    2943 09BF  B3 0E                 1	                mov bl, 00001110b 
    2944 09C1  B4 09                 1	                mov ah, 09h 
    2945 09C3  CD 10                 1	                int 10h 
    2946 09C5  5A                    1	                pop    dx 
    2947 09C6  59                    1	                pop    cx 
    2948 09C7  5B                    1	                pop    bx 
    2949 09C8  58                    1	                pop    ax 
    2950				                             
    2951 09C9  8D 16 1D0F R		                            lea        
					 dx, custInputBorder                   
					       
    2952 09CD  E8 13D2 R		                            call       
					 PRINT_STR 
    2953				 
    2954				                            ;set cursor
					:  
    2955				                            CURSOR     
					 6,  2 
    2956 09D0  50                    1	                push    ax 
    2957 09D1  53                    1	                push    bx 
    2958 09D2  51                    1	                push    cx 
    2959 09D3  52                    1	                push    dx 
    2960 09D4  B6 06                 1	                mov dh, 6        ;row 
    2961 09D6  B2 02                 1	                mov dl, 2       ;column
					 
    2962 09D8  B7 00                 1	                mov bh, 0         ; 
    2963 09DA  B4 02                 1	                mov ah, 02h       ; 
    2964 09DC  CD 10                 1	                int 10h 
    2965 09DE  5A                    1	                pop    dx 
    2966 09DF  59                    1	                pop    cx 
    2967 09E0  5B                    1	                pop    bx 
    2968 09E1  58                    1	                pop    ax 
    2969				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    2970 09E2  50                    1	                push    ax 
    2971 09E3  53                    1	                push    bx 
    2972 09E4  51                    1	                push    cx 
    2973 09E5  52                    1	                push    dx 
    2974 09E6  33 DB                 1	                xor     bx,bx 
    2975 09E8  B9 0019               1	                mov cx, 25d 
    2976 09EB  B0 00                 1	                mov al, 0 
    2977 09ED  B3 0F                 1	                mov bl, 00001111b 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-70


    2978 09EF  B4 09                 1	                mov ah, 09h 
    2979 09F1  CD 10                 1	                int 10h 
    2980 09F3  5A                    1	                pop    dx 
    2981 09F4  59                    1	                pop    cx 
    2982 09F5  5B                    1	                pop    bx 
    2983 09F6  58                    1	                pop    ax 
    2984				 
    2985 09F7  8D 16 1C7B R		                            lea        
					 dx  ,promptCustomerID 
    2986 09FB  E8 13D2 R		                            call       
					 PRINT_STR 
    2987				 
    2988				                            CURSOR     
					 8, 2 
    2989 09FE  50                    1	                push    ax 
    2990 09FF  53                    1	                push    bx 
    2991 0A00  51                    1	                push    cx 
    2992 0A01  52                    1	                push    dx 
    2993 0A02  B6 08                 1	                mov dh, 8        ;row 
    2994 0A04  B2 02                 1	                mov dl, 2       ;column
					 
    2995 0A06  B7 00                 1	                mov bh, 0         ; 
    2996 0A08  B4 02                 1	                mov ah, 02h       ; 
    2997 0A0A  CD 10                 1	                int 10h 
    2998 0A0C  5A                    1	                pop    dx 
    2999 0A0D  59                    1	                pop    cx 
    3000 0A0E  5B                    1	                pop    bx 
    3001 0A0F  58                    1	                pop    ax 
    3002				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    3003 0A10  50                    1	                push    ax 
    3004 0A11  53                    1	                push    bx 
    3005 0A12  51                    1	                push    cx 
    3006 0A13  52                    1	                push    dx 
    3007 0A14  33 DB                 1	                xor     bx,bx 
    3008 0A16  B9 0019               1	                mov cx, 25d 
    3009 0A19  B0 00                 1	                mov al, 0 
    3010 0A1B  B3 0F                 1	                mov bl, 00001111b 
    3011 0A1D  B4 09                 1	                mov ah, 09h 
    3012 0A1F  CD 10                 1	                int 10h 
    3013 0A21  5A                    1	                pop    dx 
    3014 0A22  59                    1	                pop    cx 
    3015 0A23  5B                    1	                pop    bx 
    3016 0A24  58                    1	                pop    ax 
    3017				 
    3018 0A25  8D 16 1C89 R		                            lea        
					 dx, promptCustomerName 
    3019 0A29  E8 13D2 R		                            call       
					 PRINT_STR 
    3020				 
    3021				                            CURSOR     
					 10, 2 
    3022 0A2C  50                    1	                push    ax 
    3023 0A2D  53                    1	                push    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-71


    3024 0A2E  51                    1	                push    cx 
    3025 0A2F  52                    1	                push    dx 
    3026 0A30  B6 0A                 1	                mov dh, 10        ;row 
    3027 0A32  B2 02                 1	                mov dl, 2       ;column
					 
    3028 0A34  B7 00                 1	                mov bh, 0         ; 
    3029 0A36  B4 02                 1	                mov ah, 02h       ; 
    3030 0A38  CD 10                 1	                int 10h 
    3031 0A3A  5A                    1	                pop    dx 
    3032 0A3B  59                    1	                pop    cx 
    3033 0A3C  5B                    1	                pop    bx 
    3034 0A3D  58                    1	                pop    ax 
    3035				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    3036 0A3E  50                    1	                push    ax 
    3037 0A3F  53                    1	                push    bx 
    3038 0A40  51                    1	                push    cx 
    3039 0A41  52                    1	                push    dx 
    3040 0A42  33 DB                 1	                xor     bx,bx 
    3041 0A44  B9 0019               1	                mov cx, 25d 
    3042 0A47  B0 00                 1	                mov al, 0 
    3043 0A49  B3 0F                 1	                mov bl, 00001111b 
    3044 0A4B  B4 09                 1	                mov ah, 09h 
    3045 0A4D  CD 10                 1	                int 10h 
    3046 0A4F  5A                    1	                pop    dx 
    3047 0A50  59                    1	                pop    cx 
    3048 0A51  5B                    1	                pop    bx 
    3049 0A52  58                    1	                pop    ax 
    3050				 
    3051 0A53  8D 16 1C99 R		                            lea        
					 dx, promptCustomerAge 
    3052 0A57  E8 13D2 R		                            call       
					 PRINT_STR 
    3053				 
    3054				                            CURSOR     
					 12, 2 
    3055 0A5A  50                    1	                push    ax 
    3056 0A5B  53                    1	                push    bx 
    3057 0A5C  51                    1	                push    cx 
    3058 0A5D  52                    1	                push    dx 
    3059 0A5E  B6 0C                 1	                mov dh, 12        ;row 
    3060 0A60  B2 02                 1	                mov dl, 2       ;column
					 
    3061 0A62  B7 00                 1	                mov bh, 0         ; 
    3062 0A64  B4 02                 1	                mov ah, 02h       ; 
    3063 0A66  CD 10                 1	                int 10h 
    3064 0A68  5A                    1	                pop    dx 
    3065 0A69  59                    1	                pop    cx 
    3066 0A6A  5B                    1	                pop    bx 
    3067 0A6B  58                    1	                pop    ax 
    3068				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    3069 0A6C  50                    1	                push    ax 
    3070 0A6D  53                    1	                push    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-72


    3071 0A6E  51                    1	                push    cx 
    3072 0A6F  52                    1	                push    dx 
    3073 0A70  33 DB                 1	                xor     bx,bx 
    3074 0A72  B9 0019               1	                mov cx, 25d 
    3075 0A75  B0 00                 1	                mov al, 0 
    3076 0A77  B3 0F                 1	                mov bl, 00001111b 
    3077 0A79  B4 09                 1	                mov ah, 09h 
    3078 0A7B  CD 10                 1	                int 10h 
    3079 0A7D  5A                    1	                pop    dx 
    3080 0A7E  59                    1	                pop    cx 
    3081 0A7F  5B                    1	                pop    bx 
    3082 0A80  58                    1	                pop    ax 
    3083				 
    3084 0A81  8D 16 1CA8 R		                            lea        
					 dx, promptCustomerPhone 
    3085 0A85  E8 13D2 R		                            call       
					 PRINT_STR 
    3086				 
    3087				                            CURSOR     
					 14, 2 
    3088 0A88  50                    1	                push    ax 
    3089 0A89  53                    1	                push    bx 
    3090 0A8A  51                    1	                push    cx 
    3091 0A8B  52                    1	                push    dx 
    3092 0A8C  B6 0E                 1	                mov dh, 14        ;row 
    3093 0A8E  B2 02                 1	                mov dl, 2       ;column
					 
    3094 0A90  B7 00                 1	                mov bh, 0         ; 
    3095 0A92  B4 02                 1	                mov ah, 02h       ; 
    3096 0A94  CD 10                 1	                int 10h 
    3097 0A96  5A                    1	                pop    dx 
    3098 0A97  59                    1	                pop    cx 
    3099 0A98  5B                    1	                pop    bx 
    3100 0A99  58                    1	                pop    ax 
    3101				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    3102 0A9A  50                    1	                push    ax 
    3103 0A9B  53                    1	                push    bx 
    3104 0A9C  51                    1	                push    cx 
    3105 0A9D  52                    1	                push    dx 
    3106 0A9E  33 DB                 1	                xor     bx,bx 
    3107 0AA0  B9 0019               1	                mov cx, 25d 
    3108 0AA3  B0 00                 1	                mov al, 0 
    3109 0AA5  B3 0F                 1	                mov bl, 00001111b 
    3110 0AA7  B4 09                 1	                mov ah, 09h 
    3111 0AA9  CD 10                 1	                int 10h 
    3112 0AAB  5A                    1	                pop    dx 
    3113 0AAC  59                    1	                pop    cx 
    3114 0AAD  5B                    1	                pop    bx 
    3115 0AAE  58                    1	                pop    ax 
    3116				 
    3117 0AAF  8D 16 1CB9 R		                            lea        
					 dx, promptCustPoint 
    3118 0AB3  E8 13D2 R		                            call       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-73


					 PRINT_STR 
    3119				 
    3120 0AB6				                            customerEnt
					er: 
    3121				                            ;;;compare 
					if is full 
    3122 0AB6  8A 0E 2266 R		                                       
					 mov         cl, [customerCount] 
    3123 0ABA  80 F9 05			                                       
					 cmp         cl, maxCustNum 
    3124 0ABD  73 6B			                                       
					 jae         customerFull 
    3125				 
    3126				                                       
					 ;;;offset to address of empty customer
					 (if exists) 
    3127 0ABF  8D 36 2267 R		                                       
					 lea         si, customerArr 
    3128 0AC3  B9 0005			                                       
					 mov         cx, maxCustNum 
    3129 0AC6				                                       
					 findEmptyCust: 
    3130 0AC6  8A 14			                                       
					             mov     dl, [si] 
    3131 0AC8  80 FA 24			                                       
					             cmp     dl, "$"           
					  ;if found empty customer element 
    3132 0ACB  74 08			                                       
					             je      findEmptyCustEnd 
    3133				 
    3134 0ACD  83 C6 30			                                       
					             add     si, customerSize  
					  
    3135				 
    3136 0AD0  E2 F4			                                       
					             loop    findEmptyCust 
    3137 0AD2  EB 56 90			                                       
					             jmp     customerFull      
					  ;if cannot find, means full 
    3138 0AD5				                                       
					 findEmptyCustEnd: 
    3139 0AD5  E8 0DE4 R		                                       
					 call        CUST_DETAIL_INPUT 
    3140				 
    3141 0AD8  8A 16 2266 R		                                       
					 mov         dl, [customerCount] 
    3142 0ADC  FE C2			                                       
					 inc         dl 
    3143 0ADE  88 16 2266 R		                                       
					 mov         [customerCount], dl 
    3144				 
    3145 0AE2  8A 0E 2266 R		                                       
					 mov         cl, [customerCount] 
    3146 0AE6  80 F9 05			                                       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-74


					 cmp         cl, maxCustNum 
    3147 0AE9  73 3F			                                       
					 jae          customerFull 
    3148				 
    3149				                                       
					 ;;continue input? 
    3150 0AEB				                                       
					 customerEnterInput: 
    3151				                                       
					             CURSOR      18, 0 
    3152 0AEB  50                    1	                push    ax 
    3153 0AEC  53                    1	                push    bx 
    3154 0AED  51                    1	                push    cx 
    3155 0AEE  52                    1	                push    dx 
    3156 0AEF  B6 12                 1	                mov dh, 18        ;row 
    3157 0AF1  B2 00                 1	                mov dl, 0       ;column
					 
    3158 0AF3  B7 00                 1	                mov bh, 0         ; 
    3159 0AF5  B4 02                 1	                mov ah, 02h       ; 
    3160 0AF7  CD 10                 1	                int 10h 
    3161 0AF9  5A                    1	                pop    dx 
    3162 0AFA  59                    1	                pop    cx 
    3163 0AFB  5B                    1	                pop    bx 
    3164 0AFC  58                    1	                pop    ax 
    3165				                                       
					             COLOUR_CHAR 0, 00001011b, 
					  40 
    3166 0AFD  50                    1	                push    ax 
    3167 0AFE  53                    1	                push    bx 
    3168 0AFF  51                    1	                push    cx 
    3169 0B00  52                    1	                push    dx 
    3170 0B01  33 DB                 1	                xor     bx,bx 
    3171 0B03  B9 0028               1	                mov cx, 40 
    3172 0B06  B0 00                 1	                mov al, 0 
    3173 0B08  B3 0B                 1	                mov bl, 00001011b 
    3174 0B0A  B4 09                 1	                mov ah, 09h 
    3175 0B0C  CD 10                 1	                int 10h 
    3176 0B0E  5A                    1	                pop    dx 
    3177 0B0F  59                    1	                pop    cx 
    3178 0B10  5B                    1	                pop    bx 
    3179 0B11  58                    1	                pop    ax 
    3180 0B12  8D 16 1CDE R		                                       
					             lea         dx, promptCust
					ContinueAdd 
    3181 0B16  E8 13D2 R		                                       
					             call        PRINT_STR 
    3182				 
    3183 0B19  B4 01			                                       
					             mov         ah, 01h 
    3184 0B1B  CD 21			                                       
					             int         21h 
    3185				 
    3186 0B1D  3C 6E			                                       
					             cmp         al, "n" 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-75


    3187 0B1F  74 1E			                                       
					             je          customerEnterE
					xit 
    3188				 
    3189 0B21  3C 79			                                       
					             cmp         al, "y" 
    3190 0B23  75 C6			                                       
					             jne         customerEnterI
					nput 
    3191				 
    3192 0B25  E8 0D20 R		                                       
					 call        CLEAR_CUST_INPUT 
    3193 0B28  EB 8C			                                       
					 jmp         customerEnter 
    3194				 
    3195 0B2A				                            customerFul
					l: 
    3196				                                       
					 CURSOR      0,0 
    3197 0B2A  50                    1	                push    ax 
    3198 0B2B  53                    1	                push    bx 
    3199 0B2C  51                    1	                push    cx 
    3200 0B2D  52                    1	                push    dx 
    3201 0B2E  B6 00                 1	                mov dh, 0        ;row 
    3202 0B30  B2 00                 1	                mov dl, 0       ;column
					 
    3203 0B32  B7 00                 1	                mov bh, 0         ; 
    3204 0B34  B4 02                 1	                mov ah, 02h       ; 
    3205 0B36  CD 10                 1	                int 10h 
    3206 0B38  5A                    1	                pop    dx 
    3207 0B39  59                    1	                pop    cx 
    3208 0B3A  5B                    1	                pop    bx 
    3209 0B3B  58                    1	                pop    ax 
    3210 0B3C  E8 0CDA R		                                       
					 call        CUST_FULL_BOX 
    3211				 
    3212 0B3F				                            customerEnt
					erExit: 
    3213				 
    3214 0B3F  C3			                            ret 
    3215 0B40				ADD_CUSTOMER        ENDP 
    3216				 
    3217 0B40				REMOVE_CUSTOMER     PROC 
    3218 0B40  E8 0B99 R		                        call        DIS
					PLAY_ALL_CUST 
    3219 0B43  E8 0FDE R		                        call        CUS
					TOMER_NUMBERING      ;show numbering on
					 the customers 
    3220				 
    3221 0B46				                        REMOVE_CUSTOMER
					_INPUT_LOOP: 
    3222				                                    CUR
					SOR      18, 0 
    3223 0B46  50                    1	                push    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-76


    3224 0B47  53                    1	                push    bx 
    3225 0B48  51                    1	                push    cx 
    3226 0B49  52                    1	                push    dx 
    3227 0B4A  B6 12                 1	                mov dh, 18        ;row 
    3228 0B4C  B2 00                 1	                mov dl, 0       ;column
					 
    3229 0B4E  B7 00                 1	                mov bh, 0         ; 
    3230 0B50  B4 02                 1	                mov ah, 02h       ; 
    3231 0B52  CD 10                 1	                int 10h 
    3232 0B54  5A                    1	                pop    dx 
    3233 0B55  59                    1	                pop    cx 
    3234 0B56  5B                    1	                pop    bx 
    3235 0B57  58                    1	                pop    ax 
    3236 0B58  8D 16 2244 R		                                    lea
					         dx, customerRemovePrompt 
    3237 0B5C  E8 13D2 R		                                    cal
					l        PRINT_STR 
    3238				 
    3239 0B5F  B4 01			                                    mov
					         ah, 01h 
    3240 0B61  CD 21			                                    int
					         21h 
    3241				 
    3242 0B63  32 E4			                                    xor
					         ah,ah 
    3243 0B65  2C 30			                                    sub
					         al, 48d     ;convert into valu
					e 
    3244 0B67  FE C8			                                    dec
					         al          ;dec 1 
    3245				 
    3246 0B69  3C 00			                                    cmp
					         al, 0 
    3247 0B6B  72 D9			                                    jb 
					         REMOVE_CUSTOMER_INPUT_LOOP 
    3248				 
    3249 0B6D  3C 05			                                    cmp
					         al, maxCustNum 
    3250 0B6F  73 D5			                                    jae
					         REMOVE_CUSTOMER_INPUT_LOOP 
    3251				 
    3252 0B71  8D 36 2267 R		                        lea         si,
					 customerArr 
    3253 0B75  BB 0030			                        mov         bx,
					 customerSize 
    3254 0B78  F7 E3			                        mul         bx 
    3255 0B7A  03 F0			                        add         si,
					 ax 
    3256 0B7C  E8 0B80 R		                        call        REM
					OVE_SI_CUST 
    3257				 
    3258 0B7F  C3			                        ret 
    3259 0B80				REMOVE_CUSTOMER     ENDP 
    3260				 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-77


    3261 0B80				REMOVE_SI_CUST      PROC 
    3262 0B80  8A 04			                        mov         al,
					 [si] 
    3263 0B82  3C 24			                        cmp         al,
					 "$" 
    3264 0B84  74 12			                        je          REM
					OVE_SI_CUST_EXIT 
    3265				 
    3266 0B86  B9 0030			                        mov         cx,
					 customerSize 
    3267 0B89  B0 24			                        mov         al,
					 "$" 
    3268 0B8B				                        REMOVE_SI_CUST_
					LOOP: 
    3269 0B8B  88 04			                                    mov
					     [si],   al 
    3270 0B8D  46			                                    inc
					     si 
    3271 0B8E  E2 FB			                                    loo
					p    REMOVE_SI_CUST_LOOP 
    3272				 
    3273				 
    3274 0B90  A0 2266 R		                        mov         al,
					 [customerCount] 
    3275 0B93  FE C8			                        dec         al 
    3276 0B95  A2 2266 R		                        MOV         [cu
					stomerCount],    al 
    3277				 
    3278 0B98				                        REMOVE_SI_CUST_
					EXIT: 
    3279 0B98  C3			                        ret 
    3280 0B99				REMOVE_SI_CUST      ENDP 
    3281				 
    3282 0B99				DISPLAY_ALL_CUST    PROC            ;di
					splay customerArr 
    3283				                            CURSOR     
					 2,0 
    3284 0B99  50                    1	                push    ax 
    3285 0B9A  53                    1	                push    bx 
    3286 0B9B  51                    1	                push    cx 
    3287 0B9C  52                    1	                push    dx 
    3288 0B9D  B6 02                 1	                mov dh, 2        ;row 
    3289 0B9F  B2 00                 1	                mov dl, 0       ;column
					 
    3290 0BA1  B7 00                 1	                mov bh, 0         ; 
    3291 0BA3  B4 02                 1	                mov ah, 02h       ; 
    3292 0BA5  CD 10                 1	                int 10h 
    3293 0BA7  5A                    1	                pop    dx 
    3294 0BA8  59                    1	                pop    cx 
    3295 0BA9  5B                    1	                pop    bx 
    3296 0BAA  58                    1	                pop    ax 
    3297 0BAB  8D 16 1F01 R		                            lea        
					 dx, custDisplayBorder 
    3298 0BAF  E8 13D2 R		                            call       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-78


					 PRINT_STR 
    3299				 
    3300				                            CURSOR     
					 3,2 
    3301 0BB2  50                    1	                push    ax 
    3302 0BB3  53                    1	                push    bx 
    3303 0BB4  51                    1	                push    cx 
    3304 0BB5  52                    1	                push    dx 
    3305 0BB6  B6 03                 1	                mov dh, 3        ;row 
    3306 0BB8  B2 02                 1	                mov dl, 2       ;column
					 
    3307 0BBA  B7 00                 1	                mov bh, 0         ; 
    3308 0BBC  B4 02                 1	                mov ah, 02h       ; 
    3309 0BBE  CD 10                 1	                int 10h 
    3310 0BC0  5A                    1	                pop    dx 
    3311 0BC1  59                    1	                pop    cx 
    3312 0BC2  5B                    1	                pop    bx 
    3313 0BC3  58                    1	                pop    ax 
    3314				                            COLOUR_CHAR
					 0,  00001011b,  3 
    3315 0BC4  50                    1	                push    ax 
    3316 0BC5  53                    1	                push    bx 
    3317 0BC6  51                    1	                push    cx 
    3318 0BC7  52                    1	                push    dx 
    3319 0BC8  33 DB                 1	                xor     bx,bx 
    3320 0BCA  B9 0003               1	                mov cx, 3 
    3321 0BCD  B0 00                 1	                mov al, 0 
    3322 0BCF  B3 0B                 1	                mov bl, 00001011b 
    3323 0BD1  B4 09                 1	                mov ah, 09h 
    3324 0BD3  CD 10                 1	                int 10h 
    3325 0BD5  5A                    1	                pop    dx 
    3326 0BD6  59                    1	                pop    cx 
    3327 0BD7  5B                    1	                pop    bx 
    3328 0BD8  58                    1	                pop    ax 
    3329 0BD9  8D 16 1EE8 R		                            lea        
					 dx, customerIDHeader 
    3330 0BDD  E8 13D2 R		                            call       
					 PRINT_STR 
    3331				 
    3332				                            CURSOR     
					 3,11 
    3333 0BE0  50                    1	                push    ax 
    3334 0BE1  53                    1	                push    bx 
    3335 0BE2  51                    1	                push    cx 
    3336 0BE3  52                    1	                push    dx 
    3337 0BE4  B6 03                 1	                mov dh, 3        ;row 
    3338 0BE6  B2 0B                 1	                mov dl, 11       ;colum
					n 
    3339 0BE8  B7 00                 1	                mov bh, 0         ; 
    3340 0BEA  B4 02                 1	                mov ah, 02h       ; 
    3341 0BEC  CD 10                 1	                int 10h 
    3342 0BEE  5A                    1	                pop    dx 
    3343 0BEF  59                    1	                pop    cx 
    3344 0BF0  5B                    1	                pop    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-79


    3345 0BF1  58                    1	                pop    ax 
    3346				                            COLOUR_CHAR
					 0,  00001011b,  10 
    3347 0BF2  50                    1	                push    ax 
    3348 0BF3  53                    1	                push    bx 
    3349 0BF4  51                    1	                push    cx 
    3350 0BF5  52                    1	                push    dx 
    3351 0BF6  33 DB                 1	                xor     bx,bx 
    3352 0BF8  B9 000A               1	                mov cx, 10 
    3353 0BFB  B0 00                 1	                mov al, 0 
    3354 0BFD  B3 0B                 1	                mov bl, 00001011b 
    3355 0BFF  B4 09                 1	                mov ah, 09h 
    3356 0C01  CD 10                 1	                int 10h 
    3357 0C03  5A                    1	                pop    dx 
    3358 0C04  59                    1	                pop    cx 
    3359 0C05  5B                    1	                pop    bx 
    3360 0C06  58                    1	                pop    ax 
    3361 0C07  8D 16 1EEB R		                            lea        
					 dx, customerNameHeader 
    3362 0C0B  E8 13D2 R		                            call       
					 PRINT_STR 
    3363				 
    3364				                            CURSOR     
					 3,32 
    3365 0C0E  50                    1	                push    ax 
    3366 0C0F  53                    1	                push    bx 
    3367 0C10  51                    1	                push    cx 
    3368 0C11  52                    1	                push    dx 
    3369 0C12  B6 03                 1	                mov dh, 3        ;row 
    3370 0C14  B2 20                 1	                mov dl, 32       ;colum
					n 
    3371 0C16  B7 00                 1	                mov bh, 0         ; 
    3372 0C18  B4 02                 1	                mov ah, 02h       ; 
    3373 0C1A  CD 10                 1	                int 10h 
    3374 0C1C  5A                    1	                pop    dx 
    3375 0C1D  59                    1	                pop    cx 
    3376 0C1E  5B                    1	                pop    bx 
    3377 0C1F  58                    1	                pop    ax 
    3378				                            COLOUR_CHAR
					 0,  00001011b,  3 
    3379 0C20  50                    1	                push    ax 
    3380 0C21  53                    1	                push    bx 
    3381 0C22  51                    1	                push    cx 
    3382 0C23  52                    1	                push    dx 
    3383 0C24  33 DB                 1	                xor     bx,bx 
    3384 0C26  B9 0003               1	                mov cx, 3 
    3385 0C29  B0 00                 1	                mov al, 0 
    3386 0C2B  B3 0B                 1	                mov bl, 00001011b 
    3387 0C2D  B4 09                 1	                mov ah, 09h 
    3388 0C2F  CD 10                 1	                int 10h 
    3389 0C31  5A                    1	                pop    dx 
    3390 0C32  59                    1	                pop    cx 
    3391 0C33  5B                    1	                pop    bx 
    3392 0C34  58                    1	                pop    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-80


    3393 0C35  8D 16 1EF0 R		                            lea        
					 dx, customerAgeHeader 
    3394 0C39  E8 13D2 R		                            call       
					 PRINT_STR 
    3395				 
    3396				                            CURSOR     
					 3,38 
    3397 0C3C  50                    1	                push    ax 
    3398 0C3D  53                    1	                push    bx 
    3399 0C3E  51                    1	                push    cx 
    3400 0C3F  52                    1	                push    dx 
    3401 0C40  B6 03                 1	                mov dh, 3        ;row 
    3402 0C42  B2 26                 1	                mov dl, 38       ;colum
					n 
    3403 0C44  B7 00                 1	                mov bh, 0         ; 
    3404 0C46  B4 02                 1	                mov ah, 02h       ; 
    3405 0C48  CD 10                 1	                int 10h 
    3406 0C4A  5A                    1	                pop    dx 
    3407 0C4B  59                    1	                pop    cx 
    3408 0C4C  5B                    1	                pop    bx 
    3409 0C4D  58                    1	                pop    ax 
    3410				                            COLOUR_CHAR
					 0,  00001011b,  10 
    3411 0C4E  50                    1	                push    ax 
    3412 0C4F  53                    1	                push    bx 
    3413 0C50  51                    1	                push    cx 
    3414 0C51  52                    1	                push    dx 
    3415 0C52  33 DB                 1	                xor     bx,bx 
    3416 0C54  B9 000A               1	                mov cx, 10 
    3417 0C57  B0 00                 1	                mov al, 0 
    3418 0C59  B3 0B                 1	                mov bl, 00001011b 
    3419 0C5B  B4 09                 1	                mov ah, 09h 
    3420 0C5D  CD 10                 1	                int 10h 
    3421 0C5F  5A                    1	                pop    dx 
    3422 0C60  59                    1	                pop    cx 
    3423 0C61  5B                    1	                pop    bx 
    3424 0C62  58                    1	                pop    ax 
    3425 0C63  8D 16 1EF4 R		                            lea        
					 dx, customerPhoneHeader 
    3426 0C67  E8 13D2 R		                            call       
					 PRINT_STR 
    3427				 
    3428				                            CURSOR     
					 3,52 
    3429 0C6A  50                    1	                push    ax 
    3430 0C6B  53                    1	                push    bx 
    3431 0C6C  51                    1	                push    cx 
    3432 0C6D  52                    1	                push    dx 
    3433 0C6E  B6 03                 1	                mov dh, 3        ;row 
    3434 0C70  B2 34                 1	                mov dl, 52       ;colum
					n 
    3435 0C72  B7 00                 1	                mov bh, 0         ; 
    3436 0C74  B4 02                 1	                mov ah, 02h       ; 
    3437 0C76  CD 10                 1	                int 10h 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-81


    3438 0C78  5A                    1	                pop    dx 
    3439 0C79  59                    1	                pop    cx 
    3440 0C7A  5B                    1	                pop    bx 
    3441 0C7B  58                    1	                pop    ax 
    3442				                            COLOUR_CHAR
					 0,  00001011b,  7 
    3443 0C7C  50                    1	                push    ax 
    3444 0C7D  53                    1	                push    bx 
    3445 0C7E  51                    1	                push    cx 
    3446 0C7F  52                    1	                push    dx 
    3447 0C80  33 DB                 1	                xor     bx,bx 
    3448 0C82  B9 0007               1	                mov cx, 7 
    3449 0C85  B0 00                 1	                mov al, 0 
    3450 0C87  B3 0B                 1	                mov bl, 00001011b 
    3451 0C89  B4 09                 1	                mov ah, 09h 
    3452 0C8B  CD 10                 1	                int 10h 
    3453 0C8D  5A                    1	                pop    dx 
    3454 0C8E  59                    1	                pop    cx 
    3455 0C8F  5B                    1	                pop    bx 
    3456 0C90  58                    1	                pop    ax 
    3457 0C91  8D 16 1EFA R		                            lea        
					 dx, customerPointHeader 
    3458 0C95  E8 13D2 R		                            call       
					 PRINT_STR 
    3459				 
    3460 0C98  33 DB			                            xor        
					 bx, bx 
    3461 0C9A  B3 03			                            mov        
					 bl, 3 
    3462				                            CURSOR     
					 3,20     
    3463 0C9C  50                    1	                push    ax 
    3464 0C9D  53                    1	                push    bx 
    3465 0C9E  51                    1	                push    cx 
    3466 0C9F  52                    1	                push    dx 
    3467 0CA0  B6 03                 1	                mov dh, 3        ;row 
    3468 0CA2  B2 14                 1	                mov dl, 20       ;colum
					n 
    3469 0CA4  B7 00                 1	                mov bh, 0         ; 
    3470 0CA6  B4 02                 1	                mov ah, 02h       ; 
    3471 0CA8  CD 10                 1	                int 10h 
    3472 0CAA  5A                    1	                pop    dx 
    3473 0CAB  59                    1	                pop    cx 
    3474 0CAC  5B                    1	                pop    bx 
    3475 0CAD  58                    1	                pop    ax 
    3476 0CAE  8D 36 2267 R		                            lea        
					 si ,customerArr         ;print all cus
					tomers 
    3477 0CB2  E8 0F2C R		                            call       
					 PRINT_ALL_CUST 
    3478				 
    3479				 
    3480				 
    3481				                            CURSOR     
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-82


					 18,2 
    3482 0CB5  50                    1	                push    ax 
    3483 0CB6  53                    1	                push    bx 
    3484 0CB7  51                    1	                push    cx 
    3485 0CB8  52                    1	                push    dx 
    3486 0CB9  B6 12                 1	                mov dh, 18        ;row 
    3487 0CBB  B2 02                 1	                mov dl, 2       ;column
					 
    3488 0CBD  B7 00                 1	                mov bh, 0         ; 
    3489 0CBF  B4 02                 1	                mov ah, 02h       ; 
    3490 0CC1  CD 10                 1	                int 10h 
    3491 0CC3  5A                    1	                pop    dx 
    3492 0CC4  59                    1	                pop    cx 
    3493 0CC5  5B                    1	                pop    bx 
    3494 0CC6  58                    1	                pop    ax 
    3495 0CC7  8D 16 1CF9 R		                            lea        
					 dx, totalCustomersStr    
    3496 0CCB  E8 13D2 R		                            call       
					 PRINT_STR 
    3497				 
    3498 0CCE  8A 16 2266 R		                            mov        
					 dl, [customerCount]     ;print number 
					of customer 
    3499 0CD2  80 C2 30			                            add        
					 dl, 48d 
    3500 0CD5  B4 02			                            mov        
					 ah, 02h 
    3501 0CD7  CD 21			                            int        
					 21h 
    3502				 
    3503 0CD9  C3			                            ret 
    3504 0CDA				DISPLAY_ALL_CUST    ENDP 
    3505				 
    3506 0CDA				CUST_FULL_BOX       PROC 
    3507				                            BG_16_COLOU
					R 
    3508 0CDA  50                    1	                push    ax 
    3509 0CDB  53                    1	                push    bx 
    3510 0CDC  51                    1	                push    cx 
    3511 0CDD  52                    1	                push    dx 
    3512 0CDE  33 C0                 1	                xor     ax,ax 
    3513 0CE0  33 DB                 1	                xor     bx,bx 
    3514 0CE2  33 C9                 1	                xor     cx,cx 
    3515 0CE4  33 D2                 1	                xor     dx,dx 
    3516 0CE6  B8 1003               1	                mov         ax, 1003h 
    3517 0CE9  B3 00                 1	                mov         bl, 0000h  
					     ;enable 16 colours for background,
					 disable text blink 
    3518 0CEB  CD 10                 1	                int         10h 
    3519 0CED  5A                    1	                pop    dx 
    3520 0CEE  59                    1	                pop    cx 
    3521 0CEF  5B                    1	                pop    bx 
    3522 0CF0  58                    1	                pop    ax 
    3523 0CF1  8D 36 2228 R		                            lea        
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-83


					 si, custFullBox1 
    3524 0CF5  E8 1381 R		                            call       
					 DISPLAY_BOX 
    3525 0CF8  8D 36 222D R		                            lea        
					 si, custFullBox2 
    3526 0CFC  E8 1381 R		                            call       
					 DISPLAY_BOX 
    3527 0CFF  8D 36 2232 R		                            lea        
					 si, custFullBox3 
    3528 0D03  E8 1381 R		                            call       
					 DISPLAY_BOX 
    3529				                            CURSOR     
					 8, 26 
    3530 0D06  50                    1	                push    ax 
    3531 0D07  53                    1	                push    bx 
    3532 0D08  51                    1	                push    cx 
    3533 0D09  52                    1	                push    dx 
    3534 0D0A  B6 08                 1	                mov dh, 8        ;row 
    3535 0D0C  B2 1A                 1	                mov dl, 26       ;colum
					n 
    3536 0D0E  B7 00                 1	                mov bh, 0         ; 
    3537 0D10  B4 02                 1	                mov ah, 02h       ; 
    3538 0D12  CD 10                 1	                int 10h 
    3539 0D14  5A                    1	                pop    dx 
    3540 0D15  59                    1	                pop    cx 
    3541 0D16  5B                    1	                pop    bx 
    3542 0D17  58                    1	                pop    ax 
    3543 0D18  8D 16 1CCA R		                            lea        
					 dx, promptCustomerFull 
    3544 0D1C  E8 13D2 R		                            call       
					 PRINT_STR 
    3545 0D1F  C3			                            ret 
    3546 0D20				CUST_FULL_BOX       ENDP 
    3547				 
    3548 0D20				CLEAR_CUST_INPUT    PROC 
    3549				                        CURSOR      6, 
					15 
    3550 0D20  50                    1	                push    ax 
    3551 0D21  53                    1	                push    bx 
    3552 0D22  51                    1	                push    cx 
    3553 0D23  52                    1	                push    dx 
    3554 0D24  B6 06                 1	                mov dh, 6        ;row 
    3555 0D26  B2 0F                 1	                mov dl, 15       ;colum
					n 
    3556 0D28  B7 00                 1	                mov bh, 0         ; 
    3557 0D2A  B4 02                 1	                mov ah, 02h       ; 
    3558 0D2C  CD 10                 1	                int 10h 
    3559 0D2E  5A                    1	                pop    dx 
    3560 0D2F  59                    1	                pop    cx 
    3561 0D30  5B                    1	                pop    bx 
    3562 0D31  58                    1	                pop    ax 
    3563				                        COLOUR_CHAR " "
					, 00001010b, 20d 
    3564 0D32  50                    1	                push    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-84


    3565 0D33  53                    1	                push    bx 
    3566 0D34  51                    1	                push    cx 
    3567 0D35  52                    1	                push    dx 
    3568 0D36  33 DB                 1	                xor     bx,bx 
    3569 0D38  B9 0014               1	                mov cx, 20d 
    3570 0D3B  B0 20                 1	                mov al, " " 
    3571 0D3D  B3 0A                 1	                mov bl, 00001010b 
    3572 0D3F  B4 09                 1	                mov ah, 09h 
    3573 0D41  CD 10                 1	                int 10h 
    3574 0D43  5A                    1	                pop    dx 
    3575 0D44  59                    1	                pop    cx 
    3576 0D45  5B                    1	                pop    bx 
    3577 0D46  58                    1	                pop    ax 
    3578				                        CURSOR      8, 
					17 
    3579 0D47  50                    1	                push    ax 
    3580 0D48  53                    1	                push    bx 
    3581 0D49  51                    1	                push    cx 
    3582 0D4A  52                    1	                push    dx 
    3583 0D4B  B6 08                 1	                mov dh, 8        ;row 
    3584 0D4D  B2 11                 1	                mov dl, 17       ;colum
					n 
    3585 0D4F  B7 00                 1	                mov bh, 0         ; 
    3586 0D51  B4 02                 1	                mov ah, 02h       ; 
    3587 0D53  CD 10                 1	                int 10h 
    3588 0D55  5A                    1	                pop    dx 
    3589 0D56  59                    1	                pop    cx 
    3590 0D57  5B                    1	                pop    bx 
    3591 0D58  58                    1	                pop    ax 
    3592				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    3593 0D59  50                    1	                push    ax 
    3594 0D5A  53                    1	                push    bx 
    3595 0D5B  51                    1	                push    cx 
    3596 0D5C  52                    1	                push    dx 
    3597 0D5D  33 DB                 1	                xor     bx,bx 
    3598 0D5F  B9 0014               1	                mov cx, 20d 
    3599 0D62  B0 00                 1	                mov al, 0 
    3600 0D64  B3 0A                 1	                mov bl, 00001010b 
    3601 0D66  B4 09                 1	                mov ah, 09h 
    3602 0D68  CD 10                 1	                int 10h 
    3603 0D6A  5A                    1	                pop    dx 
    3604 0D6B  59                    1	                pop    cx 
    3605 0D6C  5B                    1	                pop    bx 
    3606 0D6D  58                    1	                pop    ax 
    3607				                        CURSOR      10,
					 16 
    3608 0D6E  50                    1	                push    ax 
    3609 0D6F  53                    1	                push    bx 
    3610 0D70  51                    1	                push    cx 
    3611 0D71  52                    1	                push    dx 
    3612 0D72  B6 0A                 1	                mov dh, 10        ;row 
    3613 0D74  B2 10                 1	                mov dl, 16       ;colum
					n 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-85


    3614 0D76  B7 00                 1	                mov bh, 0         ; 
    3615 0D78  B4 02                 1	                mov ah, 02h       ; 
    3616 0D7A  CD 10                 1	                int 10h 
    3617 0D7C  5A                    1	                pop    dx 
    3618 0D7D  59                    1	                pop    cx 
    3619 0D7E  5B                    1	                pop    bx 
    3620 0D7F  58                    1	                pop    ax 
    3621				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    3622 0D80  50                    1	                push    ax 
    3623 0D81  53                    1	                push    bx 
    3624 0D82  51                    1	                push    cx 
    3625 0D83  52                    1	                push    dx 
    3626 0D84  33 DB                 1	                xor     bx,bx 
    3627 0D86  B9 0014               1	                mov cx, 20d 
    3628 0D89  B0 00                 1	                mov al, 0 
    3629 0D8B  B3 0A                 1	                mov bl, 00001010b 
    3630 0D8D  B4 09                 1	                mov ah, 09h 
    3631 0D8F  CD 10                 1	                int 10h 
    3632 0D91  5A                    1	                pop    dx 
    3633 0D92  59                    1	                pop    cx 
    3634 0D93  5B                    1	                pop    bx 
    3635 0D94  58                    1	                pop    ax 
    3636				                        CURSOR      12,
					 18 
    3637 0D95  50                    1	                push    ax 
    3638 0D96  53                    1	                push    bx 
    3639 0D97  51                    1	                push    cx 
    3640 0D98  52                    1	                push    dx 
    3641 0D99  B6 0C                 1	                mov dh, 12        ;row 
    3642 0D9B  B2 12                 1	                mov dl, 18       ;colum
					n 
    3643 0D9D  B7 00                 1	                mov bh, 0         ; 
    3644 0D9F  B4 02                 1	                mov ah, 02h       ; 
    3645 0DA1  CD 10                 1	                int 10h 
    3646 0DA3  5A                    1	                pop    dx 
    3647 0DA4  59                    1	                pop    cx 
    3648 0DA5  5B                    1	                pop    bx 
    3649 0DA6  58                    1	                pop    ax 
    3650				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    3651 0DA7  50                    1	                push    ax 
    3652 0DA8  53                    1	                push    bx 
    3653 0DA9  51                    1	                push    cx 
    3654 0DAA  52                    1	                push    dx 
    3655 0DAB  33 DB                 1	                xor     bx,bx 
    3656 0DAD  B9 0014               1	                mov cx, 20d 
    3657 0DB0  B0 00                 1	                mov al, 0 
    3658 0DB2  B3 0A                 1	                mov bl, 00001010b 
    3659 0DB4  B4 09                 1	                mov ah, 09h 
    3660 0DB6  CD 10                 1	                int 10h 
    3661 0DB8  5A                    1	                pop    dx 
    3662 0DB9  59                    1	                pop    cx 
    3663 0DBA  5B                    1	                pop    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-86


    3664 0DBB  58                    1	                pop    ax 
    3665				                        CURSOR      14,
					 18 
    3666 0DBC  50                    1	                push    ax 
    3667 0DBD  53                    1	                push    bx 
    3668 0DBE  51                    1	                push    cx 
    3669 0DBF  52                    1	                push    dx 
    3670 0DC0  B6 0E                 1	                mov dh, 14        ;row 
    3671 0DC2  B2 12                 1	                mov dl, 18       ;colum
					n 
    3672 0DC4  B7 00                 1	                mov bh, 0         ; 
    3673 0DC6  B4 02                 1	                mov ah, 02h       ; 
    3674 0DC8  CD 10                 1	                int 10h 
    3675 0DCA  5A                    1	                pop    dx 
    3676 0DCB  59                    1	                pop    cx 
    3677 0DCC  5B                    1	                pop    bx 
    3678 0DCD  58                    1	                pop    ax 
    3679				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    3680 0DCE  50                    1	                push    ax 
    3681 0DCF  53                    1	                push    bx 
    3682 0DD0  51                    1	                push    cx 
    3683 0DD1  52                    1	                push    dx 
    3684 0DD2  33 DB                 1	                xor     bx,bx 
    3685 0DD4  B9 0014               1	                mov cx, 20d 
    3686 0DD7  B0 00                 1	                mov al, 0 
    3687 0DD9  B3 0A                 1	                mov bl, 00001010b 
    3688 0DDB  B4 09                 1	                mov ah, 09h 
    3689 0DDD  CD 10                 1	                int 10h 
    3690 0DDF  5A                    1	                pop    dx 
    3691 0DE0  59                    1	                pop    cx 
    3692 0DE1  5B                    1	                pop    bx 
    3693 0DE2  58                    1	                pop    ax 
    3694				 
    3695 0DE3  C3			                        ret 
    3696 0DE4				CLEAR_CUST_INPUT    ENDP 
    3697				 
    3698 0DE4				CUST_DETAIL_INPUT   PROC               
					                         ;input into cu
					stomer array 
    3699 0DE4  51			                        push        cx 
    3700 0DE5				                    startReadID: 
    3701				                        CURSOR      6, 
					15 
    3702 0DE5  50                    1	                push    ax 
    3703 0DE6  53                    1	                push    bx 
    3704 0DE7  51                    1	                push    cx 
    3705 0DE8  52                    1	                push    dx 
    3706 0DE9  B6 06                 1	                mov dh, 6        ;row 
    3707 0DEB  B2 0F                 1	                mov dl, 15       ;colum
					n 
    3708 0DED  B7 00                 1	                mov bh, 0         ; 
    3709 0DEF  B4 02                 1	                mov ah, 02h       ; 
    3710 0DF1  CD 10                 1	                int 10h 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-87


    3711 0DF3  5A                    1	                pop    dx 
    3712 0DF4  59                    1	                pop    cx 
    3713 0DF5  5B                    1	                pop    bx 
    3714 0DF6  58                    1	                pop    ax 
    3715				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    3716 0DF7  50                    1	                push    ax 
    3717 0DF8  53                    1	                push    bx 
    3718 0DF9  51                    1	                push    cx 
    3719 0DFA  52                    1	                push    dx 
    3720 0DFB  33 DB                 1	                xor     bx,bx 
    3721 0DFD  B9 0014               1	                mov cx, 20d 
    3722 0E00  B0 00                 1	                mov al, 0 
    3723 0E02  B3 0A                 1	                mov bl, 00001010b 
    3724 0E04  B4 09                 1	                mov ah, 09h 
    3725 0E06  CD 10                 1	                int 10h 
    3726 0E08  5A                    1	                pop    dx 
    3727 0E09  59                    1	                pop    cx 
    3728 0E0A  5B                    1	                pop    bx 
    3729 0E0B  58                    1	                pop    ax 
    3730 0E0C  56			                        push        si 
    3731 0E0D  B9 0005			                        mov         cx,
					 5d     
    3732				                               
    3733 0E10				                            readID: 
    3734 0E10  B4 01			                                    mov
					         ah, 01h 
    3735 0E12  CD 21			                                    int
					         21h 
    3736				 
    3737 0E14  3C 0D			                                    cmp
					         al, 13d 
    3738 0E16  74 05			                                    je 
					         startReadName 
    3739				 
    3740 0E18  88 04			                                    mov
					         [si], al 
    3741 0E1A  46			                                    inc
					         si 
    3742 0E1B  E2 F3			                                    loo
					p        readID  
    3743				 
    3744 0E1D				                    startReadName: 
    3745 0E1D  5E			                            pop        
					 si 
    3746 0E1E  56			                            push       
					 si 
    3747 0E1F  83 C6 06			                            add        
					 si, custName  
    3748 0E22  B3 24			                            mov        
					 bl, "$" 
    3749 0E24  88 1C			                            mov        
					 [si], bl        
    3750				                             
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-88


    3751				                            CURSOR     
					 8, 17 
    3752 0E26  50                    1	                push    ax 
    3753 0E27  53                    1	                push    bx 
    3754 0E28  51                    1	                push    cx 
    3755 0E29  52                    1	                push    dx 
    3756 0E2A  B6 08                 1	                mov dh, 8        ;row 
    3757 0E2C  B2 11                 1	                mov dl, 17       ;colum
					n 
    3758 0E2E  B7 00                 1	                mov bh, 0         ; 
    3759 0E30  B4 02                 1	                mov ah, 02h       ; 
    3760 0E32  CD 10                 1	                int 10h 
    3761 0E34  5A                    1	                pop    dx 
    3762 0E35  59                    1	                pop    cx 
    3763 0E36  5B                    1	                pop    bx 
    3764 0E37  58                    1	                pop    ax 
    3765				                            COLOUR_CHAR
					 0, 00001010b, 20d 
    3766 0E38  50                    1	                push    ax 
    3767 0E39  53                    1	                push    bx 
    3768 0E3A  51                    1	                push    cx 
    3769 0E3B  52                    1	                push    dx 
    3770 0E3C  33 DB                 1	                xor     bx,bx 
    3771 0E3E  B9 0014               1	                mov cx, 20d 
    3772 0E41  B0 00                 1	                mov al, 0 
    3773 0E43  B3 0A                 1	                mov bl, 00001010b 
    3774 0E45  B4 09                 1	                mov ah, 09h 
    3775 0E47  CD 10                 1	                int 10h 
    3776 0E49  5A                    1	                pop    dx 
    3777 0E4A  59                    1	                pop    cx 
    3778 0E4B  5B                    1	                pop    bx 
    3779 0E4C  58                    1	                pop    ax 
    3780 0E4D  B9 0014			                            mov        
					 cx, 20d 
    3781 0E50  EB 01 90			                            jmp        
					 readName 
    3782				                     
    3783 0E53				                            readName:  
					  
    3784				 
    3785 0E53  B4 01			                                    mov
					         ah, 01h 
    3786 0E55  CD 21			                                    int
					         21h 
    3787				 
    3788 0E57  3C 0D			                                    cmp
					         al, 13d 
    3789 0E59  74 05			                                    je 
					         startReadAge 
    3790				 
    3791 0E5B  88 04			                                    mov
					         [si], al 
    3792 0E5D  46			                                    inc
					         si 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-89


    3793				 
    3794 0E5E  E2 F3			                                    loo
					p        readName 
    3795				 
    3796 0E60				                    startReadAge: 
    3797 0E60  5E			                            pop        
					 si 
    3798 0E61  56			                            push       
					 si 
    3799 0E62  83 C6 1A			                            add        
					 si, Age 
    3800 0E65  B3 24			                            mov        
					 bl, "$" 
    3801 0E67  88 1C			                            mov        
					 [si], bl  
    3802				 
    3803				                            CURSOR     
					 10, 16 
    3804 0E69  50                    1	                push    ax 
    3805 0E6A  53                    1	                push    bx 
    3806 0E6B  51                    1	                push    cx 
    3807 0E6C  52                    1	                push    dx 
    3808 0E6D  B6 0A                 1	                mov dh, 10        ;row 
    3809 0E6F  B2 10                 1	                mov dl, 16       ;colum
					n 
    3810 0E71  B7 00                 1	                mov bh, 0         ; 
    3811 0E73  B4 02                 1	                mov ah, 02h       ; 
    3812 0E75  CD 10                 1	                int 10h 
    3813 0E77  5A                    1	                pop    dx 
    3814 0E78  59                    1	                pop    cx 
    3815 0E79  5B                    1	                pop    bx 
    3816 0E7A  58                    1	                pop    ax 
    3817				                            COLOUR_CHAR
					 0, 00001010b, 20d 
    3818 0E7B  50                    1	                push    ax 
    3819 0E7C  53                    1	                push    bx 
    3820 0E7D  51                    1	                push    cx 
    3821 0E7E  52                    1	                push    dx 
    3822 0E7F  33 DB                 1	                xor     bx,bx 
    3823 0E81  B9 0014               1	                mov cx, 20d 
    3824 0E84  B0 00                 1	                mov al, 0 
    3825 0E86  B3 0A                 1	                mov bl, 00001010b 
    3826 0E88  B4 09                 1	                mov ah, 09h 
    3827 0E8A  CD 10                 1	                int 10h 
    3828 0E8C  5A                    1	                pop    dx 
    3829 0E8D  59                    1	                pop    cx 
    3830 0E8E  5B                    1	                pop    bx 
    3831 0E8F  58                    1	                pop    ax 
    3832 0E90  B9 0004			                            mov        
					 cx, 4d 
    3833 0E93  EB 01 90			                            jmp        
					 readAge 
    3834				 
    3835 0E96				                            readAge: 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-90


    3836				 
    3837 0E96  B4 01			                                    mov
					         ah, 01h 
    3838 0E98  CD 21			                                    int
					         21h 
    3839				 
    3840 0E9A  3C 0D			                                    cmp
					         al, 13d 
    3841 0E9C  74 05			                                    je 
					         startReadPhone 
    3842				 
    3843 0E9E  88 04			                                    mov
					         [si], al 
    3844 0EA0  46			                                    inc
					         si 
    3845				 
    3846 0EA1  E2 F3			                                    loo
					p        readAge 
    3847				 
    3848 0EA3				                    startReadPhone: 
    3849				 
    3850 0EA3  5E			                            pop        
					 si 
    3851 0EA4  56			                            push       
					 si 
    3852 0EA5  83 C6 1E			                            add        
					 si, Phone 
    3853 0EA8  B3 24			                            mov        
					 bl, "$" 
    3854 0EAA  88 1C			                            mov        
					 [si], bl 
    3855				 
    3856				                            CURSOR     
					 12, 18 
    3857 0EAC  50                    1	                push    ax 
    3858 0EAD  53                    1	                push    bx 
    3859 0EAE  51                    1	                push    cx 
    3860 0EAF  52                    1	                push    dx 
    3861 0EB0  B6 0C                 1	                mov dh, 12        ;row 
    3862 0EB2  B2 12                 1	                mov dl, 18       ;colum
					n 
    3863 0EB4  B7 00                 1	                mov bh, 0         ; 
    3864 0EB6  B4 02                 1	                mov ah, 02h       ; 
    3865 0EB8  CD 10                 1	                int 10h 
    3866 0EBA  5A                    1	                pop    dx 
    3867 0EBB  59                    1	                pop    cx 
    3868 0EBC  5B                    1	                pop    bx 
    3869 0EBD  58                    1	                pop    ax 
    3870				                            COLOUR_CHAR
					 0, 00001010b, 20d 
    3871 0EBE  50                    1	                push    ax 
    3872 0EBF  53                    1	                push    bx 
    3873 0EC0  51                    1	                push    cx 
    3874 0EC1  52                    1	                push    dx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-91


    3875 0EC2  33 DB                 1	                xor     bx,bx 
    3876 0EC4  B9 0014               1	                mov cx, 20d 
    3877 0EC7  B0 00                 1	                mov al, 0 
    3878 0EC9  B3 0A                 1	                mov bl, 00001010b 
    3879 0ECB  B4 09                 1	                mov ah, 09h 
    3880 0ECD  CD 10                 1	                int 10h 
    3881 0ECF  5A                    1	                pop    dx 
    3882 0ED0  59                    1	                pop    cx 
    3883 0ED1  5B                    1	                pop    bx 
    3884 0ED2  58                    1	                pop    ax 
    3885 0ED3  B9 000C			                            mov        
					 cx, 12d 
    3886 0ED6  EB 01 90			                            jmp        
					 ReadPhone  
    3887				                     
    3888 0ED9				                            ReadPhone: 
					 
    3889				 
    3890 0ED9  B4 01			                                    mov
					         ah, 01h 
    3891 0EDB  CD 21			                                    int
					         21h 
    3892				 
    3893 0EDD  3C 0D			                                    cmp
					         al, 13d 
    3894 0EDF  74 05			                                    je 
					         startCustPoint 
    3895				 
    3896 0EE1  88 04			                                    mov
					         [si], al 
    3897 0EE3  46			                                    inc
					         si 
    3898				 
    3899 0EE4  E2 F3			                                    loo
					p        ReadPhone 
    3900				                     
    3901 0EE6				                    startCustPoint: 
    3902				 
    3903 0EE6  5E			                            pop        
					 si 
    3904 0EE7  56			                            push       
					 si 
    3905 0EE8  83 C6 2A			                            add        
					 si, bonusPoint 
    3906 0EEB  B3 24			                            mov        
					 bl, "$" 
    3907 0EED  88 1C			                            mov        
					 [si], bl 
    3908				 
    3909				                            CURSOR     
					 14, 18 
    3910 0EEF  50                    1	                push    ax 
    3911 0EF0  53                    1	                push    bx 
    3912 0EF1  51                    1	                push    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-92


    3913 0EF2  52                    1	                push    dx 
    3914 0EF3  B6 0E                 1	                mov dh, 14        ;row 
    3915 0EF5  B2 12                 1	                mov dl, 18       ;colum
					n 
    3916 0EF7  B7 00                 1	                mov bh, 0         ; 
    3917 0EF9  B4 02                 1	                mov ah, 02h       ; 
    3918 0EFB  CD 10                 1	                int 10h 
    3919 0EFD  5A                    1	                pop    dx 
    3920 0EFE  59                    1	                pop    cx 
    3921 0EFF  5B                    1	                pop    bx 
    3922 0F00  58                    1	                pop    ax 
    3923				                            COLOUR_CHAR
					 0, 00001010b, 20d 
    3924 0F01  50                    1	                push    ax 
    3925 0F02  53                    1	                push    bx 
    3926 0F03  51                    1	                push    cx 
    3927 0F04  52                    1	                push    dx 
    3928 0F05  33 DB                 1	                xor     bx,bx 
    3929 0F07  B9 0014               1	                mov cx, 20d 
    3930 0F0A  B0 00                 1	                mov al, 0 
    3931 0F0C  B3 0A                 1	                mov bl, 00001010b 
    3932 0F0E  B4 09                 1	                mov ah, 09h 
    3933 0F10  CD 10                 1	                int 10h 
    3934 0F12  5A                    1	                pop    dx 
    3935 0F13  59                    1	                pop    cx 
    3936 0F14  5B                    1	                pop    bx 
    3937 0F15  58                    1	                pop    ax 
    3938 0F16  B9 0004			                            mov        
					 cx, 4d 
    3939 0F19  EB 01 90			                            jmp        
					 ReadPoint 
    3940				                     
    3941 0F1C				                            ReadPoint: 
    3942				 
    3943 0F1C  B4 01			                                    mov
					         ah, 01h 
    3944 0F1E  CD 21			                                    int
					         21h 
    3945				 
    3946 0F20  3C 0D			                                    cmp
					         al, 13d 
    3947 0F22  74 05			                                    je 
					         confirmAdded 
    3948				 
    3949 0F24  88 04			                                    mov
					         [si], al 
    3950 0F26  46			                                    inc
					         si 
    3951				 
    3952 0F27  E2 F3			                                    loo
					p        ReadPoint 
    3953				 
    3954 0F29				                    confirmAdded: 
    3955 0F29  5E			                            pop        
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-93


					 si 
    3956				 
    3957 0F2A  59			                            pop        
					 cx 
    3958				 
    3959 0F2B  C3			                            ret 
    3960 0F2C				CUST_DETAIL_INPUT   ENDP 
    3961				 
    3962 0F2C				PRINT_ALL_CUST      PROC               
					                         ;print custome
					r array in SI 
    3963 0F2C  56			                        push        si 
    3964				 
    3965 0F2D  53			                        push        bx 
    3966				                        ;;GET CURRENT C
					URSOR POS 
    3967 0F2E  B4 03			                        mov         ah,
					 03h 
    3968 0F30  B3 00			                        mov         bl,
					 00h 
    3969 0F32  CD 10			                        int         10h
					                 ;cursor pos will be st
					ored in dh dl 
    3970				 
    3971 0F34  5B			                        pop         bx 
    3972 0F35  52			                        push        dx 
    3973				 
    3974 0F36  33 C9			                        xor         cx,
					 cx 
    3975 0F38  B1 05			                        mov         cl,
					 maxCustNum 
    3976 0F3A				                        PRINT_ALL_CUST_
					LOOP: 
    3977 0F3A  80 C3 02			                                    add
					         bl  ,2 
    3978				                                    CUR
					SOR      bl  ,3 
    3979 0F3D  50                    1	                push    ax 
    3980 0F3E  53                    1	                push    bx 
    3981 0F3F  51                    1	                push    cx 
    3982 0F40  52                    1	                push    dx 
    3983 0F41  8A F3                 1	                mov dh, bl        ;row 
    3984 0F43  B2 03                 1	                mov dl, 3       ;column
					 
    3985 0F45  B7 00                 1	                mov bh, 0         ; 
    3986 0F47  B4 02                 1	                mov ah, 02h       ; 
    3987 0F49  CD 10                 1	                int 10h 
    3988 0F4B  5A                    1	                pop    dx 
    3989 0F4C  59                    1	                pop    cx 
    3990 0F4D  5B                    1	                pop    bx 
    3991 0F4E  58                    1	                pop    ax 
    3992				 
    3993 0F4F  E8 0F6C R		                                    cal
					l        PRINT_CUST 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-94


    3994 0F52  83 C6 30			                                    add
					         si  ,customerSize 
    3995				 
    3996 0F55  E2 E3			                                    loo
					p        PRINT_ALL_CUST_LOOP 
    3997				 
    3998 0F57  5A			                        pop         dx 
					                
    3999				                        CURSOR      dh,
					 dl 
    4000 0F58  50                    1	                push    ax 
    4001 0F59  53                    1	                push    bx 
    4002 0F5A  51                    1	                push    cx 
    4003 0F5B  52                    1	                push    dx 
    4004 0F5C  8A F6                 1	                mov dh, dh        ;row 
    4005 0F5E  8A D2                 1	                mov dl, dl       ;colum
					n 
    4006 0F60  B7 00                 1	                mov bh, 0         ; 
    4007 0F62  B4 02                 1	                mov ah, 02h       ; 
    4008 0F64  CD 10                 1	                int 10h 
    4009 0F66  5A                    1	                pop    dx 
    4010 0F67  59                    1	                pop    cx 
    4011 0F68  5B                    1	                pop    bx 
    4012 0F69  58                    1	                pop    ax 
    4013				 
    4014 0F6A  5E			                        pop         si 
    4015 0F6B  C3			                        ret 
    4016 0F6C				PRINT_ALL_CUST      ENDP 
    4017				 
    4018 0F6C				PRINT_CUST          PROC 
    4019 0F6C  50			                            push    ax 
    4020 0F6D  53			                            push    bx 
    4021 0F6E  51			                            push    cx 
    4022 0F6F  52			                            push    dx 
    4023 0F70  56			                            push    si 
    4024				 
    4025 0F71  33 C0			                            xor        
					 ax, ax 
    4026 0F73  8D 14			                            lea        
					 dx, [si]            ;id 
    4027 0F75  E8 13D2 R		                            call       
					 print_STR 
    4028				 
    4029				                            CURSOR     
					 bl, 10 
    4030 0F78  50                    1	                push    ax 
    4031 0F79  53                    1	                push    bx 
    4032 0F7A  51                    1	                push    cx 
    4033 0F7B  52                    1	                push    dx 
    4034 0F7C  8A F3                 1	                mov dh, bl        ;row 
    4035 0F7E  B2 0A                 1	                mov dl, 10       ;colum
					n 
    4036 0F80  B7 00                 1	                mov bh, 0         ; 
    4037 0F82  B4 02                 1	                mov ah, 02h       ; 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-95


    4038 0F84  CD 10                 1	                int 10h 
    4039 0F86  5A                    1	                pop    dx 
    4040 0F87  59                    1	                pop    cx 
    4041 0F88  5B                    1	                pop    bx 
    4042 0F89  58                    1	                pop    ax 
    4043 0F8A  8D 54 06			                            lea        
					 dx, [si + custName] 
    4044 0F8D  E8 13D2 R		                            call       
					 PRINT_STR 
    4045				 
    4046				                            CURSOR     
					 bl, 32 
    4047 0F90  50                    1	                push    ax 
    4048 0F91  53                    1	                push    bx 
    4049 0F92  51                    1	                push    cx 
    4050 0F93  52                    1	                push    dx 
    4051 0F94  8A F3                 1	                mov dh, bl        ;row 
    4052 0F96  B2 20                 1	                mov dl, 32       ;colum
					n 
    4053 0F98  B7 00                 1	                mov bh, 0         ; 
    4054 0F9A  B4 02                 1	                mov ah, 02h       ; 
    4055 0F9C  CD 10                 1	                int 10h 
    4056 0F9E  5A                    1	                pop    dx 
    4057 0F9F  59                    1	                pop    cx 
    4058 0FA0  5B                    1	                pop    bx 
    4059 0FA1  58                    1	                pop    ax 
    4060 0FA2  8D 54 1A			                            lea        
					 dx, [si + age] 
    4061 0FA5  E8 13D2 R		                            call       
					 PRINT_STR 
    4062				 
    4063				                            CURSOR     
					 bl, 37 
    4064 0FA8  50                    1	                push    ax 
    4065 0FA9  53                    1	                push    bx 
    4066 0FAA  51                    1	                push    cx 
    4067 0FAB  52                    1	                push    dx 
    4068 0FAC  8A F3                 1	                mov dh, bl        ;row 
    4069 0FAE  B2 25                 1	                mov dl, 37       ;colum
					n 
    4070 0FB0  B7 00                 1	                mov bh, 0         ; 
    4071 0FB2  B4 02                 1	                mov ah, 02h       ; 
    4072 0FB4  CD 10                 1	                int 10h 
    4073 0FB6  5A                    1	                pop    dx 
    4074 0FB7  59                    1	                pop    cx 
    4075 0FB8  5B                    1	                pop    bx 
    4076 0FB9  58                    1	                pop    ax 
    4077 0FBA  8D 54 1E			                            lea        
					 dx, [si + phone] 
    4078 0FBD  E8 13D2 R		                            call       
					 print_STR 
    4079				 
    4080				                            CURSOR     
					 bl, 52 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-96


    4081 0FC0  50                    1	                push    ax 
    4082 0FC1  53                    1	                push    bx 
    4083 0FC2  51                    1	                push    cx 
    4084 0FC3  52                    1	                push    dx 
    4085 0FC4  8A F3                 1	                mov dh, bl        ;row 
    4086 0FC6  B2 34                 1	                mov dl, 52       ;colum
					n 
    4087 0FC8  B7 00                 1	                mov bh, 0         ; 
    4088 0FCA  B4 02                 1	                mov ah, 02h       ; 
    4089 0FCC  CD 10                 1	                int 10h 
    4090 0FCE  5A                    1	                pop    dx 
    4091 0FCF  59                    1	                pop    cx 
    4092 0FD0  5B                    1	                pop    bx 
    4093 0FD1  58                    1	                pop    ax 
    4094 0FD2  8D 54 2A			                            lea        
					 dx, [si + bonusPoint] 
    4095 0FD5  E8 13D2 R		                            call       
					 print_STR 
    4096				 
    4097				 
    4098 0FD8  5E			                            pop     si 
    4099 0FD9  5A			                            pop     dx 
    4100 0FDA  59			                            pop     cx 
    4101 0FDB  5B			                            pop     bx 
    4102 0FDC  58			                            pop     ax 
    4103 0FDD  C3			                            ret 
    4104 0FDE				PRINT_CUST          ENDP 
    4105				 
    4106 0FDE				CUSTOMER_NUMBERING  PROC     
    4107 0FDE  B4 02			                        mov         ah,
					 2h 
    4108				                        CURSOR      5, 
					 60 
    4109 0FE0  50                    1	                push    ax 
    4110 0FE1  53                    1	                push    bx 
    4111 0FE2  51                    1	                push    cx 
    4112 0FE3  52                    1	                push    dx 
    4113 0FE4  B6 05                 1	                mov dh, 5        ;row 
    4114 0FE6  B2 3C                 1	                mov dl, 60       ;colum
					n 
    4115 0FE8  B7 00                 1	                mov bh, 0         ; 
    4116 0FEA  B4 02                 1	                mov ah, 02h       ; 
    4117 0FEC  CD 10                 1	                int 10h 
    4118 0FEE  5A                    1	                pop    dx 
    4119 0FEF  59                    1	                pop    cx 
    4120 0FF0  5B                    1	                pop    bx 
    4121 0FF1  58                    1	                pop    ax 
    4122 0FF2  8D 16 2237 R		                        lea         dx,
					 customerNumberLine 
    4123 0FF6  E8 13D2 R		                        call        PRI
					NT_STR 
    4124				                        COLOUR_CHAR 0, 
					 00001100b, 1d 
    4125 0FF9  50                    1	                push    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-97


    4126 0FFA  53                    1	                push    bx 
    4127 0FFB  51                    1	                push    cx 
    4128 0FFC  52                    1	                push    dx 
    4129 0FFD  33 DB                 1	                xor     bx,bx 
    4130 0FFF  B9 0001               1	                mov cx, 1d 
    4131 1002  B0 00                 1	                mov al, 0 
    4132 1004  B3 0C                 1	                mov bl, 00001100b 
    4133 1006  B4 09                 1	                mov ah, 09h 
    4134 1008  CD 10                 1	                int 10h 
    4135 100A  5A                    1	                pop    dx 
    4136 100B  59                    1	                pop    cx 
    4137 100C  5B                    1	                pop    bx 
    4138 100D  58                    1	                pop    ax 
    4139 100E  B2 31			                        mov         dl,
					 "1" 
    4140 1010  CD 21			                        int         21h
					 
    4141				 
    4142				                        CURSOR      7, 
					 60 
    4143 1012  50                    1	                push    ax 
    4144 1013  53                    1	                push    bx 
    4145 1014  51                    1	                push    cx 
    4146 1015  52                    1	                push    dx 
    4147 1016  B6 07                 1	                mov dh, 7        ;row 
    4148 1018  B2 3C                 1	                mov dl, 60       ;colum
					n 
    4149 101A  B7 00                 1	                mov bh, 0         ; 
    4150 101C  B4 02                 1	                mov ah, 02h       ; 
    4151 101E  CD 10                 1	                int 10h 
    4152 1020  5A                    1	                pop    dx 
    4153 1021  59                    1	                pop    cx 
    4154 1022  5B                    1	                pop    bx 
    4155 1023  58                    1	                pop    ax 
    4156 1024  8D 16 2237 R		                        lea         dx,
					 customerNumberLine 
    4157 1028  E8 13D2 R		                        call        PRI
					NT_STR 
    4158				                        COLOUR_CHAR 0, 
					 00001100b, 1d 
    4159 102B  50                    1	                push    ax 
    4160 102C  53                    1	                push    bx 
    4161 102D  51                    1	                push    cx 
    4162 102E  52                    1	                push    dx 
    4163 102F  33 DB                 1	                xor     bx,bx 
    4164 1031  B9 0001               1	                mov cx, 1d 
    4165 1034  B0 00                 1	                mov al, 0 
    4166 1036  B3 0C                 1	                mov bl, 00001100b 
    4167 1038  B4 09                 1	                mov ah, 09h 
    4168 103A  CD 10                 1	                int 10h 
    4169 103C  5A                    1	                pop    dx 
    4170 103D  59                    1	                pop    cx 
    4171 103E  5B                    1	                pop    bx 
    4172 103F  58                    1	                pop    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-98


    4173 1040  B2 32			                        mov         dl,
					 "2" 
    4174 1042  CD 21			                        int         21h
					 
    4175				 
    4176				                        CURSOR      9, 
					 60 
    4177 1044  50                    1	                push    ax 
    4178 1045  53                    1	                push    bx 
    4179 1046  51                    1	                push    cx 
    4180 1047  52                    1	                push    dx 
    4181 1048  B6 09                 1	                mov dh, 9        ;row 
    4182 104A  B2 3C                 1	                mov dl, 60       ;colum
					n 
    4183 104C  B7 00                 1	                mov bh, 0         ; 
    4184 104E  B4 02                 1	                mov ah, 02h       ; 
    4185 1050  CD 10                 1	                int 10h 
    4186 1052  5A                    1	                pop    dx 
    4187 1053  59                    1	                pop    cx 
    4188 1054  5B                    1	                pop    bx 
    4189 1055  58                    1	                pop    ax 
    4190 1056  8D 16 2237 R		                        lea         dx,
					 customerNumberLine 
    4191 105A  E8 13D2 R		                        call        PRI
					NT_STR 
    4192				                        COLOUR_CHAR 0, 
					 00001100b, 1d 
    4193 105D  50                    1	                push    ax 
    4194 105E  53                    1	                push    bx 
    4195 105F  51                    1	                push    cx 
    4196 1060  52                    1	                push    dx 
    4197 1061  33 DB                 1	                xor     bx,bx 
    4198 1063  B9 0001               1	                mov cx, 1d 
    4199 1066  B0 00                 1	                mov al, 0 
    4200 1068  B3 0C                 1	                mov bl, 00001100b 
    4201 106A  B4 09                 1	                mov ah, 09h 
    4202 106C  CD 10                 1	                int 10h 
    4203 106E  5A                    1	                pop    dx 
    4204 106F  59                    1	                pop    cx 
    4205 1070  5B                    1	                pop    bx 
    4206 1071  58                    1	                pop    ax 
    4207 1072  B2 33			                        mov         dl,
					 "3" 
    4208 1074  CD 21			                        int         21h
					 
    4209				 
    4210				                        CURSOR      11,
					  60 
    4211 1076  50                    1	                push    ax 
    4212 1077  53                    1	                push    bx 
    4213 1078  51                    1	                push    cx 
    4214 1079  52                    1	                push    dx 
    4215 107A  B6 0B                 1	                mov dh, 11        ;row 
    4216 107C  B2 3C                 1	                mov dl, 60       ;colum
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-99


					n 
    4217 107E  B7 00                 1	                mov bh, 0         ; 
    4218 1080  B4 02                 1	                mov ah, 02h       ; 
    4219 1082  CD 10                 1	                int 10h 
    4220 1084  5A                    1	                pop    dx 
    4221 1085  59                    1	                pop    cx 
    4222 1086  5B                    1	                pop    bx 
    4223 1087  58                    1	                pop    ax 
    4224 1088  8D 16 2237 R		                        lea         dx,
					 customerNumberLine 
    4225 108C  E8 13D2 R		                        call        PRI
					NT_STR 
    4226				                        COLOUR_CHAR 0, 
					 00001100b, 1d 
    4227 108F  50                    1	                push    ax 
    4228 1090  53                    1	                push    bx 
    4229 1091  51                    1	                push    cx 
    4230 1092  52                    1	                push    dx 
    4231 1093  33 DB                 1	                xor     bx,bx 
    4232 1095  B9 0001               1	                mov cx, 1d 
    4233 1098  B0 00                 1	                mov al, 0 
    4234 109A  B3 0C                 1	                mov bl, 00001100b 
    4235 109C  B4 09                 1	                mov ah, 09h 
    4236 109E  CD 10                 1	                int 10h 
    4237 10A0  5A                    1	                pop    dx 
    4238 10A1  59                    1	                pop    cx 
    4239 10A2  5B                    1	                pop    bx 
    4240 10A3  58                    1	                pop    ax 
    4241 10A4  B2 34			                        mov         dl,
					 "4" 
    4242 10A6  CD 21			                        int         21h
					 
    4243				 
    4244				                        CURSOR      13,
					  60 
    4245 10A8  50                    1	                push    ax 
    4246 10A9  53                    1	                push    bx 
    4247 10AA  51                    1	                push    cx 
    4248 10AB  52                    1	                push    dx 
    4249 10AC  B6 0D                 1	                mov dh, 13        ;row 
    4250 10AE  B2 3C                 1	                mov dl, 60       ;colum
					n 
    4251 10B0  B7 00                 1	                mov bh, 0         ; 
    4252 10B2  B4 02                 1	                mov ah, 02h       ; 
    4253 10B4  CD 10                 1	                int 10h 
    4254 10B6  5A                    1	                pop    dx 
    4255 10B7  59                    1	                pop    cx 
    4256 10B8  5B                    1	                pop    bx 
    4257 10B9  58                    1	                pop    ax 
    4258 10BA  8D 16 2237 R		                        lea         dx,
					 customerNumberLine 
    4259 10BE  E8 13D2 R		                        call        PRI
					NT_STR 
    4260				                        COLOUR_CHAR 0, 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-100


					 00001100b, 1d 
    4261 10C1  50                    1	                push    ax 
    4262 10C2  53                    1	                push    bx 
    4263 10C3  51                    1	                push    cx 
    4264 10C4  52                    1	                push    dx 
    4265 10C5  33 DB                 1	                xor     bx,bx 
    4266 10C7  B9 0001               1	                mov cx, 1d 
    4267 10CA  B0 00                 1	                mov al, 0 
    4268 10CC  B3 0C                 1	                mov bl, 00001100b 
    4269 10CE  B4 09                 1	                mov ah, 09h 
    4270 10D0  CD 10                 1	                int 10h 
    4271 10D2  5A                    1	                pop    dx 
    4272 10D3  59                    1	                pop    cx 
    4273 10D4  5B                    1	                pop    bx 
    4274 10D5  58                    1	                pop    ax 
    4275 10D6  B2 35			                        mov         dl,
					 "5" 
    4276 10D8  CD 21			                        int         21h
					 
    4277				 
    4278 10DA  C3			                        ret 
    4279 10DB				CUSTOMER_NUMBERING  ENDP 
    4280				 
    4281 10DB				MOVE_CURSOR_QTY PROC 
    4282 10DB  53			                            push       
					 bx 
    4283				 
    4284 10DC  8A 1E 1834 R		                            mov        
					 bl, [qtyDisplayBox+1]   ;use bl to sto
					re row number 
    4285 10E0  8A 3E 1835 R		                            mov        
					 bh, [qtyDisplayBox+2]   ;use bh to sto
					re column number 
    4286 10E4  80 C3 01			                            add        
					 bl, 1 
    4287 10E7  80 C7 02			                            add        
					 bh, 2 
    4288				                            CURSOR     
					 bl, bh 
    4289 10EA  50                    1	                push    ax 
    4290 10EB  53                    1	                push    bx 
    4291 10EC  51                    1	                push    cx 
    4292 10ED  52                    1	                push    dx 
    4293 10EE  8A F3                 1	                mov dh, bl        ;row 
    4294 10F0  8A D7                 1	                mov dl, bh       ;colum
					n 
    4295 10F2  B7 00                 1	                mov bh, 0         ; 
    4296 10F4  B4 02                 1	                mov ah, 02h       ; 
    4297 10F6  CD 10                 1	                int 10h 
    4298 10F8  5A                    1	                pop    dx 
    4299 10F9  59                    1	                pop    cx 
    4300 10FA  5B                    1	                pop    bx 
    4301 10FB  58                    1	                pop    ax 
    4302				 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-101


    4303 10FC  5B			                            pop        
					 bx 
    4304 10FD  C3			                            ret 
    4305 10FE				MOVE_CURSOR_QTY ENDP 
    4306				 
    4307 10FE				DISPLAY_QTY_BOX PROC 
    4308 10FE  50			                            push       
					 ax 
    4309 10FF  53			                            push       
					 bx 
    4310 1100  51			                            push       
					 cx 
    4311 1101  52			                            push       
					 dx 
    4312				 
    4313 1102  8D 36 1833 R		                            lea        
					 si, qtyDisplayBox   
    4314 1106  E8 1381 R		                            call       
					 DISPLAY_BOX 
    4315				 
    4316 1109  8A 1E 1834 R		                            mov        
					 bl, [qtyDisplayBox+1]   ;use bl to sto
					re row number 
    4317				                            CURSOR     
					 bl, [qtyDisplayBox+2] 
    4318 110D  50                    1	                push    ax 
    4319 110E  53                    1	                push    bx 
    4320 110F  51                    1	                push    cx 
    4321 1110  52                    1	                push    dx 
    4322 1111  8A F3                 1	                mov dh, bl        ;row 
    4323 1113  8A 16 1835 R          1	                mov dl, [qtyDisplayBox+
					2]       ;column 
    4324 1117  B7 00                 1	                mov bh, 0         ; 
    4325 1119  B4 02                 1	                mov ah, 02h       ; 
    4326 111B  CD 10                 1	                int 10h 
    4327 111D  5A                    1	                pop    dx 
    4328 111E  59                    1	                pop    cx 
    4329 111F  5B                    1	                pop    bx 
    4330 1120  58                    1	                pop    ax 
    4331 1121  8D 16 1838 R		                            lea        
					 dx, qtyBorder1 
    4332 1125  E8 13D2 R		                            call       
					 PRINT_STR 
    4333				 
    4334 1128  FE C3			                            inc        
					 bl                      ;next row 
    4335				                            CURSOR     
					 bl, [qtyDisplayBox+2] 
    4336 112A  50                    1	                push    ax 
    4337 112B  53                    1	                push    bx 
    4338 112C  51                    1	                push    cx 
    4339 112D  52                    1	                push    dx 
    4340 112E  8A F3                 1	                mov dh, bl        ;row 
    4341 1130  8A 16 1835 R          1	                mov dl, [qtyDisplayBox+
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-102


					2]       ;column 
    4342 1134  B7 00                 1	                mov bh, 0         ; 
    4343 1136  B4 02                 1	                mov ah, 02h       ; 
    4344 1138  CD 10                 1	                int 10h 
    4345 113A  5A                    1	                pop    dx 
    4346 113B  59                    1	                pop    cx 
    4347 113C  5B                    1	                pop    bx 
    4348 113D  58                    1	                pop    ax 
    4349 113E  8D 16 184F R		                            lea        
					 dx, qtyBorder2 
    4350 1142  E8 13D2 R		                            call       
					 PRINT_STR 
    4351				 
    4352 1145  FE C3			                            inc        
					 bl                      ;next row 
    4353				                            CURSOR     
					 bl, [qtyDisplayBox+2] 
    4354 1147  50                    1	                push    ax 
    4355 1148  53                    1	                push    bx 
    4356 1149  51                    1	                push    cx 
    4357 114A  52                    1	                push    dx 
    4358 114B  8A F3                 1	                mov dh, bl        ;row 
    4359 114D  8A 16 1835 R          1	                mov dl, [qtyDisplayBox+
					2]       ;column 
    4360 1151  B7 00                 1	                mov bh, 0         ; 
    4361 1153  B4 02                 1	                mov ah, 02h       ; 
    4362 1155  CD 10                 1	                int 10h 
    4363 1157  5A                    1	                pop    dx 
    4364 1158  59                    1	                pop    cx 
    4365 1159  5B                    1	                pop    bx 
    4366 115A  58                    1	                pop    ax 
    4367 115B  8D 16 1866 R		                            lea        
					 dx, qtyBorder3 
    4368 115F  E8 13D2 R		                            call       
					 PRINT_STR 
    4369				 
    4370 1162  5A			                            pop        
					 dx 
    4371 1163  59			                            pop        
					 cx 
    4372 1164  5B			                            pop        
					 bx 
    4373 1165  58			                            pop        
					 ax 
    4374 1166  C3			                            ret 
    4375 1167				DISPLAY_QTY_BOX ENDP 
    4376				 
    4377 1167				ITEM_SELECTION  PROC                   
					                                     ;m
					odify itemSelectionChoice 
    4378 1167  B3 04			                            mov        
					 bl  ,4 
    4379				                            CURSOR     
					 bl  ,3 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-103


    4380 1169  50                    1	                push    ax 
    4381 116A  53                    1	                push    bx 
    4382 116B  51                    1	                push    cx 
    4383 116C  52                    1	                push    dx 
    4384 116D  8A F3                 1	                mov dh, bl        ;row 
    4385 116F  B2 03                 1	                mov dl, 3       ;column
					 
    4386 1171  B7 00                 1	                mov bh, 0         ; 
    4387 1173  B4 02                 1	                mov ah, 02h       ; 
    4388 1175  CD 10                 1	                int 10h 
    4389 1177  5A                    1	                pop    dx 
    4390 1178  59                    1	                pop    cx 
    4391 1179  5B                    1	                pop    bx 
    4392 117A  58                    1	                pop    ax 
    4393				                            COLOUR_CHAR
					 0, 01001110b, 51d 
    4394 117B  50                    1	                push    ax 
    4395 117C  53                    1	                push    bx 
    4396 117D  51                    1	                push    cx 
    4397 117E  52                    1	                push    dx 
    4398 117F  33 DB                 1	                xor     bx,bx 
    4399 1181  B9 0033               1	                mov cx, 51d 
    4400 1184  B0 00                 1	                mov al, 0 
    4401 1186  B3 4E                 1	                mov bl, 01001110b 
    4402 1188  B4 09                 1	                mov ah, 09h 
    4403 118A  CD 10                 1	                int 10h 
    4404 118C  5A                    1	                pop    dx 
    4405 118D  59                    1	                pop    cx 
    4406 118E  5B                    1	                pop    bx 
    4407 118F  58                    1	                pop    ax 
    4408				 
    4409 1190				                            itemSelecti
					onLoop: 
    4410 1190  E8 124C R		                                    cal
					l        PRINT_ALL_ITEMS 
    4411				 
    4412 1193  8A 16 0FD3 R		                                    mov
					         dl, [itemSelectionChoice] 
    4413				 
    4414 1197  B4 07			                                    mov
					         ah, 07h 
    4415 1199  CD 21			                                    int
					         21h 
    4416				 
    4417 119B  3C 77			                                    cmp
					         al, "w" 
    4418 119D  74 0C			                                    je 
					         itemSelectionUp 
    4419				                                     
    4420 119F  3C 73			                                    cmp
					         al, "s" 
    4421 11A1  74 59			                                    je 
					         itemSelectionDown 
    4422				 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-104


    4423 11A3  3C 0D			                                    cmp
					         al, 13d 
    4424 11A5  74 52			                                    je 
					         itemSelectionConfirm_CP 
    4425 11A7  EB E7			                                    jmp
					         itemSelectionLoop 
    4426				 
    4427 11A9				                                    ite
					mSelectionLoop_CP: 
    4428 11A9  EB E5			                                       
					         jmp         itemSelectionLoop 
    4429				 
    4430 11AB				                                    ite
					mSelectionUp: 
    4431 11AB  80 3E 0FD3 R 01		                                       
					         cmp         [itemSelectionChoi
					ce],  1 
    4432 11B0  76 DE			                                       
					         jbe         itemSelectionLoop 
    4433				 
    4434				                                       
					         COLOUR_CHAR 0, 00001111b, 51d 
    4435 11B2  50                    1	                push    ax 
    4436 11B3  53                    1	                push    bx 
    4437 11B4  51                    1	                push    cx 
    4438 11B5  52                    1	                push    dx 
    4439 11B6  33 DB                 1	                xor     bx,bx 
    4440 11B8  B9 0033               1	                mov cx, 51d 
    4441 11BB  B0 00                 1	                mov al, 0 
    4442 11BD  B3 0F                 1	                mov bl, 00001111b 
    4443 11BF  B4 09                 1	                mov ah, 09h 
    4444 11C1  CD 10                 1	                int 10h 
    4445 11C3  5A                    1	                pop    dx 
    4446 11C4  59                    1	                pop    cx 
    4447 11C5  5B                    1	                pop    bx 
    4448 11C6  58                    1	                pop    ax 
    4449				 
    4450 11C7  FE CA			                                       
					         dec         dl 
    4451 11C9  88 16 0FD3 R		                                       
					         mov         [itemSelectionChoi
					ce],  dl 
    4452				 
    4453 11CD  80 EB 02			                                       
					         sub         bl  ,2 
    4454				                                       
					         CURSOR      bl  ,3 
    4455 11D0  50                    1	                push    ax 
    4456 11D1  53                    1	                push    bx 
    4457 11D2  51                    1	                push    cx 
    4458 11D3  52                    1	                push    dx 
    4459 11D4  8A F3                 1	                mov dh, bl        ;row 
    4460 11D6  B2 03                 1	                mov dl, 3       ;column
					 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-105


    4461 11D8  B7 00                 1	                mov bh, 0         ; 
    4462 11DA  B4 02                 1	                mov ah, 02h       ; 
    4463 11DC  CD 10                 1	                int 10h 
    4464 11DE  5A                    1	                pop    dx 
    4465 11DF  59                    1	                pop    cx 
    4466 11E0  5B                    1	                pop    bx 
    4467 11E1  58                    1	                pop    ax 
    4468				 
    4469				                                       
					         COLOUR_CHAR 0, selColour, 51d 
    4470 11E2  50                    1	                push    ax 
    4471 11E3  53                    1	                push    bx 
    4472 11E4  51                    1	                push    cx 
    4473 11E5  52                    1	                push    dx 
    4474 11E6  33 DB                 1	                xor     bx,bx 
    4475 11E8  B9 0033               1	                mov cx, 51d 
    4476 11EB  B0 00                 1	                mov al, 0 
    4477 11ED  B3 4E                 1	                mov bl, selColour 
    4478 11EF  B4 09                 1	                mov ah, 09h 
    4479 11F1  CD 10                 1	                int 10h 
    4480 11F3  5A                    1	                pop    dx 
    4481 11F4  59                    1	                pop    cx 
    4482 11F5  5B                    1	                pop    bx 
    4483 11F6  58                    1	                pop    ax 
    4484 11F7  EB 97			                                       
					         jmp         itemSelectionLoop 
    4485				 
    4486 11F9				                                    ite
					mSelectionConfirm_CP: 
    4487 11F9  EB 50 90			                                       
					         jmp         itemSelectionConfi
					rm 
    4488				 
    4489 11FC				                                    ite
					mSelectionDown:    
    4490 11FC  80 3E 0FD3 R 09		                                       
					         cmp         [itemSelectionChoi
					ce],  9 
    4491 1201  73 A6			                                       
					         jae         itemSelectionLoop_
					CP 
    4492				 
    4493				                                       
					         COLOUR_CHAR 0, 00001111b, 51d 
    4494 1203  50                    1	                push    ax 
    4495 1204  53                    1	                push    bx 
    4496 1205  51                    1	                push    cx 
    4497 1206  52                    1	                push    dx 
    4498 1207  33 DB                 1	                xor     bx,bx 
    4499 1209  B9 0033               1	                mov cx, 51d 
    4500 120C  B0 00                 1	                mov al, 0 
    4501 120E  B3 0F                 1	                mov bl, 00001111b 
    4502 1210  B4 09                 1	                mov ah, 09h 
    4503 1212  CD 10                 1	                int 10h 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-106


    4504 1214  5A                    1	                pop    dx 
    4505 1215  59                    1	                pop    cx 
    4506 1216  5B                    1	                pop    bx 
    4507 1217  58                    1	                pop    ax 
    4508				 
    4509 1218  FE C2			                                       
					         inc         dl 
    4510 121A  88 16 0FD3 R		                                       
					         mov         [itemSelectionChoi
					ce],  dl 
    4511				 
    4512 121E  80 C3 02			                                       
					         add         bl  ,2 
    4513				                                       
					         CURSOR      bl  ,3 
    4514 1221  50                    1	                push    ax 
    4515 1222  53                    1	                push    bx 
    4516 1223  51                    1	                push    cx 
    4517 1224  52                    1	                push    dx 
    4518 1225  8A F3                 1	                mov dh, bl        ;row 
    4519 1227  B2 03                 1	                mov dl, 3       ;column
					 
    4520 1229  B7 00                 1	                mov bh, 0         ; 
    4521 122B  B4 02                 1	                mov ah, 02h       ; 
    4522 122D  CD 10                 1	                int 10h 
    4523 122F  5A                    1	                pop    dx 
    4524 1230  59                    1	                pop    cx 
    4525 1231  5B                    1	                pop    bx 
    4526 1232  58                    1	                pop    ax 
    4527				 
    4528				                                       
					         COLOUR_CHAR 0, selColour, 51d 
    4529 1233  50                    1	                push    ax 
    4530 1234  53                    1	                push    bx 
    4531 1235  51                    1	                push    cx 
    4532 1236  52                    1	                push    dx 
    4533 1237  33 DB                 1	                xor     bx,bx 
    4534 1239  B9 0033               1	                mov cx, 51d 
    4535 123C  B0 00                 1	                mov al, 0 
    4536 123E  B3 4E                 1	                mov bl, selColour 
    4537 1240  B4 09                 1	                mov ah, 09h 
    4538 1242  CD 10                 1	                int 10h 
    4539 1244  5A                    1	                pop    dx 
    4540 1245  59                    1	                pop    cx 
    4541 1246  5B                    1	                pop    bx 
    4542 1247  58                    1	                pop    ax 
    4543 1248  E9 11A9 R		                                       
					         jmp         itemSelectionLoop_
					CP 
    4544				 
    4545 124B				                            itemSelecti
					onConfirm: 
    4546				 
    4547 124B  C3			                            ret 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-107


    4548 124C				ITEM_SELECTION  ENDP 
    4549				 
    4550 124C				PRINT_ALL_ITEMS PROC 
    4551 124C  50			                            push       
					 ax 
    4552 124D  53			                            push       
					 bx 
    4553 124E  51			                            push       
					 cx 
    4554 124F  52			                            push       
					 dx 
    4555				 
    4556				                            ;;GET CURRE
					NT CURSOR POS 
    4557 1250  B4 03			                            mov        
					 ah, 03h 
    4558 1252  B3 00			                            mov        
					 bl, 00h 
    4559 1254  CD 10			                            int        
					 10h                 ;cursor pos will b
					e stored in dh dl 
    4560 1256  52			                            push       
					 dx 
    4561				 
    4562 1257  33 C9			                            xor        
					 cx  ,cx 
    4563 1259  8A 0E 0FD4 R		                            mov        
					 cl  ,[numberOfItems] 
    4564 125D  B3 02			                            mov        
					 bl  ,2 
    4565 125F  8D 36 0FD5 R		                            lea        
					 si  ,items 
    4566 1263				                            print_item_
					loop: 
    4567 1263  80 C3 02			                                       
					 add         bl  ,2 
    4568				                                       
					 CURSOR      bl  ,3 
    4569 1266  50                    1	                push    ax 
    4570 1267  53                    1	                push    bx 
    4571 1268  51                    1	                push    cx 
    4572 1269  52                    1	                push    dx 
    4573 126A  8A F3                 1	                mov dh, bl        ;row 
    4574 126C  B2 03                 1	                mov dl, 3       ;column
					 
    4575 126E  B7 00                 1	                mov bh, 0         ; 
    4576 1270  B4 02                 1	                mov ah, 02h       ; 
    4577 1272  CD 10                 1	                int 10h 
    4578 1274  5A                    1	                pop    dx 
    4579 1275  59                    1	                pop    cx 
    4580 1276  5B                    1	                pop    bx 
    4581 1277  58                    1	                pop    ax 
    4582				 
    4583 1278  E8 12B4 R		                                       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-108


					 call        PRINT_ITEM 
    4584 127B  83 C6 1E			                                       
					 add         si  ,itemSize 
    4585				 
    4586 127E  E2 E3			                                       
					 loop        print_item_loop 
    4587				 
    4588 1280  80 C3 02			                            add        
					 bl  ,2 
    4589				                            CURSOR     
					 bl  ,3 
    4590 1283  50                    1	                push    ax 
    4591 1284  53                    1	                push    bx 
    4592 1285  51                    1	                push    cx 
    4593 1286  52                    1	                push    dx 
    4594 1287  8A F3                 1	                mov dh, bl        ;row 
    4595 1289  B2 03                 1	                mov dl, 3       ;column
					 
    4596 128B  B7 00                 1	                mov bh, 0         ; 
    4597 128D  B4 02                 1	                mov ah, 02h       ; 
    4598 128F  CD 10                 1	                int 10h 
    4599 1291  5A                    1	                pop    dx 
    4600 1292  59                    1	                pop    cx 
    4601 1293  5B                    1	                pop    bx 
    4602 1294  58                    1	                pop    ax 
    4603 1295  8D 16 181B R		                            lea        
					 dx  ,itemExitString 
    4604 1299  E8 13D2 R		                            call       
					 PRINT_STR 
    4605				 
    4606 129C  5A			                            pop        
					 dx 
    4607				                            CURSOR     
					 dh,dl       ;set cursor back to origin
					al position 
    4608 129D  50                    1	                push    ax 
    4609 129E  53                    1	                push    bx 
    4610 129F  51                    1	                push    cx 
    4611 12A0  52                    1	                push    dx 
    4612 12A1  8A F6                 1	                mov dh, dh        ;row 
    4613 12A3  8A D2                 1	                mov dl, dl       ;colum
					n 
    4614 12A5  B7 00                 1	                mov bh, 0         ; 
    4615 12A7  B4 02                 1	                mov ah, 02h       ; 
    4616 12A9  CD 10                 1	                int 10h 
    4617 12AB  5A                    1	                pop    dx 
    4618 12AC  59                    1	                pop    cx 
    4619 12AD  5B                    1	                pop    bx 
    4620 12AE  58                    1	                pop    ax 
    4621				 
    4622 12AF  5A			                            pop        
					 dx 
    4623 12B0  59			                            pop        
					 cx 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-109


    4624 12B1  5B			                            pop        
					 bx 
    4625 12B2  58			                            pop        
					 ax 
    4626 12B3  C3			                            ret 
    4627 12B4				PRINT_ALL_ITEMS ENDP 
    4628				 
    4629 12B4				PRINT_ITEM      PROC                   
					                                     ;p
					rint to row value in bl 
    4630 12B4  50			                            push    ax 
    4631 12B5  53			                            push    bx 
    4632 12B6  51			                            push    cx 
    4633 12B7  52			                            push    dx 
    4634 12B8  56			                            push    si 
    4635				 
    4636 12B9  33 C0			                            xor        
					 ax, ax 
    4637 12BB  8A 04			                            mov        
					 al, [si] 
    4638 12BD  E8 130E R		                            call       
					 PRINT_NUM 
    4639				 
    4640				                            CURSOR     
					 bl, 15 
    4641 12C0  50                    1	                push    ax 
    4642 12C1  53                    1	                push    bx 
    4643 12C2  51                    1	                push    cx 
    4644 12C3  52                    1	                push    dx 
    4645 12C4  8A F3                 1	                mov dh, bl        ;row 
    4646 12C6  B2 0F                 1	                mov dl, 15       ;colum
					n 
    4647 12C8  B7 00                 1	                mov bh, 0         ; 
    4648 12CA  B4 02                 1	                mov ah, 02h       ; 
    4649 12CC  CD 10                 1	                int 10h 
    4650 12CE  5A                    1	                pop    dx 
    4651 12CF  59                    1	                pop    cx 
    4652 12D0  5B                    1	                pop    bx 
    4653 12D1  58                    1	                pop    ax 
    4654 12D2  8D 54 01			                            lea        
					 dx, [si + itemName] 
    4655 12D5  E8 13D2 R		                            call       
					 PRINT_STR 
    4656				 
    4657				                            CURSOR     
					 bl, 39 
    4658 12D8  50                    1	                push    ax 
    4659 12D9  53                    1	                push    bx 
    4660 12DA  51                    1	                push    cx 
    4661 12DB  52                    1	                push    dx 
    4662 12DC  8A F3                 1	                mov dh, bl        ;row 
    4663 12DE  B2 27                 1	                mov dl, 39       ;colum
					n 
    4664 12E0  B7 00                 1	                mov bh, 0         ; 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-110


    4665 12E2  B4 02                 1	                mov ah, 02h       ; 
    4666 12E4  CD 10                 1	                int 10h 
    4667 12E6  5A                    1	                pop    dx 
    4668 12E7  59                    1	                pop    cx 
    4669 12E8  5B                    1	                pop    bx 
    4670 12E9  58                    1	                pop    ax 
    4671 12EA  8D 54 15			                            lea        
					 dx, [si + itemPrice] 
    4672 12ED  E8 13D2 R		                            call       
					 PRINT_STR 
    4673				 
    4674				                            CURSOR     
					 bl, 52 
    4675 12F0  50                    1	                push    ax 
    4676 12F1  53                    1	                push    bx 
    4677 12F2  51                    1	                push    cx 
    4678 12F3  52                    1	                push    dx 
    4679 12F4  8A F3                 1	                mov dh, bl        ;row 
    4680 12F6  B2 34                 1	                mov dl, 52       ;colum
					n 
    4681 12F8  B7 00                 1	                mov bh, 0         ; 
    4682 12FA  B4 02                 1	                mov ah, 02h       ; 
    4683 12FC  CD 10                 1	                int 10h 
    4684 12FE  5A                    1	                pop    dx 
    4685 12FF  59                    1	                pop    cx 
    4686 1300  5B                    1	                pop    bx 
    4687 1301  58                    1	                pop    ax 
    4688 1302  8A 44 1D			                            mov        
					 al, [si + itemQty] 
    4689 1305  E8 130E R		                            call       
					 print_Num 
    4690				 
    4691				                             
    4692				 
    4693 1308  5E			                            pop     si 
    4694 1309  5A			                            pop     dx 
    4695 130A  59			                            pop     cx 
    4696 130B  5B			                            pop     bx 
    4697 130C  58			                            pop     ax 
    4698 130D  C3			                            ret 
    4699 130E				PRINT_ITEM      ENDP 
    4700				 
    4701 130E				PRINT_NUM       PROC                   
					     ;print ax 
    4702 130E  50			                            push    ax 
    4703 130F  53			                            push    bx 
    4704 1310  51			                            push    cx 
    4705 1311  52			                            push    dx 
    4706				 
    4707 1312  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
    4708 1315  B9 0000			                            mov     cx,
					0h 
    4709				                             
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-111


    4710 1318				                            divLoop:   
					  
    4711 1318  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
    4712 131A  F7 F3			                                       
					 div     bx 
    4713 131C  52			                                       
					 push    dx          ;save remainder 
    4714 131D  41			                                       
					 inc     cx          ;count looped numb
					er 
    4715 131E  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
    4716 1320  75 F6			                                       
					 jnz     divLoop 
    4717				 
    4718 1322  B4 02			                            mov     ah,
					02h 
    4719				 
    4720 1324				                            printLoop: 
					  
    4721 1324  5A			                                       
					 pop     dx          ;get remainder 
    4722 1325  80 C2 30			                                       
					 add     dl,"0" 
    4723 1328  CD 21			                                       
					 int     21h         ;print 
    4724 132A  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
    4725				 
    4726 132C  5A			                            pop    dx 
    4727 132D  59			                            pop    cx 
    4728 132E  5B			                            pop    bx 
    4729 132F  58			                            pop    ax 
    4730				 
    4731 1330  C3			                            ret 
    4732 1331				PRINT_NUM       ENDP 
    4733				 
    4734 1331				BCD_INPUT       PROC                   
					 ;output to al 
    4735 1331  56			                push        si 
    4736				 
    4737 1332  8D 36 0000 R		                lea         si, bcdInpu
					tBuffer 
    4738				 
    4739 1336  B9 0003			                mov         cx, 3d     
					 ;max number of times to loop 
    4740 1339  33 D2			                xor         dx, dx     
					 ;dl as temp value counter 
    4741				 
    4742				                ;;get bcd input 
    4743 133B				                BCD_INPUT_LOOP: 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-112


    4744 133B  B4 01			                            mov        
					 ah, 1h 
    4745 133D  CD 21			                            int        
					 21h 
    4746				 
    4747 133F  3C 0D			                            cmp        
					 al, 13d 
    4748 1341  74 07			                            je         
					 BCD_INPUT_LOOP_END 
    4749				                             
    4750 1343  2C 30			                            sub        
					 al, 48d 
    4751 1345  88 04			                            mov        
					 [si],al 
    4752				 
    4753 1347  46			                            inc        
					 si 
    4754 1348  E2 F1			                            loop       
					 BCD_INPUT_LOOP   
    4755 134A				                BCD_INPUT_LOOP_END: 
    4756				 
    4757 134A  B8 0001			                mov         ax, 1      
					             ;ax tracks 位数 of numbe
					r, eg first number * 1, second number *
					 10, third numb
    4758 134D  8D 36 0002 R		                lea         si, bcdInpu
					tBuffer+2 
    4759 1351  B9 0003			                mov         cx, 3d     
					             ;number of times to loop 
    4760 1354				                BCD_INPUT_CAL: 
    4761 1354  33 DB			                            xor        
					 bx, bx 
    4762				 
    4763 1356  8A 1C			                            mov        
					 bl, [si] 
    4764 1358  80 FB 24			                            cmp        
					 bl, "$"     ;if is not digit 
    4765 135B  74 0F			                            je         
					 BCD_INPUT_CAL_NOT_DIGIT 
    4766				 
    4767 135D  50			                            push       
					 ax               
    4768				 
    4769 135E  52			                            push       
					 dx                  ;mul will effect d
					x 
    4770 135F  F7 E3			                            mul        
					 bx 
    4771 1361  5A			                            pop        
					 dx 
    4772				 
    4773 1362  03 D0			                            add        
					 dx, ax 
    4774 1364  58			                            pop        
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-113


					 ax 
    4775				 
    4776 1365  52			                            push       
					 dx                  ;mul will effect d
					x 
    4777 1366  BB 000A			                            mov        
					 bx, 10d 
    4778 1369  F7 E3			                            mul        
					 bx 
    4779 136B  5A			                            pop        
					 dx 
    4780				 
    4781 136C				                            BCD_INPUT_C
					AL_NOT_DIGIT: 
    4782 136C  4E			                            dec        
					 si 
    4783 136D  E2 E5			                            loop       
					 BCD_INPUT_CAL 
    4784				 
    4785 136F  B9 0003			                mov         cx, 3d 
    4786 1372  8D 36 0000 R		                lea         si, bcdInpu
					tBuffer 
    4787 1376				                BCD_INPUT_CLEAR_STR: 
    4788 1376  B0 24			                            mov        
					 al  ,   "$" 
    4789 1378  88 04			                            mov        
					 [si],   al 
    4790 137A  46			                            inc        
					 si 
    4791 137B  E2 F9			                            loop       
					 BCD_INPUT_CLEAR_STR 
    4792 137D  8B C2			                mov         ax, dx 
    4793				                 
    4794 137F  5E			                pop         si 
    4795 1380  C3			                ret 
    4796 1381				BCD_INPUT       ENDP 
    4797				 
    4798 1381				DISPLAY_BOX     PROC                   
					 ;display box from detials from si 
    4799 1381  50			                            push    ax 
    4800 1382  53			                            push    bx 
    4801 1383  51			                            push    cx 
    4802 1384  52			                            push    dx 
    4803				 
    4804 1385  33 C0			                            xor     ax,
					 ax 
    4805 1387  33 DB			                            xor     bx,
					 bx 
    4806 1389  33 C9			                            xor     cx,
					 cx 
    4807 138B  33 D2			                            xor     dx,
					 dx 
    4808				 
    4809 138D  8A 64 02			                            mov     ah,
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-114


					 [si + 2] 
    4810 1390  8A 44 04			                            mov     al,
					 [si + 4] 
    4811 1393  2A C4			                            sub     al,
					 ah           ;calculate number of colu
					mns to print 
    4812 1395  32 E4			                            xor     ah,
					 ah 
    4813				 
    4814 1397  8A 6C 01			                            mov     ch,
					 [si + 1] 
    4815 139A  8A 4C 03			                            mov     cl,
					 [si + 3] 
    4816 139D  2A CD			                            sub     cl,
					 ch 
    4817 139F  32 ED			                            xor     ch,
					 ch 
    4818				 
    4819 13A1  8A 5C 01			                            mov     bl,
					 [si + 1] 
    4820				 
    4821 13A4				                            DISPLAY_BOX
					_LOOP: 
    4822				                                    CUR
					SOR  bl,[si+2] 
    4823 13A4  50                    1	                push    ax 
    4824 13A5  53                    1	                push    bx 
    4825 13A6  51                    1	                push    cx 
    4826 13A7  52                    1	                push    dx 
    4827 13A8  8A F3                 1	                mov dh, bl        ;row 
    4828 13AA  8A 54 02              1	                mov dl, [si+2]       ;c
					olumn 
    4829 13AD  B7 00                 1	                mov bh, 0         ; 
    4830 13AF  B4 02                 1	                mov ah, 02h       ; 
    4831 13B1  CD 10                 1	                int 10h 
    4832 13B3  5A                    1	                pop    dx 
    4833 13B4  59                    1	                pop    cx 
    4834 13B5  5B                    1	                pop    bx 
    4835 13B6  58                    1	                pop    ax 
    4836				 
    4837 13B7  50			                                    pus
					h    ax 
    4838 13B8  53			                                    pus
					h    bx 
    4839 13B9  51			                                    pus
					h    cx 
    4840 13BA  52			                                    pus
					h    dx 
    4841 13BB  8B C8			                                    mov
					     cx, ax          ;number of chars t
					o print 
    4842 13BD  B0 20			                                    mov
					     al, " "         ;char to print 
    4843 13BF  8A 1C			                                    mov
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-115


					     bl, [si]        ;colour 
    4844 13C1  B4 09			                                    mov
					     ah, 09h         ;ah 09 int 10h 
    4845 13C3  CD 10			                                    int
					     10h 
    4846 13C5  5A			                                    pop
					     dx 
    4847 13C6  59			                                    pop
					     cx 
    4848 13C7  5B			                                    pop
					     bx 
    4849 13C8  58			                                    pop
					     ax 
    4850				                                     
    4851 13C9  FE C3			                                    inc
					     bl 
    4852 13CB  E2 D7			                                    loo
					p    DISPLAY_BOX_LOOP 
    4853				 
    4854 13CD  5A			                            pop    dx 
    4855 13CE  59			                            pop    cx 
    4856 13CF  5B			                            pop    bx 
    4857 13D0  58			                            pop    ax 
    4858 13D1  C3			                            ret 
    4859 13D2				DISPLAY_BOX     ENDP 
    4860				 
    4861 13D2				PRINT_STR       PROC 
    4862 13D2  50			                            push       
					 ax 
    4863 13D3  B4 09			                            mov        
					 ah,09d 
    4864 13D5  CD 21			                            int        
					 21h 
    4865 13D7  58			                            pop        
					 ax 
    4866 13D8  C3			                            ret 
    4867 13D9				PRINT_STR       ENDP 
    4868				 
    4869 13D9				CLS             PROC 
    4870 13D9  50			                            push    ax 
    4871 13DA  53			                            push    bx 
    4872 13DB  51			                            push    cx 
    4873 13DC  52			                            push    dx 
    4874				 
    4875 13DD  B4 06			                            mov ah, 06h
					       ; 
    4876 13DF  B0 00			                            mov al, 00h
					       ; 
    4877 13E1  B7 0F			                            mov bh, 0Fh
					       ; 
    4878 13E3  B9 0000			                            mov cx, 0  
					       ; Clear Screen 
    4879 13E6  B6 64			                            mov dh, 100
					       ; 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-116


    4880 13E8  B2 50			                            mov dl, 80 
					       ; 
    4881 13EA  CD 10			                            int 10h    
					       ; 
    4882				 
    4883 13EC  BA 0000			                            mov dx, 0  
					       ; 
    4884 13EF  B7 00			                            mov bh, 0  
					       ; Set cursor to (0,0) 
    4885 13F1  B4 02			                            mov ah, 02h
					       ;  
    4886 13F3  CD 10			                            int 10h  
    4887				 
    4888 13F5  5A			                            pop     dx 
    4889 13F6  59			                            pop     cx 
    4890 13F7  5B			                            pop     bx 
    4891 13F8  58			                            pop     ax 
    4892				 
    4893 13F9  C3			                            ret 
    4894 13FA				CLS             ENDP 
    4895				 
    4896 13FA				INPUT_STR       PROC                   
					                     ;read input and mo
					ve to address in di 
    4897 13FA  50			                            push       
					 ax 
    4898 13FB  52			                            push       
					 dx 
    4899 13FC  57			                            push       
					 di 
    4900 13FD  33 C0			                            xor        
					 ax,ax 
    4901 13FF  33 C9			                            xor        
					 cx,cx 
    4902				 
    4903 1401  BA 04D2 R		                            mov        
					 dx, offset buffer               ;input
					 string 
    4904 1404  B4 0A			                            mov        
					 ah,0Ah 
    4905 1406  CD 21			                            int        
					 21h 
    4906				 
    4907 1408  33 C9			                            xor        
					 cx,cx 
    4908 140A  8A 0E 04D3 R		                            mov        
					 cl,[buffer+1]                   ;move 
					length of input to cl 
    4909				 
    4910 140E  B4 24			                            mov        
					 ah, "$" 
    4911 1410  8D 3E 04D4 R		                            lea        
					 di, buffer+2                     ;offs
					et to start of string value 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-117


    4912 1414  03 F9			                            add        
					 di, cx                           ;move
					 to after last character 
    4913 1416  88 25			                            mov        
					 [di],ah                         ;move 
					$ character to last place 
    4914				 
    4915 1418  5F			                            pop        
					 di 
    4916 1419  57			                            push       
					 di 
    4917				 
    4918 141A  8D 36 04D4 R		                            lea        
					 si,buffer+2 
    4919 141E  32 ED			                            xor        
					 ch,ch 
    4920 1420  FE C1			                            inc        
					 cl 
    4921 1422				                            input_str_c
					py: 
    4922 1422  8A 24			                                       
					 mov         ah,[si] 
    4923 1424  88 25			                                       
					 mov         [di],ah 
    4924				 
    4925 1426  46			                                       
					 inc         si 
    4926 1427  47			                                       
					 inc         di 
    4927 1428  E2 F8			                                       
					 loop        input_str_cpy 
    4928				 
    4929 142A  5F			                            pop        
					 di 
    4930 142B  5A			                            pop        
					 dx 
    4931 142C  58			                            pop        
					 ax 
    4932 142D  C3			                            ret 
    4933 142E				INPUT_STR       ENDP 
    4934				 
    4935 142E				SECRET_INPUT    PROC 
    4936 142E  50			                            push       
					 ax 
    4937 142F  57			                            push       
					 di 
    4938				 
    4939 1430  33 C0			                            xor        
					 ax,ax 
    4940 1432  33 C9			                            xor        
					 cx,cx 
    4941				 
    4942 1434  B4 07			                            mov        
					 ah,07h 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-118


    4943 1436  B2 2A			                            mov        
					 dl, "*" 
    4944 1438				                            SECRET_INPU
					T_LOOP: 
    4945 1438  CD 21			                                       
					 int         21h 
    4946				                                       
					  
    4947 143A  3C 0D			                                       
					 cmp         al, 13d 
    4948 143C  74 08			                                       
					 je          SECRET_INPUT_LOOP_EXIT 
    4949				 
    4950 143E  E8 1449 R		                                       
					 call        PRINT_CHAR 
    4951				 
    4952 1441  88 05			                                       
					 mov         [di],al 
    4953 1443  47			                                       
					 inc         di 
    4954				 
    4955 1444  EB F2			                                       
					 jmp         SECRET_INPUT_LOOP 
    4956				 
    4957 1446				                            SECRET_INPU
					T_LOOP_EXIT: 
    4958				 
    4959 1446  5F			                            pop        
					 di 
    4960 1447  58			                            pop        
					 ax 
    4961 1448  C3			                            ret 
    4962 1449				SECRET_INPUT    ENDP 
    4963				 
    4964 1449				PRINT_CHAR      PROC                   
					                     ;print cjaracter o
					f value in dl 
    4965 1449  50			                            push    ax 
    4966 144A  B4 02			                            mov     ah,
					02h 
    4967 144C  CD 21			                            int     21h
					 
    4968 144E  58			                            pop     ax 
    4969 144F  C3			                            ret 
    4970 1450				PRINT_CHAR      ENDP 
    4971				 
    4972 1450				NEWLINE         PROC 
    4973 1450  52			                            push    dx 
    4974 1451  B2 0A			                            mov     dl,
					0Ah 
    4975 1453  E8 1449 R		                            call PRINT_
					CHAR 
    4976 1456  5A			                            pop     dx 
    4977 1457  C3			                            ret 
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-119


    4978 1458				NEWLINE         ENDP 
    4979				 
    4980 1458				ANYPAUSE        PROC 
    4981 1458  50			                            push       
					 ax 
    4982 1459  52			                            push       
					 dx 
    4983				 
    4984 145A  8D 16 04AB R		                            lea        
					 dx, anyKeyToCont 
    4985 145E  E8 13D2 R		                            call       
					 PRINT_STR 
    4986 1461  B4 01			                            mov        
					 ah, 01h 
    4987 1463  CD 21			                            int        
					 21h 
    4988				 
    4989 1465  5A			                            pop        
					 dx 
    4990 1466  58			                            pop        
					 ax 
    4991 1467  C3			                            ret 
    4992 1468				ANYPAUSE        ENDP 
    4993				 
    4994 1468				STRCMP          PROC                   
					                     ;compares string i
					n si and di, if equal will return 0 in 
					ax 
    4995 1468  56			                            push       
					 si 
    4996 1469  57			                            push       
					 di 
    4997				 
    4998 146A  33 C0			                            xor        
					 ax,ax 
    4999 146C				                            STRCMP_LOOP
					_START: 
    5000 146C  8A 04			                                       
					 mov         al,[si] 
    5001 146E  8A 25			                                       
					 mov         ah,[di] 
    5002				                                       
					  
    5003 1470  46			                                       
					 inc         si 
    5004 1471  47			                                       
					 inc         di 
    5005				 
    5006 1472  3C 24			                                       
					 cmp         al,"$" 
    5007 1474  74 04			                                       
					 je          STRCMP_LOOP_END 
    5008				 
    5009 1476  3A C4			                                       
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Page     1-120


					 cmp         al,ah 
    5010 1478  74 F2			                                       
					 je          STRCMP_LOOP_START 
    5011				 
    5012 147A				                            STRCMP_LOOP
					_END: 
    5013 147A  2A C4			                            sub        
					 al,ah               ;return sub of bot
					h strings 
    5014 147C  32 E4			                            xor        
					 ah,ah 
    5015				 
    5016 147E  5F			                            pop        
					 di 
    5017 147F  5E			                            pop        
					 si 
    5018 1480  C3			                            ret 
    5019 1481				STRCMP          ENDP 
    5020				 
    5021 1481				CHANGE_COLOUR   PROC 
    5022 1481  50			                            push       
					 ax 
    5023				 
    5024 1482  33 C0			                            xor        
					 ax  ,ax 
    5025 1484  B4 09			                            mov        
					 ah  ,09h 
    5026 1486  CD 10			                            int        
					 10h 
    5027				 
    5028 1488  58			                            pop        
					 ax 
    5029 1489  C3			                            ret 
    5030 148A				CHANGE_COLOUR   ENDP 
    5031				 
    5032 148A				END MAIN 

Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Symbols-1


Macros:

		N a m e			Lines

BG_16_COLOUR . . . . . . . . . .  	  15
BG_8_COLOUR  . . . . . . . . . .  	  15
COLOUR_CHAR  . . . . . . . . . .  	  14
CURSOR . . . . . . . . . . . . .  	  14

Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	24BB	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	148A	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ABCLOGO  . . . . . . . . . . . .  	L BYTE	0003	_DATA
ACCOUNTSIZE  . . . . . . . . . .  	NUMBER	001E	
ADD_CUSTOMER . . . . . . . . . .  	N PROC	0980	_TEXT	Length = 01C0
AFTER_LOGIN  . . . . . . . . . .  	L NEAR	008D	_TEXT
AGE  . . . . . . . . . . . . . .  	NUMBER	001A	
ANYKEYTOCONT . . . . . . . . . .  	L BYTE	04AB	_DATA
ANYPAUSE . . . . . . . . . . . .  	N PROC	1458	_TEXT	Length = 0010

BCDINPUTBUFFER . . . . . . . . .  	L BYTE	0000	_DATA
BCD_INPUT  . . . . . . . . . . .  	N PROC	1331	_TEXT	Length = 0050
BCD_INPUT_CAL  . . . . . . . . .  	L NEAR	1354	_TEXT
BCD_INPUT_CAL_NOT_DIGIT  . . . .  	L NEAR	136C	_TEXT
BCD_INPUT_CLEAR_STR  . . . . . .  	L NEAR	1376	_TEXT
BCD_INPUT_LOOP . . . . . . . . .  	L NEAR	133B	_TEXT
BCD_INPUT_LOOP_END . . . . . . .  	L NEAR	134A	_TEXT
BONUSPOINT . . . . . . . . . . .  	NUMBER	002A	
BUFFER . . . . . . . . . . . . .  	L BYTE	04D2	_DATA

CHANGE_COLOUR  . . . . . . . . .  	N PROC	1481	_TEXT	Length = 0009
CLEARLOGININPUT  . . . . . . . .  	L NEAR	0691	_TEXT
CLEAR_CUST_INPUT . . . . . . . .  	N PROC	0D20	_TEXT	Length = 00C4
CLS  . . . . . . . . . . . . . .  	N PROC	13D9	_TEXT	Length = 0021
CONFIRMADDED . . . . . . . . . .  	L NEAR	0F29	_TEXT
CONFIRMEXIT  . . . . . . . . . .  	L BYTE	0F96	_DATA
CURRENTSEL . . . . . . . . . . .  	L BYTE	0F95	_DATA
CUSTDISPLAYBORDER  . . . . . . .  	L BYTE	1F01	_DATA	Length = 0009
CUSTFULLBOX1 . . . . . . . . . .  	L BYTE	2228	_DATA
CUSTFULLBOX2 . . . . . . . . . .  	L BYTE	222D	_DATA
CUSTFULLBOX3 . . . . . . . . . .  	L BYTE	2232	_DATA
CUSTINPUTBORDER  . . . . . . . .  	L BYTE	1D0F	_DATA
CUSTNAME . . . . . . . . . . . .  	NUMBER	0006	
CUSTOMER . . . . . . . . . . . .  	N PROC	078A	_TEXT	Length = 0097
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Symbols-2


CUSTOMERAGEHEADER  . . . . . . .  	L BYTE	1EF0	_DATA
CUSTOMERARR  . . . . . . . . . .  	L BYTE	2267	_DATA
CUSTOMERCOUNT  . . . . . . . . .  	L BYTE	2266	_DATA
CUSTOMERENTER  . . . . . . . . .  	L NEAR	0AB6	_TEXT
CUSTOMERENTEREXIT  . . . . . . .  	L NEAR	0B3F	_TEXT
CUSTOMERENTERINPUT . . . . . . .  	L NEAR	0AEB	_TEXT
CUSTOMERFULL . . . . . . . . . .  	L NEAR	0B2A	_TEXT
CUSTOMERHEADER . . . . . . . . .  	L BYTE	1BAE	_DATA	Length = 0050
CUSTOMERIDHEADER . . . . . . . .  	L BYTE	1EE8	_DATA
CUSTOMERINVALIDINPUT . . . . . .  	L BYTE	1B9B	_DATA
CUSTOMERMENU . . . . . . . . . .  	L BYTE	188E	_DATA
CUSTOMERMENUADD  . . . . . . . .  	L BYTE	1B42	_DATA
CUSTOMERMENUDISPLAY  . . . . . .  	L BYTE	1B52	_DATA
CUSTOMERMENUEXIT . . . . . . . .  	L BYTE	1B71	_DATA
CUSTOMERMENUINPUTPROMPT  . . . .  	L BYTE	1B81	_DATA
CUSTOMERMENULOOP . . . . . . . .  	L NEAR	078A	_TEXT
CUSTOMERMENUREMOVE . . . . . . .  	L BYTE	1B62	_DATA
CUSTOMERMENUSTR1 . . . . . . . .  	L BYTE	1B0D	_DATA
CUSTOMERMENUSTR2 . . . . . . . .  	L BYTE	1B2E	_DATA
CUSTOMERMENU_ADD . . . . . . . .  	L NEAR	07ED	_TEXT
CUSTOMERMENU_DISPLAY . . . . . .  	L NEAR	07F6	_TEXT
CUSTOMERMENU_END . . . . . . . .  	L NEAR	0808	_TEXT
CUSTOMERMENU_EXIT  . . . . . . .  	L NEAR	0820	_TEXT
CUSTOMERMENU_REMOVE  . . . . . .  	L NEAR	07FF	_TEXT
CUSTOMERNAMEHEADER . . . . . . .  	L BYTE	1EEB	_DATA
CUSTOMERNUMBERLINE . . . . . . .  	L BYTE	2237	_DATA
CUSTOMERPHONEHEADER  . . . . . .  	L BYTE	1EF4	_DATA
CUSTOMERPOINTHEADER  . . . . . .  	L BYTE	1EFA	_DATA
CUSTOMERREMOVEPROMPT . . . . . .  	L BYTE	2244	_DATA
CUSTOMERSIZE . . . . . . . . . .  	NUMBER	0030	
CUSTOMER_MENU  . . . . . . . . .  	N PROC	0821	_TEXT	Length = 015F
CUSTOMER_NUMBERING . . . . . . .  	N PROC	0FDE	_TEXT	Length = 00FD
CUST_DETAIL_INPUT  . . . . . . .  	N PROC	0DE4	_TEXT	Length = 0148
CUST_FULL_BOX  . . . . . . . . .  	N PROC	0CDA	_TEXT	Length = 0046

DISPLAY_ALL_CUST . . . . . . . .  	N PROC	0B99	_TEXT	Length = 0141
DISPLAY_BOX  . . . . . . . . . .  	N PROC	1381	_TEXT	Length = 0051
DISPLAY_BOX_LOOP . . . . . . . .  	L NEAR	13A4	_TEXT
DISPLAY_QTY_BOX  . . . . . . . .  	N PROC	10FE	_TEXT	Length = 0069
DIVIDER  . . . . . . . . . . . .  	L BYTE	0AAB	_DATA	Length = 0028
DIVLOOP  . . . . . . . . . . . .  	L NEAR	1318	_TEXT

EXIT . . . . . . . . . . . . . .  	N PROC	00E7	_TEXT	Length = 021C
EXITBOX  . . . . . . . . . . . .  	L BYTE	0FBB	_DATA
EXITBOX1 . . . . . . . . . . . .  	L BYTE	0FC0	_DATA
EXITBOX2 . . . . . . . . . . . .  	L BYTE	0FC5	_DATA
EXITBOX3 . . . . . . . . . . . .  	L BYTE	0FCA	_DATA
EXITSEL  . . . . . . . . . . . .  	L BYTE	0FBA	_DATA
EXITSELECTIONLEFT  . . . . . . .  	L NEAR	022B	_TEXT
EXITSELECTIONLOOP  . . . . . . .  	L NEAR	0218	_TEXT
EXITSELECTIONLOOPEXIT  . . . . .  	L NEAR	0302	_TEXT
EXITSELECTIONRIGHT . . . . . . .  	L NEAR	0296	_TEXT
EXIT_LABLE . . . . . . . . . . .  	L NEAR	00D1	_TEXT

Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Symbols-3


FAILEDLOGIN1 . . . . . . . . . .  	L BYTE	0475	_DATA
FAILEDLOGIN2 . . . . . . . . . .  	L BYTE	0483	_DATA
FINDEMPTYCUST  . . . . . . . . .  	L NEAR	0AC6	_TEXT
FINDEMPTYCUSTEND . . . . . . . .  	L NEAR	0AD5	_TEXT

ID . . . . . . . . . . . . . . .  	NUMBER	0000	
INPUTPASSWORD  . . . . . . . . .  	L BYTE	04FF	_DATA	Length = 0014
INPUTUSERNAME  . . . . . . . . .  	L BYTE	04F5	_DATA	Length = 000A
INPUT_STR  . . . . . . . . . . .  	N PROC	13FA	_TEXT	Length = 0034
INPUT_STR_CPY  . . . . . . . . .  	L NEAR	1422	_TEXT
ITEMEXITSTRING . . . . . . . . .  	L BYTE	181B	_DATA
ITEMHEADER . . . . . . . . . . .  	L BYTE	17AF	_DATA
ITEMID . . . . . . . . . . . . .  	NUMBER	0000	
ITEMNAME . . . . . . . . . . . .  	NUMBER	0001	
ITEMPRICE  . . . . . . . . . . .  	NUMBER	0015	
ITEMQTY  . . . . . . . . . . . .  	NUMBER	001D	
ITEMS  . . . . . . . . . . . . .  	L BYTE	0FD5	_DATA
ITEMSALERECORD . . . . . . . . .  	L BYTE	10C6	_DATA
ITEMSELBORDER  . . . . . . . . .  	L BYTE	17E4	_DATA
ITEMSELECTIONCHOICE  . . . . . .  	L BYTE	0FD3	_DATA
ITEMSELECTIONCONFIRM . . . . . .  	L NEAR	124B	_TEXT
ITEMSELECTIONCONFIRM_CP  . . . .  	L NEAR	11F9	_TEXT
ITEMSELECTIONDOWN  . . . . . . .  	L NEAR	11FC	_TEXT
ITEMSELECTIONLOOP  . . . . . . .  	L NEAR	1190	_TEXT
ITEMSELECTIONLOOP_CP . . . . . .  	L NEAR	11A9	_TEXT
ITEMSELECTIONUP  . . . . . . . .  	L NEAR	11AB	_TEXT
ITEMSELHEADER  . . . . . . . . .  	L BYTE	10CE	_DATA
ITEMSIZE . . . . . . . . . . . .  	NUMBER	001E	
ITEM_SELECTION . . . . . . . . .  	N PROC	1167	_TEXT	Length = 00E5
ITEM_SELECTION_EXIT  . . . . . .  	L NEAR	0789	_TEXT

LOGINBORDER  . . . . . . . . . .  	L BYTE	02FD	_DATA
LOGINCHANCES . . . . . . . . . .  	L BYTE	01D1	_DATA
LOGINHEADER  . . . . . . . . . .  	L BYTE	022E	_DATA	Length = 0050
LOGININFO  . . . . . . . . . . .  	L BYTE	01D4	_DATA
LOGINSTATE . . . . . . . . . . .  	L BYTE	01D2	_DATA
LOGIN_CHECK  . . . . . . . . . .  	N PROC	054D	_TEXT	Length = 014F
LOGIN_EXIT . . . . . . . . . . .  	L NEAR	0687	_TEXT
LOGIN_FAIL . . . . . . . . . . .  	L NEAR	05DE	_TEXT
LOGIN_INPUT  . . . . . . . . . .  	N PROC	0490	_TEXT	Length = 00BD
LOGIN_NO_CHANCES . . . . . . . .  	L NEAR	006E	_TEXT
LOGIN_START  . . . . . . . . . .  	L NEAR	0007	_TEXT
LOGIN_SUCCESS  . . . . . . . . .  	L NEAR	063F	_TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 00E7
MAIN_MENU_CUSTOMER . . . . . . .  	L NEAR	00C0	_TEXT
MAIN_MENU_EXIT . . . . . . . . .  	L NEAR	00C5	_TEXT
MAIN_MENU_SALES  . . . . . . . .  	L NEAR	00BB	_TEXT
MATCH_PASSWORD . . . . . . . . .  	L NEAR	05B3	_TEXT
MATCH_USERNAME . . . . . . . . .  	L NEAR	057F	_TEXT
MAXCUSTNUM . . . . . . . . . . .  	NUMBER	0005	
MAXSEL . . . . . . . . . . . . .  	NUMBER	0003	
MENU . . . . . . . . . . . . . .  	N PROC	0303	_TEXT	Length = 018D
MENUBORDER . . . . . . . . . . .  	L BYTE	0AFC	_DATA
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Symbols-4


MENUHEADER . . . . . . . . . . .  	L BYTE	0A00	_DATA
MENUSELECTIONS . . . . . . . . .  	L BYTE	0F59	_DATA
MENU_EXIT  . . . . . . . . . . .  	L NEAR	00D1	_TEXT
MENU_START . . . . . . . . . . .  	L NEAR	008D	_TEXT
MOVE_CURSOR_QTY  . . . . . . . .  	N PROC	10DB	_TEXT	Length = 0023

NEWLINE  . . . . . . . . . . . .  	N PROC	1450	_TEXT	Length = 0008
NOMORECHANCE . . . . . . . . . .  	L BYTE	0492	_DATA
NOPOS  . . . . . . . . . . . . .  	L BYTE	0FD1	_DATA
NOSTR  . . . . . . . . . . . . .  	L BYTE	0FB2	_DATA
NUMBEROFITEMS  . . . . . . . . .  	L BYTE	0FD4	_DATA

PASSWORDOFFSET . . . . . . . . .  	NUMBER	000A	
PASSWRONG  . . . . . . . . . . .  	L BYTE	0454	_DATA
PASS_NOT_FOUND . . . . . . . . .  	L NEAR	05C2	_TEXT
PHONE  . . . . . . . . . . . . .  	NUMBER	001E	
PRINTLOOP  . . . . . . . . . . .  	L NEAR	1324	_TEXT
PRINT_ALL_CUST . . . . . . . . .  	N PROC	0F2C	_TEXT	Length = 0040
PRINT_ALL_CUST_LOOP  . . . . . .  	L NEAR	0F3A	_TEXT
PRINT_ALL_ITEMS  . . . . . . . .  	N PROC	124C	_TEXT	Length = 0068
PRINT_CHAR . . . . . . . . . . .  	N PROC	1449	_TEXT	Length = 0007
PRINT_CUST . . . . . . . . . . .  	N PROC	0F6C	_TEXT	Length = 0072
PRINT_ITEM . . . . . . . . . . .  	N PROC	12B4	_TEXT	Length = 005A
PRINT_ITEM_LOOP  . . . . . . . .  	L NEAR	1263	_TEXT
PRINT_NUM  . . . . . . . . . . .  	N PROC	130E	_TEXT	Length = 0023
PRINT_STR  . . . . . . . . . . .  	N PROC	13D2	_TEXT	Length = 0007
PROMPTCUSTCONTINUEADD  . . . . .  	L BYTE	1CDE	_DATA
PROMPTCUSTOMERAGE  . . . . . . .  	L BYTE	1C99	_DATA
PROMPTCUSTOMERFULL . . . . . . .  	L BYTE	1CCA	_DATA
PROMPTCUSTOMERID . . . . . . . .  	L BYTE	1C7B	_DATA
PROMPTCUSTOMERNAME . . . . . . .  	L BYTE	1C89	_DATA
PROMPTCUSTOMERPHONE  . . . . . .  	L BYTE	1CA8	_DATA
PROMPTCUSTPOINT  . . . . . . . .  	L BYTE	1CB9	_DATA
PROMPTPASSWORD . . . . . . . . .  	L BYTE	0439	_DATA
PROMPTUSERNAME . . . . . . . . .  	L BYTE	042E	_DATA

QTYBORDER1 . . . . . . . . . . .  	L BYTE	1838	_DATA
QTYBORDER2 . . . . . . . . . . .  	L BYTE	184F	_DATA
QTYBORDER3 . . . . . . . . . . .  	L BYTE	1866	_DATA
QTYDISPLAYBOX  . . . . . . . . .  	L BYTE	1833	_DATA
QTYERROR . . . . . . . . . . . .  	L BYTE	1882	_DATA
QTYPROMPT  . . . . . . . . . . .  	L BYTE	187C	_DATA
QTY_CHECK  . . . . . . . . . . .  	L NEAR	073F	_TEXT
QTY_CHECK_END  . . . . . . . . .  	L NEAR	076F	_TEXT
QTY_CHECK_ERROR  . . . . . . . .  	L NEAR	0751	_TEXT

READAGE  . . . . . . . . . . . .  	L NEAR	0E96	_TEXT
READID . . . . . . . . . . . . .  	L NEAR	0E10	_TEXT
READNAME . . . . . . . . . . . .  	L NEAR	0E53	_TEXT
READPHONE  . . . . . . . . . . .  	L NEAR	0ED9	_TEXT
READPOINT  . . . . . . . . . . .  	L NEAR	0F1C	_TEXT
REMOVE_CUSTOMER  . . . . . . . .  	N PROC	0B40	_TEXT	Length = 0040
REMOVE_CUSTOMER_INPUT_LOOP . . .  	L NEAR	0B46	_TEXT
REMOVE_SI_CUST . . . . . . . . .  	N PROC	0B80	_TEXT	Length = 0019
Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Symbols-5


REMOVE_SI_CUST_EXIT  . . . . . .  	L NEAR	0B98	_TEXT
REMOVE_SI_CUST_LOOP  . . . . . .  	L NEAR	0B8B	_TEXT

SALES  . . . . . . . . . . . . .  	N PROC	069C	_TEXT	Length = 00EE
SALES_START  . . . . . . . . . .  	L NEAR	06A4	_TEXT
SALES_START_BREAK  . . . . . . .  	L NEAR	06FA	_TEXT
SALES_START_CP . . . . . . . . .  	L NEAR	06F8	_TEXT
SECRET_INPUT . . . . . . . . . .  	N PROC	142E	_TEXT	Length = 001B
SECRET_INPUT_LOOP  . . . . . . .  	L NEAR	1438	_TEXT
SECRET_INPUT_LOOP_EXIT . . . . .  	L NEAR	1446	_TEXT
SELCOLOUR  . . . . . . . . . . .  	NUMBER	004E	
SELECTIONDOWN  . . . . . . . . .  	L NEAR	0469	_TEXT
SELECTIONLOOP  . . . . . . . . .  	L NEAR	041C	_TEXT
SELECTIONLOOPEXIT  . . . . . . .  	L NEAR	048F	_TEXT
SELECTIONMOVEDOWN  . . . . . . .  	L NEAR	0482	_TEXT
SELECTIONMOVEUP  . . . . . . . .  	L NEAR	0475	_TEXT
SELECTIONUP  . . . . . . . . . .  	L NEAR	045D	_TEXT
SKULL  . . . . . . . . . . . . .  	L BYTE	0513	_DATA
STARTCUSTPOINT . . . . . . . . .  	L NEAR	0EE6	_TEXT
STARTREADAGE . . . . . . . . . .  	L NEAR	0E60	_TEXT
STARTREADID  . . . . . . . . . .  	L NEAR	0DE5	_TEXT
STARTREADNAME  . . . . . . . . .  	L NEAR	0E1D	_TEXT
STARTREADPHONE . . . . . . . . .  	L NEAR	0EA3	_TEXT
STRCMP . . . . . . . . . . . . .  	N PROC	1468	_TEXT	Length = 0019
STRCMP_LOOP_END  . . . . . . . .  	L NEAR	147A	_TEXT
STRCMP_LOOP_START  . . . . . . .  	L NEAR	146C	_TEXT
SUCCESSFULLOGIN  . . . . . . . .  	L BYTE	0463	_DATA

TESTSTR  . . . . . . . . . . . .  	L BYTE	04C6	_DATA
TOTALCUSTOMERSSTR  . . . . . . .  	L BYTE	1CF9	_DATA

USERNAMEOFFSET . . . . . . . . .  	NUMBER	0000	
USERNOTFOUND . . . . . . . . . .  	L BYTE	0444	_DATA
USERNUMBER . . . . . . . . . . .  	L BYTE	01D3	_DATA
USER_NOT_FOUND . . . . . . . . .  	L NEAR	0597	_TEXT

YESPOS . . . . . . . . . . . . .  	L BYTE	0FCF	_DATA
YESSTR . . . . . . . . . . . . .  	L BYTE	0FA8	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  AMain		

Microsoft (R) Macro Assembler Version 5.00                  9/11/23 20:01:00
                                                             Symbols-6



   1955 Source  Lines
   4324 Total   Lines
    234 Symbols

  49688 + 401320 Bytes symbol space free

      2 Warning Errors
      0 Severe  Errors
