Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-1


       1				.MODEL      SMALL 
       2 0064				.STACK      100 
       3 0000				.DATA 
       4				 
       5 0000  20			buffer                      DB 32 
       6 0001  ??			                            DB ? 
       7 0002  0020[			                            DB 32 DUP(0
					) 
       8	   00			
       9			 ]	
      10				
      11 0022  24			                            DB "$" 
      12				 
      13 0023  24 24 24			bcdInputBuffer              DB  "$$$" 
      14				 
      15 0026  20 20 20 20 20 20 20	abcLogo                     DB "       
					                      **      ******   
					   ******",  10d, 13d 
      16       20 20 20 20 20 20 20	
      17       20 20 20 20 20 20 20	
      18       20 20 20 20 20 20 20	
      19       20 2A 2A 20 20 20 20	
      20       20 20 2A 2A 2A 2A 2A	
      21       2A 20 20 20 20 20 20	
      22       2A 2A 2A 2A 2A 2A 0A	
      23       0D			
      24 005F  20 20 20 20 20 20 20	                            DB "       
					                     ****    /*////**  
					  **////**", 10d, 13d 
      25       20 20 20 20 20 20 20	
      26       20 20 20 20 20 20 20	
      27       20 20 20 20 20 20 20	
      28       2A 2A 2A 2A 20 20 20	
      29       20 2F 2A 2F 2F 2F 2F	
      30       2A 2A 20 20 20 20 2A	
      31       2A 2F 2F 2F 2F 2A 2A	
      32       0A 0D			
      33 0099  20 20 20 20 20 20 20	                            DB "       
					                    **//**   /*   /**  
					 **    // ", 10d, 13d 
      34       20 20 20 20 20 20 20	
      35       20 20 20 20 20 20 20	
      36       20 20 20 20 20 20 2A	
      37       2A 2F 2F 2A 2A 20 20	
      38       20 2F 2A 20 20 20 2F	
      39       2A 2A 20 20 20 2A 2A	
      40       20 20 20 20 2F 2F 20	
      41       0A 0D			
      42 00D3  20 20 20 20 20 20 20	                            DB "       
					                   **  //**  /******   
					/**       ", 10d, 13d 
      43       20 20 20 20 20 20 20	
      44       20 20 20 20 20 20 20	
      45       20 20 20 20 20 2A 2A	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-2


      46       20 20 2F 2F 2A 2A 20	
      47       20 2F 2A 2A 2A 2A 2A	
      48       2A 20 20 20 2F 2A 2A	
      49       20 20 20 20 20 20 20	
      50       0A 0D			
      51 010D  20 20 20 20 20 20 20	                            DB "       
					                  ********** /*//// ** 
					/**       ", 10d, 13d 
      52       20 20 20 20 20 20 20	
      53       20 20 20 20 20 20 20	
      54       20 20 20 20 2A 2A 2A	
      55       2A 2A 2A 2A 2A 2A 2A	
      56       20 2F 2A 2F 2F 2F 2F	
      57       20 2A 2A 20 2F 2A 2A	
      58       20 20 20 20 20 20 20	
      59       0A 0D			
      60 0147  20 20 20 20 20 20 20	                            DB "       
					                 /**//////** /*    /** 
					//**    **", 10d, 13d 
      61       20 20 20 20 20 20 20	
      62       20 20 20 20 20 20 20	
      63       20 20 20 2F 2A 2A 2F	
      64       2F 2F 2F 2F 2F 2A 2A	
      65       20 2F 2A 20 20 20 20	
      66       2F 2A 2A 20 2F 2F 2A	
      67       2A 20 20 20 20 2A 2A	
      68       0A 0D			
      69 0181  20 20 20 20 20 20 20	                            DB "       
					                 /**     /** /*******  
					 //****** ", 10d, 13d 
      70       20 20 20 20 20 20 20	
      71       20 20 20 20 20 20 20	
      72       20 20 20 2F 2A 2A 20	
      73       20 20 20 20 2F 2A 2A	
      74       20 2F 2A 2A 2A 2A 2A	
      75       2A 2A 20 20 20 2F 2F	
      76       2A 2A 2A 2A 2A 2A 20	
      77       0A 0D			
      78 01BB  20 20 20 20 20 20 20	                            DB "       
					                 //      //  ///////   
					  //////  $" 
      79       20 20 20 20 20 20 20	
      80       20 20 20 20 20 20 20	
      81       20 20 20 2F 2F 20 20	
      82       20 20 20 20 2F 2F 20	
      83       20 2F 2F 2F 2F 2F 2F	
      84       2F 20 20 20 20 20 2F	
      85       2F 2F 2F 2F 2F 20 20	
      86       24			
      87				 
      88 01F4  50 72 65 73 73 20 61	anyKeyToCont                DB  "Press 
					any key to continue!$" 
      89       6E 79 20 6B 65 79 20	
      90       74 6F 20 63 6F 6E 74	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-3


      91       69 6E 75 65 21 24	
      92				 
      93 020F  54 45 53 54 20 53 54	testStr                     DB  "TEST S
					TRING$" 
      94       52 49 4E 47 24		
      95				 
      96 021B  61 75 74 68 6F 72 3A	sec                         DB  97d, 11
					7d, 116d, 104d, 111d, 114d, 58d, 32d, 8
					4d, 97d, 110d, 32d, 74d, 101d, 101d, 32
					d, 83d, 99d, 10
      97       20 54 61 6E 20 4A 65	
      98       65 20 53 63 68 75 61	
      99       6E 0A			
     100 0232  59 65 6F 68 20 4D 69	                            DB  89d, 10
					1d, 111d, 104d, 32d, 77d, 105d, 110d, 1
					03d, 32d, 90d, 104d, 101d, 10d, "$" 
     101       6E 67 20 5A 68 65 0A	
     102       24			
     103				 
     104				;++++++++++++++++++++++++++++++++++++++
					++++++++LOGIN SECTION++++++++++++++++++
					++++++++++++++++++++++++++++++++++ 
     105 0241  05			loginChances                DB  5 
     106 0242  00			loginState                  DB  0 
     107				 
     108 0243  03			userNumber                  DB  3 
     109 0244  32 32 30 31 36 31 30	loginInfo                   DB  "220161
					0$$$","12345ABC$$$$$$$$$$$$" 
     110       24 24 24 31 32 33 34	
     111       35 41 42 43 24 24 24	
     112       24 24 24 24 24 24 24	
     113       24 24			
     114 0262  53 32 32 30 31 31 33	                            DB  "S22011
					30$$","67890XYZ$$$$$$$$$$$$" 
     115       30 24 24 36 37 38 39	
     116       30 58 59 5A 24 24 24	
     117       24 24 24 24 24 24 24	
     118       24 24			
     119 0280  31 24 24 24 24 24 24	                            DB  "1$$$$$
					$$$$","1$$$$$$$$$$$$$$$$$$$" 
     120       24 24 24 31 24 24 24	
     121       24 24 24 24 24 24 24	
     122       24 24 24 24 24 24 24	
     123       24 24			
     124				 
     125 029E  0050[			loginHeader                 DB  80 DUP(
					"=") 
     126	   3D			
     127			 ]	
     128				
     129 02EE  0023[			                            DB  35 DUP(
					" "), "LOGIN PAGE" 
     130	   20			
     131			 ]	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-4


     132       4C 4F 47 49 4E 20 50	
     133       41 47 45			
     134 031B  0A			                            DB  10d 
     135 031C  0050[			                            DB  80 DUP(
					"=") 
     136	   3D			
     137			 ]	
     138				
     139 036C  24			                            DB  "$" 
     140				 
     141 036D  20 20 20 20 20 20 20	loginBorder                 DB  "      
					            ", 201d, 40 DUP(205d), 187d
					, 10d 
     142       20 20 20 20 20 20 20	
     143       20 20 20 20 C9		
     144       0028[			
     145	   CD			
     146			 ]	
     147       BB 0A			
     148 03AA  20 20 20 20 20 20 20	                            DB  "      
					            ", 186d, 40 DUP(" ") , 186d
					, 10d 
     149       20 20 20 20 20 20 20	
     150       20 20 20 20 BA		
     151       0028[			
     152	   20			
     153			 ]	
     154       BA 0A			
     155 03E7  20 20 20 20 20 20 20	                            DB  "      
					            ", 204d, 40 DUP(205d), 185d
					, 10d 
     156       20 20 20 20 20 20 20	
     157       20 20 20 20 CC		
     158       0028[			
     159	   CD			
     160			 ]	
     161       B9 0A			
     162 0424  20 20 20 20 20 20 20	                            DB  "      
					            ", 186d, 40 DUP(" ") , 186d
					, 10d 
     163       20 20 20 20 20 20 20	
     164       20 20 20 20 BA		
     165       0028[			
     166	   20			
     167			 ]	
     168       BA 0A			
     169 0461  20 20 20 20 20 20 20	                            DB  "      
					            ", 200d, 40 DUP(205d), 188d
					 
     170       20 20 20 20 20 20 20	
     171       20 20 20 20 C8		
     172       0028[			
     173	   CD			
     174			 ]	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-5


     175       BC			
     176 049D  24			                            DB  "$" 
     177				 
     178 049E  55 73 65 72 6E 61 6D	promptUsername              DB  "Userna
					me: $" 
     179       65 3A 20 24		
     180 04A9  50 61 73 73 77 6F 72	promptPassword              DB  "Passwo
					rd: $" 
     181       64 3A 20 24		
     182				 
     183 04B4  55 53 45 52 20 4E 4F	userNotFound                DB  "USER N
					OT FOUND!$" 
     184       54 20 46 4F 55 4E 44	
     185       21 24			
     186 04C4  57 52 4F 4E 47 20 50	passWrong                   DB  "WRONG 
					PASSWORD$" 
     187       41 53 53 57 4F 52 44	
     188       24			
     189				 
     190 04D3  4C 4F 47 49 4E 20 53	successfulLogin             DB  "LOGIN 
					SUCCESSFUL!$" 
     191       55 43 43 45 53 53 46	
     192       55 4C 21 24		
     193 04E5  4C 4F 47 49 4E 20 46	failedLogin1                DB  "LOGIN 
					FAILED $" 
     194       41 49 4C 45 44 20 24	
     195 04F3  20 43 48 41 4E 43 45	failedLogin2                DB  " CHANC
					ES LEFT!$" 
     196       53 20 4C 45 46 54 21	
     197       24			
     198 0502  4E 6F 20 6D 6F 72 65	noMoreChance                DB  "No mor
					e login chances...$" 
     199       20 6C 6F 67 69 6E 20	
     200       63 68 61 6E 63 65 73	
     201       2E 2E 2E 24		
     202				 
     203 051B  000A[			inputUsername               DB  10 DUP(
					"$") 
     204	   24			
     205			 ]	
     206				
     207 0525  0014[			inputPassword               DB  20 DUP(
					"$") 
     208	   24			
     209			 ]	
     210				
     211				 
     212 0539  20 20 20 20 20 20 20	skull                       DB  "      
					  .... NO! ...                  ... MNO
					! ...         ", 10d 
     213       20 2E 2E 2E 2E 20 4E	
     214       4F 21 20 2E 2E 2E 20	
     215       20 20 20 20 20 20 20	
     216       20 20 20 20 20 20 20	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-6


     217       20 20 20 2E 2E 2E 20	
     218       4D 4E 4F 21 20 2E 2E	
     219       2E 20 20 20 20 20 20	
     220       20 20 20 0A		
     221 0575  20 20 20 20 20 20 2E	                            DB  "      
					..... MNO!! ...................... MNNO
					O! ...        ", 10d 
     222       2E 2E 2E 2E 20 4D 4E	
     223       4F 21 21 20 2E 2E 2E	
     224       2E 2E 2E 2E 2E 2E 2E	
     225       2E 2E 2E 2E 2E 2E 2E	
     226       2E 2E 2E 2E 2E 20 4D	
     227       4E 4E 4F 4F 21 20 2E	
     228       2E 2E 20 20 20 20 20	
     229       20 20 20 0A		
     230 05B1  20 20 20 20 20 20 20	                            DB  "      
					  ..... MMNO! .........................
					 MNNOO!! .    ", 10d 
     231       20 2E 2E 2E 2E 2E 20	
     232       4D 4D 4E 4F 21 20 2E	
     233       2E 2E 2E 2E 2E 2E 2E	
     234       2E 2E 2E 2E 2E 2E 2E	
     235       2E 2E 2E 2E 2E 2E 2E	
     236       2E 2E 2E 20 4D 4E 4E	
     237       4F 4F 21 21 20 2E 20	
     238       20 20 20 0A		
     239 05ED  20 20 20 20 20 20 20	                            DB  "      
					  .... MNOONNOO!   MMMMMMMMMMPPPOII!   
					MNNO!!!! .    ", 10d 
     240       20 2E 2E 2E 2E 20 4D	
     241       4E 4F 4F 4E 4E 4F 4F	
     242       21 20 20 20 4D 4D 4D	
     243       4D 4D 4D 4D 4D 4D 4D	
     244       50 50 50 4F 49 49 21	
     245       20 20 20 4D 4E 4E 4F	
     246       21 21 21 21 20 2E 20	
     247       20 20 20 0A		
     248 0629  20 20 20 20 20 20 20	                            DB  "      
					  ... !O! NNO! MMMMMMMMMMMMMPPPOOOII!! 
					NO! ....      ", 10d 
     249       20 2E 2E 2E 20 21 4F	
     250       21 20 4E 4E 4F 21 20	
     251       4D 4D 4D 4D 4D 4D 4D	
     252       4D 4D 4D 4D 4D 4D 50	
     253       50 50 4F 4F 4F 49 49	
     254       21 21 20 4E 4F 21 20	
     255       2E 2E 2E 2E 20 20 20	
     256       20 20 20 0A		
     257 0665  20 20 20 20 20 20 20	                            DB  "      
					      ...... ! MMMMMMMMMMMMMPPPPOOOOIII
					! ! ...       ", 10d 
     258       20 20 20 20 20 2E 2E	
     259       2E 2E 2E 2E 20 21 20	
     260       4D 4D 4D 4D 4D 4D 4D	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-7


     261       4D 4D 4D 4D 4D 4D 50	
     262       50 50 50 4F 4F 4F 4F	
     263       49 49 49 21 20 21 20	
     264       2E 2E 2E 20 20 20 20	
     265       20 20 20 0A		
     266 06A1  20 20 20 20 20 20 20	                            DB  "      
					  ........ MMMMMMMMMMMMPPPPPOOOOOOII!! 
					.....         ", 10d 
     267       20 2E 2E 2E 2E 2E 2E	
     268       2E 2E 20 4D 4D 4D 4D	
     269       4D 4D 4D 4D 4D 4D 4D	
     270       4D 50 50 50 50 50 4F	
     271       4F 4F 4F 4F 4F 49 49	
     272       21 21 20 2E 2E 2E 2E	
     273       2E 20 20 20 20 20 20	
     274       20 20 20 0A		
     275 06DD  20 20 20 20 20 20 20	                            DB  "      
					  ........ MMMMMOOOOOOPPPPPPPPOOOOMII! 
					...           ", 10d 
     276       20 2E 2E 2E 2E 2E 2E	
     277       2E 2E 20 4D 4D 4D 4D	
     278       4D 4F 4F 4F 4F 4F 4F	
     279       50 50 50 50 50 50 50	
     280       50 4F 4F 4F 4F 4D 49	
     281       49 21 20 2E 2E 2E 20	
     282       20 20 20 20 20 20 20	
     283       20 20 20 0A		
     284 0719  20 20 20 20 20 20 20	                            DB  "      
					      ....... MMMMM..    OPPMMP    .,OM
					I! ....       ", 10d 
     285       20 20 20 20 20 2E 2E	
     286       2E 2E 2E 2E 2E 20 4D	
     287       4D 4D 4D 4D 2E 2E 20	
     288       20 20 20 4F 50 50 4D	
     289       4D 50 20 20 20 20 2E	
     290       2C 4F 4D 49 21 20 2E	
     291       2E 2E 2E 20 20 20 20	
     292       20 20 20 0A		
     293 0755  20 20 20 20 20 20 20	                            DB  "      
					      ...... MMMM::   o.,OPMP,.o   ::I!
					! ...         ", 10d 
     294       20 20 20 20 20 2E 2E	
     295       2E 2E 2E 2E 20 4D 4D	
     296       4D 4D 3A 3A 20 20 20	
     297       6F 2E 2C 4F 50 4D 50	
     298       2C 2E 6F 20 20 20 3A	
     299       3A 49 21 21 20 2E 2E	
     300       2E 20 20 20 20 20 20	
     301       20 20 20 0A		
     302 0791  20 20 20 20 20 20 20	                            DB  "      
					          .... NNM:::.,,OOPM!P,.::::!! 
					....          ", 10d 
     303       20 20 20 20 20 20 20	
     304       20 20 2E 2E 2E 2E 20	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-8


     305       4E 4E 4D 3A 3A 3A 2E	
     306       2C 2C 4F 4F 50 4D 21	
     307       50 2C 2E 3A 3A 3A 3A	
     308       21 21 20 2E 2E 2E 2E	
     309       20 20 20 20 20 20 20	
     310       20 20 20 0A		
     311 07CD  20 20 20 20 20 20 20	                            DB  "      
					          .. MMNNNNNOOOOPMO!!IIPPO!!O! 
					.....         ", 10d 
     312       20 20 20 20 20 20 20	
     313       20 20 2E 2E 20 4D 4D	
     314       4E 4E 4E 4E 4E 4F 4F	
     315       4F 4F 50 4D 4F 21 21	
     316       49 49 50 50 4F 21 21	
     317       4F 21 20 2E 2E 2E 2E	
     318       2E 20 20 20 20 20 20	
     319       20 20 20 0A		
     320 0809  20 20 20 20 20 20 20	                            DB  "      
					          ... MMMMMNNNNOO:!!:!!IPPPPOO!
					 ....         ", 10d 
     321       20 20 20 20 20 20 20	
     322       20 20 2E 2E 2E 20 4D	
     323       4D 4D 4D 4D 4E 4E 4E	
     324       4E 4F 4F 3A 21 21 3A	
     325       21 21 49 50 50 50 50	
     326       4F 4F 21 20 2E 2E 2E	
     327       2E 20 20 20 20 20 20	
     328       20 20 20 0A		
     329 0845  20 20 20 20 20 20 20	                            DB  "      
					          .. MMMMMNNOOMMNNIIIPPPOO!! ..
					....          ", 10d 
     330       20 20 20 20 20 20 20	
     331       20 20 2E 2E 20 4D 4D	
     332       4D 4D 4D 4E 4E 4F 4F	
     333       4D 4D 4E 4E 49 49 49	
     334       50 50 50 4F 4F 21 21	
     335       20 2E 2E 2E 2E 2E 2E	
     336       20 20 20 20 20 20 20	
     337       20 20 20 0A		
     338 0881  20 20 20 20 20 20 20	                            DB  "      
					          ...... MMMONNMMNNNIIIOO!.....
					.....         ", 10d 
     339       20 20 20 20 20 20 20	
     340       20 20 2E 2E 2E 2E 2E	
     341       2E 20 4D 4D 4D 4F 4E	
     342       4E 4D 4D 4E 4E 4E 49	
     343       49 49 4F 4F 21 2E 2E	
     344       2E 2E 2E 2E 2E 2E 2E	
     345       2E 20 20 20 20 20 20	
     346       20 20 20 0A		
     347 08BD  20 20 20 20 20 20 20	                            DB  "      
					      ....... MN MOMMMNNNIIIIIO! OO ...
					.......       ", 10d 
     348       20 20 20 20 20 2E 2E	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-9


     349       2E 2E 2E 2E 2E 20 4D	
     350       4E 20 4D 4F 4D 4D 4D	
     351       4E 4E 4E 49 49 49 49	
     352       49 4F 21 20 4F 4F 20	
     353       2E 2E 2E 2E 2E 2E 2E	
     354       2E 2E 2E 20 20 20 20	
     355       20 20 20 0A		
     356 08F9  20 20 20 20 20 20 20	                            DB  "      
					      ......... MNO! IiiiiiiiiiiiI OOOO
					 ...........  ", 10d 
     357       20 20 20 20 20 2E 2E	
     358       2E 2E 2E 2E 2E 2E 2E	
     359       20 4D 4E 4F 21 20 49	
     360       69 69 69 69 69 69 69	
     361       69 69 69 69 49 20 4F	
     362       4F 4F 4F 20 2E 2E 2E	
     363       2E 2E 2E 2E 2E 2E 2E	
     364       2E 20 20 0A		
     365 0935  20 20 20 20 20 20 20	                            DB  "      
					  ...... NNN.MNO! . O!!!!!!!!!O . OONO 
					NO! ........  ", 10d 
     366       20 2E 2E 2E 2E 2E 2E	
     367       20 4E 4E 4E 2E 4D 4E	
     368       4F 21 20 2E 20 4F 21	
     369       21 21 21 21 21 21 21	
     370       21 4F 20 2E 20 4F 4F	
     371       4E 4F 20 4E 4F 21 20	
     372       2E 2E 2E 2E 2E 2E 2E	
     373       2E 20 20 0A		
     374 0971  20 20 20 20 20 20 20	                            DB  "      
					  .... MNNNNNO! ...OOOOOOOOOOO .  MMNNO
					N!........    ", 10d 
     375       20 2E 2E 2E 2E 20 4D	
     376       4E 4E 4E 4E 4E 4F 21	
     377       20 2E 2E 2E 4F 4F 4F	
     378       4F 4F 4F 4F 4F 4F 4F	
     379       4F 20 2E 20 20 4D 4D	
     380       4E 4E 4F 4E 21 2E 2E	
     381       2E 2E 2E 2E 2E 2E 20	
     382       20 20 20 0A		
     383 09AD  20 20 20 20 20 20 20	                            DB  "      
					  ...... MNNNNO! .. PPPPPPPPP .. MMNON!
					........      ", 10d 
     384       20 2E 2E 2E 2E 2E 2E	
     385       20 4D 4E 4E 4E 4E 4F	
     386       21 20 2E 2E 20 50 50	
     387       50 50 50 50 50 50 50	
     388       20 2E 2E 20 4D 4D 4E	
     389       4F 4E 21 2E 2E 2E 2E	
     390       2E 2E 2E 2E 20 20 20	
     391       20 20 20 0A		
     392 09E9  20 20 20 20 20 20 20	                            DB  "      
					      ...... OO! ................. ON! 
					.......       $", 10d 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-10


     393       20 20 20 20 20 2E 2E	
     394       2E 2E 2E 2E 20 4F 4F	
     395       21 20 2E 2E 2E 2E 2E	
     396       2E 2E 2E 2E 2E 2E 2E	
     397       2E 2E 2E 2E 2E 20 4F	
     398       4E 21 20 2E 2E 2E 2E	
     399       2E 2E 2E 20 20 20 20	
     400       20 20 20 24 0A		
     401				 
     402 = 001E				accountSize                 EQU 30 
     403 = 0000				usernameOffset              EQU 0 
     404 = 000A				passwordOffset              EQU 10 
     405				;++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					++++++++++ 
     406				 
     407				;++++++++++++++++++++++++++++++++++++++
					++++++++MENU SECTION+++++++++++++++++++
					+++++++++++++++++++++++++++++++++ 
     408				 
     409 0A26  20 20 20 20 20 20 20	menuHeader                  DB         
					 "                             __   __ 
					     __   __   __  ", 10d 
     410       20 20 20 20 20 20 20	
     411       20 20 20 20 20 20 20	
     412       20 20 20 20 20 20 20	
     413       20 5F 5F 20 20 20 5F	
     414       5F 20 20 20 20 20 20	
     415       5F 5F 20 20 20 5F 5F	
     416       20 20 20 5F 5F 20 20	
     417       0A			
     418 0A5F  20 20 20 20 20 20 20	                            DB         
					 "                        /\  |__) /  `
					    |__) /  \ /__` ", 10d 
     419       20 20 20 20 20 20 20	
     420       20 20 20 20 20 20 20	
     421       20 20 20 2F 5C 20 20	
     422       7C 5F 5F 29 20 2F 20	
     423       20 60 20 20 20 20 7C	
     424       5F 5F 29 20 2F 20 20	
     425       5C 20 2F 5F 5F 60 20	
     426       0A			
     427 0A98  20 20 20 20 20 20 20	                            DB         
					 "                       /~~\ |__) \__,
					    |    \__/ .__/ $" 
     428       20 20 20 20 20 20 20	
     429       20 20 20 20 20 20 20	
     430       20 20 2F 7E 7E 5C 20	
     431       7C 5F 5F 29 20 5C 5F	
     432       5F 2C 20 20 20 20 7C	
     433       20 20 20 20 5C 5F 5F	
     434       2F 20 2E 5F 5F 2F 20	
     435       24			
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-11


     436				 
     437 0AD1  0028[			divider                     DB         
					 40 DUP ("->"),"$" 
     438	   2D 3E		
     439			 ]	
     440       24			
     441				 
     442 0B22  20 20 20 20 20 20 20	menuBorder                  DB         
					 "        _____________________________
					__________________________ "         ,1
					0d 
     443       20 5F 5F 5F 5F 5F 5F	
     444       5F 5F 5F 5F 5F 5F 5F	
     445       5F 5F 5F 5F 5F 5F 5F	
     446       5F 5F 5F 5F 5F 5F 5F	
     447       5F 5F 5F 5F 5F 5F 5F	
     448       5F 5F 5F 5F 5F 5F 5F	
     449       5F 5F 5F 5F 5F 5F 5F	
     450       5F 5F 5F 5F 5F 5F 5F	
     451       20 0A			
     452 0B63  20 20 20 20 20 20 20	                            DB         
					 "       /\                            
					                          \"         ,1
					0d 
     453       2F 5C 20 20 20 20 20	
     454       20 20 20 20 20 20 20	
     455       20 20 20 20 20 20 20	
     456       20 20 20 20 20 20 20	
     457       20 20 20 20 20 20 20	
     458       20 20 20 20 20 20 20	
     459       20 20 20 20 20 20 20	
     460       20 20 20 20 20 20 20	
     461       5C 0A			
     462 0BA4  20 20 20 28 4F 29 3D	                            DB         
					 "   (O)===)><><><><><><><><><><><><><>
					<><><><><><><><><><><><><><)==(O)"   ,1
					0d 
     463       3D 3D 29 3E 3C 3E 3C	
     464       3E 3C 3E 3C 3E 3C 3E	
     465       3C 3E 3C 3E 3C 3E 3C	
     466       3E 3C 3E 3C 3E 3C 3E	
     467       3C 3E 3C 3E 3C 3E 3C	
     468       3E 3C 3E 3C 3E 3C 3E	
     469       3C 3E 3C 3E 3C 3E 3C	
     470       3E 3C 3E 3C 3E 3C 3E	
     471       3C 29 3D 3D 28 4F 29	
     472       0A			
     473 0BEB  20 20 20 20 20 20 20	                            DB         
					 "       \/''''''''''''''''''''''''''''
					''''''''''''''''''''''''''/"         ,1
					0d 
     474       5C 2F 27 27 27 27 27	
     475       27 27 27 27 27 27 27	
     476       27 27 27 27 27 27 27	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-12


     477       27 27 27 27 27 27 27	
     478       27 27 27 27 27 27 27	
     479       27 27 27 27 27 27 27	
     480       27 27 27 27 27 27 27	
     481       27 27 27 27 27 27 27	
     482       2F 0A			
     483 0C2C  0005[			                            DB    5 DUP
					("       (                             
					                         (",10d,"      
					  )            
     484	   20 20 20 20 20	
     485	   20 20 28 20 20	
     486	   20 20 20 20 20	
     487	   20 20 20 20 20	
     488	   20 20 20 20 20	
     489	   20 20 20 20 20	
     490	   20 20 20 20 20	
     491	   20 20 20 20 20	
     492	   20 20 20 20 20	
     493	   20 20 20 20 20	
     494	   20 20 20 20 20	
     495	   20 20 20 20 20	
     496	   20 20 28		
     497	   0A			
     498	   20 20 20 20 20	
     499	   20 20 20 29 20	
     500	   20 20 20 20 20	
     501	   20 20 20 20 20	
     502	   20 20 20 20 20	
     503	   20 20 20 20 20	
     504	   20 20 20 20 20	
     505	   20 20 20 20 20	
     506	   20 20 20 20 20	
     507	   20 20 20 20 20	
     508	   20 20 20 20 20	
     509	   20 20 20 20 20	
     510	   20 20 20 29		
     511	   0A			
     512			 ]	
     513				
     514 0EB1  20 20 20 20 20 20 20	                            DB         
					 "       /\''''''''''''''''''''''''''''
					''''''''''''''''''''''''''\    "     ,1
					0d 
     515       2F 5C 27 27 27 27 27	
     516       27 27 27 27 27 27 27	
     517       27 27 27 27 27 27 27	
     518       27 27 27 27 27 27 27	
     519       27 27 27 27 27 27 27	
     520       27 27 27 27 27 27 27	
     521       27 27 27 27 27 27 27	
     522       27 27 27 27 27 27 27	
     523       5C 20 20 20 20 0A	
     524 0EF6  20 20 20 28 4F 29 3D	                            DB         
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-13


					 "   (O)===)><><><><><><><><><><><><><>
					<><><><><><><><><><><><><><)==(O)"   ,1
					0d 
     525       3D 3D 29 3E 3C 3E 3C	
     526       3E 3C 3E 3C 3E 3C 3E	
     527       3C 3E 3C 3E 3C 3E 3C	
     528       3E 3C 3E 3C 3E 3C 3E	
     529       3C 3E 3C 3E 3C 3E 3C	
     530       3E 3C 3E 3C 3E 3C 3E	
     531       3C 3E 3C 3E 3C 3E 3C	
     532       3E 3C 3E 3C 3E 3C 3E	
     533       3C 29 3D 3D 28 4F 29	
     534       0A			
     535 0F3D  20 20 20 20 20 20 20	                            DB         
					 "       \/____________________________
					__________________________/"         ,1
					0d 
     536       5C 2F 5F 5F 5F 5F 5F	
     537       5F 5F 5F 5F 5F 5F 5F	
     538       5F 5F 5F 5F 5F 5F 5F	
     539       5F 5F 5F 5F 5F 5F 5F	
     540       5F 5F 5F 5F 5F 5F 5F	
     541       5F 5F 5F 5F 5F 5F 5F	
     542       5F 5F 5F 5F 5F 5F 5F	
     543       5F 5F 5F 5F 5F 5F 5F	
     544       2F 0A			
     545 0F7E  24			                            DB         
					 "$" 
     546				 
     547 0F7F  31 29 20 20 20 20 20	menuSelections              DB  "1)    
					 SALES$$$$$$$$"  
     548       53 41 4C 45 53 24 24	
     549       24 24 24 24 24 24	
     550 0F93  32 29 20 20 20 20 20	                            DB  "2)    
					 CUSTOMER$$$$$" 
     551       43 55 53 54 4F 4D 45	
     552       52 24 24 24 24 24	
     553 0FA7  33 29 20 20 20 20 20	                            DB  "3)    
					 EXIT$$$$$$$$$" 
     554       45 58 49 54 24 24 24	
     555       24 24 24 24 24 24	
     556				 
     557 0FBB  0018[			menuInputTip                DB  24 DUP(
					" "),"w/s(Lowercase) to make selection$
					" 
     558	   20			
     559			 ]	
     560       77 2F 73 28 4C 6F 77	
     561       65 72 63 61 73 65 29	
     562       20 74 6F 20 6D 61 6B	
     563       65 20 73 65 6C 65 63	
     564       74 69 6F 6E 24		
     565				 
     566 0FF4  01			currentSel                  DB  1 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-14


     567				 
     568 = 0003				maxSel                      EQU 3 
     569				 
     570				;++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					++++++++++ 
     571				 
     572				;++++++++++++++++++++++++++++++++++++++
					++++++++EXIT SECTION+++++++++++++++++++
					+++++++++++++++++++++++++++++++++ 
     573				 
     574 0FF5  45 58 49 54 20 50 4F	confirmExit                 DB  "EXIT P
					OS SYSTEM ?$" 
     575       53 20 53 59 53 54 45	
     576       4D 20 3F 24		
     577				 
     578 1007  5B 20 59 20 45 20 53	yesStr                      DB  "[ Y E 
					S ]$" 
     579       20 5D 24			
     580				 
     581 1011  5B 20 4E 20 4F 20 5D	noStr                       DB  "[ N O 
					]$" 
     582       24			
     583				 
     584 1019  01			exitSel                     DB  1 
     585				 
     586 101A  00			exitBox                     DB  0000000
					0b   ;colour   
     587 101B  07 0C			                            DB  7   ,12
					         ;first corner (row, column) 
     588 101D  13 40			                            DB  19  ,64
					       ;second corner 
     589				 
     590 101F  8F			exitBox1                    DB  1000111
					1b   ;colour   
     591 1020  04 08			                            DB  4    ,8
					         ;first corner (row, column) 
     592 1022  12 3C			                            DB  18   ,6
					0      ;second corner 
     593				 
     594 1024  FF			exitBox2                    DB  1111111
					1b   ;colour   
     595 1025  04 08			                            DB  4    ,8
					         ;first corner (row, column) 
     596 1027  11 3A			                            DB  17   ,5
					8      ;second corner 
     597				 
     598 1029  70			exitBox3                    DB  0111000
					0b   ;colour   
     599 102A  05 0A			                            DB  5    ,1
					0         ;first corner (row, column) 
     600 102C  11 3A			                            DB  17   ,5
					8      ;second corner 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-15


     601				 
     602 102E  0E 10			yesPos                      DB  14  ,16
					 
     603 1030  0E 2A			noPos                       DB  14  ,42
					 
     604				;++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					++++++++++ 
     605				;author: Tan Jee Schuan, Yeoh Ming Zhe 
     606				;++++++++++++++++++++++++++++++++++++++
					++++++++SALES SECTION++++++++++++++++++
					++++++++++++++++++++++++++++++++++ 
     607 1032  01			itemSelectionChoice         DB  1 
     608				 
     609 1033  08			numberOfItems               DB  8 
     610				                                   ;1  
					      0         01           qty 
     611 1034  01 4C 65 6D 6F 6E 73	items                       DB  1, "Lem
					ons$$$$$$$$$$$$$$1.20$$$$", 16 
     612       24 24 24 24 24 24 24	
     613       24 24 24 24 24 24 24	
     614       31 2E 32 30 24 24 24	
     615       24 10			
     616 1052  02 42 6C 75 65 62 65	                            DB  2, "Blu
					eberries$$$$$$$$$4.99$$$$", 78 
     617       72 72 69 65 73 24 24	
     618       24 24 24 24 24 24 24	
     619       34 2E 39 39 24 24 24	
     620       24 4E			
     621 1070  03 54 65 61 24 24 24	                            DB  3, "Tea
					$$$$$$$$$$$$$$$$$14.99$$$", 45 
     622       24 24 24 24 24 24 24	
     623       24 24 24 24 24 24 24	
     624       31 34 2E 39 39 24 24	
     625       24 2D			
     626 108E  04 42 72 61 6E 64 79	                            DB  4, "Bra
					ndy Apricot$$$$$$17.37$$$", 79 
     627       20 41 70 72 69 63 6F	
     628       74 24 24 24 24 24 24	
     629       31 37 2E 33 37 24 24	
     630       24 4F			
     631 10AC  05 54 6F 6D 61 74 6F	                            DB  5, "Tom
					ato Ravioli Soup$3.99$$$$" ,27 
     632       20 52 61 76 69 6F 6C	
     633       69 20 53 6F 75 70 24	
     634       33 2E 39 39 24 24 24	
     635       24 1B			
     636 10CA  06 57 61 73 61 62 69	                            DB  6, "Was
					abi Paste$$$$$$$$18.21$$$", 63 
     637       20 50 61 73 74 65 24	
     638       24 24 24 24 24 24 24	
     639       31 38 2E 32 31 24 24	
     640       24 3F			
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-16


     641 10E8  07 43 68 65 65 73 65	                            DB  7, "Che
					ese$$$$$$$$$$$$$$15.67$$$", 7 
     642       24 24 24 24 24 24 24	
     643       24 24 24 24 24 24 24	
     644       31 35 2E 36 37 24 24	
     645       24 07			
     646 1106  08 47 61 72 6C 69 63	                            DB  8, "Gar
					lic$$$$$$$$$$$$$$3.08$$$$", 13 
     647       24 24 24 24 24 24 24	
     648       24 24 24 24 24 24 24	
     649       33 2E 30 38 24 24 24	
     650       24 0D			
     651 1124  00			                            DB  0 
     652				 
     653 1125  02 00 00 00 00 00 00	itemSaleRecord              DB  2,  0, 
					 0,  0,  0,  0,  0,  0 
     654       00			
     655				 
     656				;ITEM SELECTION 
     657				 
     658 112D  C9			itemSelHeader               DB  201d, 3
					2 DUP (205d), "ITEM SELECTION", 32 DUP 
					(205d), 187d 
     659       0020[			
     660	   CD			
     661			 ]	
     662       49 54 45 4D 20 53 45	
     663       4C 45 43 54 49 4F 4E	
     664       0020[			
     665	   CD			
     666			 ]	
     667       BB			
     668 117D  0014[			                            DB  20  DUP
					(186d, 78 DUP(" "), 186d) 
     669	   BA			
     670	004E[			
     671	    20			
     672			]	
     673	   BA			
     674			 ]	
     675				
     676 17BD  C8			                            DB  200d, 7
					8 DUP (205d), 188d 
     677       004E[			
     678	   CD			
     679			 ]	
     680       BC			
     681 180D  24			                            DB  "$" 
     682				 
     683 180E  49 44			itemHeader                  DB  "ID", 1
					0 DUP(" "), "Item Name", 15 DUP(" "), "
					Price", 8 DUP(" "), "Qty" 
     684       000A[			
     685	   20			
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-17


     686			 ]	
     687       49 74 65 6D 20 4E 61	
     688       6D 65			
     689       000F[			
     690	   20			
     691			 ]	
     692       50 72 69 63 65		
     693       0008[			
     694	   20			
     695			 ]	
     696       51 74 79			
     697 1842  24			                            DB  "$" 
     698				 
     699 1843  C0			itemSelBorder               DB  192d ,5
					2 DUP(196d), 217d 
     700       0034[			
     701	   C4			
     702			 ]	
     703       D9			
     704 1879  24			                            DB  "$" 
     705				 
     706				 
     707 187A  30 20 20 20 20 20 20	itemExitString              DB  "0     
					      FINISH SALE$" 
     708       20 20 20 20 20 46 49	
     709       4E 49 53 48 20 53 41	
     710       4C 45 24			
     711				             
     712				;QTY SECTION             
     713 1892  5F			qtyDisplayBox               DB  0101111
					1b 
     714 1893  05 14			                            DB  5, 20  
					           ;row,column 
     715 1895  08 29			                            DB  8, 41 
     716				             
     717 1897  C9			qtyBorder1                  DB  201d, 1
					 DUP (205d), "QTY (1-999)", 7 DUP (205d
					), 187d,10d 
     718       0001[			
     719	   CD			
     720			 ]	
     721       51 54 59 20 28 31 2D	
     722       39 39 39 29		
     723       0007[			
     724	   CD			
     725			 ]	
     726       BB 0A			
     727 18AD  24			                            DB  "$" 
     728 18AE  BA			qtyBorder2                  DB  186d, 1
					9 DUP (" "), 186d,10d 
     729       0013[			
     730	   20			
     731			 ]	
     732       BA 0A			
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-18


     733 18C4  24			                            DB  "$" 
     734 18C5  C8			qtyBorder3                  DB  200d, 1
					9 DUP (205d), 188d 
     735       0013[			
     736	   CD			
     737			 ]	
     738       BC			
     739 18DA  24			                            DB  "$" 
     740				         
     741 18DB  51 54 59 3A 20 24	qtyPrompt                   DB  "QTY: $
					" 
     742				         
     743 18E1  49 6E 76 61 6C 69 64	qtyError                    DB  "Invali
					d QTY$" 
     744       20 51 54 59 24		
     745				 
     746 = 0000				itemID                      EQU 0 
     747 = 0001				itemName                    EQU 1 
     748 = 0015				itemPrice                   EQU 21 
     749 = 001D				itemQty                     EQU 29 
     750 = 001E				itemSize                    EQU 30 
     751				 
     752 = 004E				selColour                   EQU 0100111
					0b 
     753				 
     754				;++++++++++++++++++++++++++++++++++++++
					++++++++CUSTOMER SECTION+++++++++++++++
					+++++++++++++++++++++++++++++++++++++++
					++++++++++++=++
     755				 
     756 18ED  20 20 20 20 20 20 20	customerMenu                DB "       
					         ",218d, 38 DUP(196d) , 191d, 1
					3d, 10d 
     757       20 20 20 20 20 20 20	
     758       20 20 DA			
     759       0026[			
     760	   C4			
     761			 ]	
     762       BF 0D 0A			
     763 1927  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "   ABC Customer Manag
					ement Function   ", 179d, 13d, 10d 
     764       20 20 20 20 20 20 20	
     765       20 20 B3 20 20 20 41	
     766       42 43 20 43 75 73 74	
     767       6F 6D 65 72 20 4D 61	
     768       6E 61 67 65 6D 65 6E	
     769       74 20 46 75 6E 63 74	
     770       69 6F 6E 20 20 20 B3	
     771       0D 0A			
     772 1961  20 20 20 20 20 20 20	                            DB "       
					         ",179d, 38 DUP(196d), 179d, 13
					d, 10d 
     773       20 20 20 20 20 20 20	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-19


     774       20 20 B3			
     775       0026[			
     776	   C4			
     777			 ]	
     778       B3 0D 0A			
     779 199B  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "**       |Functions A
					vailable|      **", 179d, 13d, 10d 
     780       20 20 20 20 20 20 20	
     781       20 20 B3 2A 2A 20 20	
     782       20 20 20 20 20 7C 46	
     783       75 6E 63 74 69 6F 6E	
     784       73 20 41 76 61 69 6C	
     785       61 62 6C 65 7C 20 20	
     786       20 20 20 20 2A 2A B3	
     787       0D 0A			
     788 19D5  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "**       |===========
					========|      **", 179d, 13d, 10d 
     789       20 20 20 20 20 20 20	
     790       20 20 B3 2A 2A 20 20	
     791       20 20 20 20 20 7C 3D	
     792       3D 3D 3D 3D 3D 3D 3D	
     793       3D 3D 3D 3D 3D 3D 3D	
     794       3D 3D 3D 3D 7C 20 20	
     795       20 20 20 20 2A 2A B3	
     796       0D 0A			
     797 1A0F  20 20 20 20 20 20 20	                            DB "       
					         ",179d, 38 DUP(196d), 179d, 13
					d, 10d 
     798       20 20 20 20 20 20 20	
     799       20 20 B3			
     800       0026[			
     801	   C4			
     802			 ]	
     803       B3 0D 0A			
     804 1A49  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "        ^|  1. Add Cu
					stomer  |^       ", 179d, 13d, 10d 
     805       20 20 20 20 20 20 20	
     806       20 20 B3 20 20 20 20	
     807       20 20 20 20 5E 7C 20	
     808       20 31 2E 20 41 64 64	
     809       20 43 75 73 74 6F 6D	
     810       65 72 20 20 7C 5E 20	
     811       20 20 20 20 20 20 B3	
     812       0D 0A			
     813 1A83  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "        ^|  2. Displa
					y Cust  |^       ", 179d, 13d, 10d 
     814       20 20 20 20 20 20 20	
     815       20 20 B3 20 20 20 20	
     816       20 20 20 20 5E 7C 20	
     817       20 32 2E 20 44 69 73	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-20


     818       70 6C 61 79 20 43 75	
     819       73 74 20 20 7C 5E 20	
     820       20 20 20 20 20 20 B3	
     821       0D 0A			
     822 1ABD  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "        ^|  3. Remove
					 Cust   |^       ", 179d, 13d, 10d 
     823       20 20 20 20 20 20 20	
     824       20 20 B3 20 20 20 20	
     825       20 20 20 20 5E 7C 20	
     826       20 33 2E 20 52 65 6D	
     827       6F 76 65 20 43 75 73	
     828       74 20 20 20 7C 5E 20	
     829       20 20 20 20 20 20 B3	
     830       0D 0A			
     831 1AF7  20 20 20 20 20 20 20	                            DB "       
					         ",179d, "        ^|  4. Exit t
					o Main  |^       ", 179d, 13d, 10d 
     832       20 20 20 20 20 20 20	
     833       20 20 B3 20 20 20 20	
     834       20 20 20 20 5E 7C 20	
     835       20 34 2E 20 45 78 69	
     836       74 20 74 6F 20 4D 61	
     837       69 6E 20 20 7C 5E 20	
     838       20 20 20 20 20 20 B3	
     839       0D 0A			
     840 1B31  20 20 20 20 20 20 20	                            DB "       
					         ",192d, 38 DUP(196d), 217d, 13
					d, 10d, "$" 
     841       20 20 20 20 20 20 20	
     842       20 20 C0			
     843       0026[			
     844	   C4			
     845			 ]	
     846       D9 0D 0A 24		
     847				 
     848 1B6C  41 42 43 20 43 75 73	customerMenuStr1            DB  "ABC Cu
					stomer Management Function$" 
     849       74 6F 6D 65 72 20 4D	
     850       61 6E 61 67 65 6D 65	
     851       6E 74 20 46 75 6E 63	
     852       74 69 6F 6E 24		
     853 1B8D  46 75 6E 63 74 69 6F	customerMenuStr2            DB  "Functi
					ons Available$" 
     854       6E 73 20 41 76 61 69	
     855       6C 61 62 6C 65 24	
     856 1BA1  31 2E 20 41 64 64 20	customerMenuAdd             DB  "1. Add
					 Customer$" 
     857       43 75 73 74 6F 6D 65	
     858       72 24			
     859 1BB1  32 2E 20 44 69 73 70	customerMenuDisplay         DB  "2. Dis
					play Cust$" 
     860       6C 61 79 20 43 75 73	
     861       74 24			
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-21


     862 1BC1  33 2E 20 52 65 6D 6F	customerMenuRemove          DB  "3. Rem
					ove Cust$" 
     863       76 65 20 43 75 73 74	
     864       24			
     865 1BD0  34 2E 20 45 78 69 74	customerMenuExit            DB  "4. Exi
					t to Main$" 
     866       20 74 6F 20 4D 61 69	
     867       6E 24			
     868				 
     869 1BE0  45 6E 74 65 72 20 61	customerMenuInputPrompt     DB  "Enter 
					a selection (1-4): $" 
     870       20 73 65 6C 65 63 74	
     871       69 6F 6E 20 28 31 2D	
     872       34 29 3A 20 24		
     873				 
     874 1BFA  45 6E 74 65 72 20 76	customerInvalidInput        DB  "Enter 
					valid input!$" 
     875       61 6C 69 64 20 69 6E	
     876       70 75 74 21 24		
     877				 
     878 1C0D  0050[			customerHeader              DB  80 DUP(
					"=") 
     879	   3D			
     880			 ]	
     881				
     882 1C5D  001E[			                            DB  30 DUP(
					" "), "CUSTOMER PAGE" 
     883	   20			
     884			 ]	
     885       43 55 53 54 4F 4D 45	
     886       52 20 50 41 47 45	
     887 1C88  0A			                            DB  10d 
     888 1C89  0050[			                            DB  80 DUP(
					"=") 
     889	   3D			
     890			 ]	
     891				
     892 1CD9  24			                            DB  "$" 
     893				 
     894 1CDA  43 75 73 74 6F 6D 65	promptCustomerID            DB      "Cu
					stomer ID: $" 
     895       72 20 49 44 3A 20 24	
     896 1CE8  43 75 73 74 6F 6D 65	promptCustomerName          DB      "Cu
					stomer Name: $" 
     897       72 20 4E 61 6D 65 3A	
     898       20 24			
     899 1CF8  43 75 73 74 6F 6D 65	promptCustomerAge           DB      "Cu
					stomer Age: $" 
     900       72 20 41 67 65 3A 20	
     901       24			
     902 1D07  43 75 73 74 6F 6D 65	promptCustomerPhone         DB      "Cu
					stomer Phone: $" 
     903       72 20 50 68 6F 6E 65	
     904       3A 20 24			
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-22


     905 1D18  43 75 73 74 6F 6D 65	promptCustPoint             DB      "Cu
					stomer Point: $"     
     906       72 20 50 6F 69 6E 74	
     907       3A 20 24			
     908				     
     909 1D29  43 75 73 74 6F 6D 65	promptCustomerFull          DB      "Cu
					stomer List Full!$" 
     910       72 20 4C 69 73 74 20	
     911       46 75 6C 6C 21 24	
     912				     
     913 1D3D  43 6F 6E 74 69 6E 75	promptCustContinueAdd       DB      "Co
					ntinue adding ? (y/n) : $" 
     914       65 20 61 64 64 69 6E	
     915       67 20 3F 20 28 79 2F	
     916       6E 29 20 3A 20 24	
     917				     
     918 1D58  4E 75 6D 62 65 72 20	totalCustomersStr           DB      "Nu
					mber of customers: $" 
     919       6F 66 20 63 75 73 74	
     920       6F 6D 65 72 73 3A 20	
     921       24			
     922				     
     923 1D6E  C9			custInputBorder             DB  201d, 4
					0 DUP(205d), 187d 
     924       0028[			
     925	   CD			
     926			 ]	
     927       BB			
     928 1D98  0A			                            DB  10d 
     929 1D99  0004[			                            DB  4 DUP(1
					86d, 40 DUP(" ") , 186d, 10d,    204d, 
					40 DUP(205d), 185d,10d) 
     930	   BA			
     931	0028[			
     932	    20			
     933			]	
     934	   BA			
     935	   0A			
     936	   CC			
     937	0028[			
     938	    CD			
     939			]	
     940	   B9			
     941	   0A			
     942			 ]	
     943				
     944 1EF1  BA			                            DB  186d, 4
					0 DUP(" ") , 186d, 10d 
     945       0028[			
     946	   20			
     947			 ]	
     948       BA 0A			
     949 1F1C  C8			                            DB  200d, 4
					0 DUP(205d), 188d 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-23


     950       0028[			
     951	   CD			
     952			 ]	
     953       BC			
     954 1F46  24			                            DB  "$"  
     955				 
     956 1F47  49 44 24			customerIDHeader            DB  "ID$" 
     957 1F4A  4E 41 4D 45 24		customerNameHeader          DB  "NAME$"
					        
     958 1F4F  41 47 45 24		customerAgeHeader           DB  "AGE$" 
					       
     959 1F53  50 48 4F 4E 45 24	customerPhoneHeader         DB  "PHONE$
					"        
     960 1F59  50 4F 49 4E 54 53 24	customerPointHeader         DB  "POINTS
					$"        
     961				 
     962				 
     963 1F60  0009[			custDisplayBorder           DB  9 DUP(1
					96d), 194d, 20 DUP(196d), 194d , 5 DUP(
					196d), 194d, 14 DUP(196d), 194d , 8 DUP
					(196d), 191d , 
     964	   C4			
     965			 ]	
     966       C2			
     967       0014[			
     968	   C4			
     969			 ]	
     970       C2			
     971       0005[			
     972	   C4			
     973			 ]	
     974       C2			
     975       000E[			
     976	   C4			
     977			 ]	
     978       C2			
     979       0008[			
     980	   C4			
     981			 ]	
     982       BF 0A			
     983 1F9E  0005[			                            DB  5 DUP(9
					 DUP(" "), 179d, 20 DUP(" "), 179d , 5 
					DUP(" "), 179d, 14 DUP(" "), 179d , 8 D
					UP(" "), 179d, 
     984	0009[			
     985	    20			
     986			]	
     987	   B3			
     988	0014[			
     989	    20			
     990			]	
     991	   B3			
     992	0005[			
     993	    20			
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-24


     994			]	
     995	   B3			
     996	000E[			
     997	    20			
     998			]	
     999	   B3			
    1000	0008[			
    1001	    20			
    1002			]	
    1003	   B3			
    1004	   0A			
    1005	0009[			
    1006	    C4			
    1007			]	
    1008	   C5			
    1009	0014[			
    1010	    C4			
    1011			]	
    1012	   C5			
    1013	0005[			
    1014	    C4			
    1015			]	
    1016	   C5			
    1017	000E[			
    1018	    C4			
    1019			]	
    1020	   C5			
    1021	0008[			
    1022	    C4			
    1023			]	
    1024	   B4			
    1025	   0A			
    1026			 ]	
    1027				
    1028 220A  0009[			                            DB  9 DUP("
					 "), 179d, 20 DUP(" "), 179d , 5 DUP(" 
					"), 179d, 14 DUP(" "), 179d , 8 DUP(" "
					), 179d, 10d 
    1029	   20			
    1030			 ]	
    1031       B3			
    1032       0014[			
    1033	   20			
    1034			 ]	
    1035       B3			
    1036       0005[			
    1037	   20			
    1038			 ]	
    1039       B3			
    1040       000E[			
    1041	   20			
    1042			 ]	
    1043       B3			
    1044       0008[			
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-25


    1045	   20			
    1046			 ]	
    1047       B3 0A			
    1048 2248  0009[			                            DB  9 DUP(1
					96d), 193d, 20 DUP(196d), 193d , 5 DUP(
					196d), 193d, 14 DUP(196d), 193d , 8 DUP
					(196d), 217d , 
    1049	   C4			
    1050			 ]	
    1051       C1			
    1052       0014[			
    1053	   C4			
    1054			 ]	
    1055       C1			
    1056       0005[			
    1057	   C4			
    1058			 ]	
    1059       C1			
    1060       000E[			
    1061	   C4			
    1062			 ]	
    1063       C1			
    1064       0008[			
    1065	   C4			
    1066			 ]	
    1067       D9 0A			
    1068 2286  24			                            DB  "$"  
    1069				 
    1070 2287  FC			custFullBox1                DB  1111110
					0b 
    1071 2288  05 14			                            DB  5,  20 
    1072 228A  0C 32			                            DB  12, 50 
    1073				 
    1074 228C  8C			custFullBox2                DB  1000110
					0b 
    1075 228D  06 16			                            DB  6,  22 
    1076 228F  0C 32			                            DB  12, 50 
    1077				 
    1078 2291  74			custFullBox3                DB  0111010
					0b 
    1079 2292  06 16			                            DB  6,  22 
    1080 2294  0B 30			                            DB  11, 48 
    1081				 
    1082 2296  C3			customerNumberLine          DB  195d, 1
					0 DUP(196d), " " 
    1083       000A[			
    1084	   C4			
    1085			 ]	
    1086       20			
    1087 22A2  24			                            DB  "$" 
    1088				 
    1089 22A3  45 6E 74 65 72 20 63	customerRemovePrompt        DB  "Enter 
					customer number to delete: $" 
    1090       75 73 74 6F 6D 65 72	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-26


    1091       20 6E 75 6D 62 65 72	
    1092       20 74 6F 20 64 65 6C	
    1093       65 74 65 3A 20 24	
    1094				 
    1095 22C5  02			customerCount               DB  2 
    1096				 
    1097				                                ;012345
					678901234567890123456789012345678901234
					567890 
    1098 22C6  53 32 32 39 39 24 54	customerArr                 DB  "S2299$
					Tan Jee Schuan$$$$$$21$$0164189855$$100
					$$$" 
    1099       61 6E 20 4A 65 65 20	
    1100       53 63 68 75 61 6E 24	
    1101       24 24 24 24 24 32 31	
    1102       24 24 30 31 36 34 31	
    1103       38 39 38 35 35 24 24	
    1104       31 30 30 24 24 24	
    1105 22F6  53 32 32 39 39 24 54	                            DB  "S2299$
					Tan Test Name$$$$$$$80$$01641898555$100
					55$" 
    1106       61 6E 20 54 65 73 74	
    1107       20 4E 61 6D 65 24 24	
    1108       24 24 24 24 24 38 30	
    1109       24 24 30 31 36 34 31	
    1110       38 39 38 35 35 35 24	
    1111       31 30 30 35 35 24	
    1112 2326  01F4[			                            DB  500 dup
					 ("$")    
    1113	   24			
    1114			 ]	
    1115				
    1116				 
    1117 = 0030				customerSize                EQU 48d 
    1118 = 0005				maxCustNum                  EQU 5 
    1119				 
    1120 = 0000				id                          EQU 0 
    1121 = 0006				custName                    EQU 6 
    1122 = 001A				age                         EQU 26 
    1123 = 001E				phone                       EQU 30  
    1124 = 002A				bonusPoint                  EQU 42 
    1125				 
    1126				;;+++++++++++++++++++++++++++++++++++++
					++++++++++++++++++++++++++CALCULATION S
					ECTION+++++++++++++++++++++++++++++++++
					+++++++++++++++
    1127 = 0008				strNumLen                   EQU 8      
					;length of strNum 
    1128 = 0014				mulResultLen                EQU 20 
    1129				 
    1130 251A  00			remainder                   DB  0 
    1131 251B  00			carry                       DB  0 
    1132				 
    1133 251C  0014[			mulResult                   DB  mulResu
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-27


					ltLen DUP("0"), "$" 
    1134	   30			
    1135			 ]	
    1136       24			
    1137 2531  ??			mulX                        DB  ? 
    1138 2532  ??			mulY                        DB  ? 
    1139 2533  00			mulI                        DB  0 
    1140 2534  00			mulJ                        DB  0 
    1141				;;;;;;;;; 
    1142				 
    1143 2535  0000 0000 0000 0000	itemSubTotals               DW  0,  0, 
					  0,   0,  0,  0,  0,  0 
    1144       0000 0000 0000 0000	
    1145				 
    1146 2545  0008[			itemSubTotalsString         DB  8 DUP(s
					trNumLen DUP("0"), "$") 
    1147	0008[			
    1148	    30			
    1149			]	
    1150	   24			
    1151			 ]	
    1152				
    1153				 
    1154 258D  0008[			result                      DB  strNumL
					en  DUP("0"), "$" 
    1155	   30			
    1156			 ]	
    1157       24			
    1158				 
    1159 2596  0008[			subtotal                    DB  strNumL
					en  DUP("0"), "$" 
    1160	   30			
    1161			 ]	
    1162       24			
    1163				 
    1164 259F  0014[			totalPrice                  DB  mulResu
					ltLen DUP("0"), "$" 
    1165	   30			
    1166			 ]	
    1167       24			
    1168				 
    1169				;;;3 decimal places 
    1170 25B4  30 30 31 32 33 35 35	testVal                     DB  "001235
					50$" 
    1171       30 24			
    1172				 
    1173 25BD  30 30 30 30 30 30 36	sstRate                     DB  "000000
					60$"         ;;sst rate 0.060 
    1174       30 24			
    1175				 
    1176 25C6  00			quantity                    DB  0 
    1177				 
    1178				;++++++++++++++++++++++++++++++++++++++
					++++++++++++++++++ TRANSACTION ++++++++
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-28


					+++++++++++++++++++++++++++++++++++++++
					++++++++++++= 
    1179				 
    1180 25C7  53 65 6C 65 63 74 20	promptCustomerPointSel      DB  "Select
					 customer to add points (e for no custo
					mer) : ","$" 
    1181       63 75 73 74 6F 6D 65	
    1182       72 20 74 6F 20 61 64	
    1183       64 20 70 6F 69 6E 74	
    1184       73 20 28 65 20 66 6F	
    1185       72 20 6E 6F 20 63 75	
    1186       73 74 6F 6D 65 72 29	
    1187       20 3A 20 24		
    1188				 
    1189 25FC  49 6E 76 61 6C 69 64	transactionCustInvalidSel   DB  "Invali
					d Selection! $" 
    1190       20 53 65 6C 65 63 74	
    1191       69 6F 6E 21 20 24	
    1192				 
    1193 2610  53 65 6C 65 63 74 65	transactionCustEmpty        DB  "Select
					ed customer doesn't exist! $" 
    1194       64 20 63 75 73 74 6F	
    1195       6D 65 72 20 64 6F 65	
    1196       73 6E 27 74 20 65 78	
    1197       69 73 74 21 20 24	
    1198				 
    1199 2632  DA			recieptBorder               DB  218d, 2
					6 DUP(196d), 194d, 5 DUP(196d), 194d , 
					14 DUP(196d), 191d , 10d 
    1200       001A[			
    1201	   C4			
    1202			 ]	
    1203       C2			
    1204       0005[			
    1205	   C4			
    1206			 ]	
    1207       C2			
    1208       000E[			
    1209	   C4			
    1210			 ]	
    1211       BF 0A			
    1212 2664  0007[			                            DB  7 DUP(1
					79d, 26 DUP(" "), 179d, 5 DUP(" "), 179
					d , 8 DUP(" "), 179d, 5 DUP(" "), 179d,
					 10d,    195d, 
    1213	   B3			
    1214	001A[			
    1215	    20			
    1216			]	
    1217	   B3			
    1218	0005[			
    1219	    20			
    1220			]	
    1221	   B3			
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-29


    1222	0008[			
    1223	    20			
    1224			]	
    1225	   B3			
    1226	0005[			
    1227	    20			
    1228			]	
    1229	   B3			
    1230	   0A			
    1231	   C3			
    1232	001A[			
    1233	    C4			
    1234			]	
    1235	   C5			
    1236	0005[			
    1237	    C4			
    1238			]	
    1239	   C5			
    1240	000E[			
    1241	    C4			
    1242			]	
    1243	   B4			
    1244	   0A			
    1245			 ]	
    1246				
    1247 2920  B3			                            DB  179d, 2
					6 DUP(" "), 179d, 5 DUP(" "), 179d , 8 
					DUP(" "), 179d, 5 DUP(" "), 179d, 10d 
    1248       001A[			
    1249	   20			
    1250			 ]	
    1251       B3			
    1252       0005[			
    1253	   20			
    1254			 ]	
    1255       B3			
    1256       0008[			
    1257	   20			
    1258			 ]	
    1259       B3			
    1260       0005[			
    1261	   20			
    1262			 ]	
    1263       B3 0A			
    1264 2952  CC			                            DB  204d, 2
					6 DUP(205d), 202d, 5 DUP(205d), 206d , 
					14 DUP(205d), 185d , 10d 
    1265       001A[			
    1266	   CD			
    1267			 ]	
    1268       CA			
    1269       0005[			
    1270	   CD			
    1271			 ]	
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-30


    1272       CE			
    1273       000E[			
    1274	   CD			
    1275			 ]	
    1276       B9 0A			
    1277 2984  BA			                            DB  186d, 3
					2 DUP(" "),  186d, 14 DUP(" "), 186d ,1
					0d 
    1278       0020[			
    1279	   20			
    1280			 ]	
    1281       BA			
    1282       000E[			
    1283	   20			
    1284			 ]	
    1285       BA 0A			
    1286 29B6  C8			                            DB  200d, 3
					2 DUP(205d), 202d, 14 DUP(205d), 188d ,
					 10d 
    1287       0020[			
    1288	   CD			
    1289			 ]	
    1290       CA			
    1291       000E[			
    1292	   CD			
    1293			 ]	
    1294       BC 0A			
    1295 29E8  24			                            DB  "$"  
    1296				 
    1297 29E9  00			transactionCustSelectedCust DB  0 
    1298				 
    1299				;_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/
					~\_/~\_/~\_/~\_/~\_.  MACROS _/~\_/~\_/
					~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_/~\_
					/~\_/~\_ 
    1300				NUM_TO_STR_M    MACRO   value, destAddr
					ess 
    1301				                push    ax 
    1302				                push    si 
    1303				 
    1304				                mov     ax, value 
    1305				                lea     si, destAddress
					 
    1306				                call    NUM_TO_STR 
    1307				 
    1308				                pop     si 
    1309				                pop     ax 
    1310				ENDM 
    1311				STRLEN          MACRO   inputStr       
					 ;return string length in ax 
    1312				                lea     si, inputStr 
    1313				 
    1314				                xor     cx, cx 
    1315				                STRLEN_LOOP: 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-31


    1316				                        mov     al, [si
					] 
    1317				                        inc     si 
    1318				 
    1319				                        inc     cx 
    1320				                        cmp     al, "$"
					 
    1321				                        jne     STRLEN_
					LOOP 
    1322				 
    1323				                dec     cx 
    1324				                mov     ax, cx 
    1325				ENDM 
    1326				STRSHL          MACRO   inputStr       
					 ;shift characters of string to the lef
					t one char 
    1327				 
    1328				                STRLEN  inputStr       
					 ;string length in ax 
    1329				                mov     cx, ax 
    1330				 
    1331				                lea     si, inputStr 
    1332				                inc     si 
    1333				                STRSHL_LOOP: 
    1334				                        mov     al, [si
					] 
    1335				                        dec     si 
    1336				                        mov     [si],al
					 
    1337				 
    1338				                        add     si, 2 
    1339				                        loop    STRSHL_
					LOOP 
    1340				 
    1341				                dec     si 
    1342				                mov     al,"$" 
    1343				                mov     [si],al 
    1344				 
    1345				                dec     si 
    1346				                mov     al, "0" 
    1347				                mov     [si],al 
    1348				ENDM 
    1349				STRCPY          MACRO   dest,   source 
    1350				                lea     si, source 
    1351				                lea     di, dest 
    1352				 
    1353				                STRCPY_L: 
    1354				                        mov     al, [si
					] 
    1355				                        mov     [di],al
					 
    1356				 
    1357				                        inc     si 
    1358				                        inc     di 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-32


    1359				 
    1360				                        cmp     al, "$"
					 
    1361				                        jne     STRCPY_
					L 
    1362				ENDM 
    1363				CLEAR_STRNUM    MACRO   inputStr 
    1364				                xor     cx, cx 
    1365				                mov     cl, [strNumLen]
					 
    1366				 
    1367				                lea     si, inputStr 
    1368				                add     si, cx 
    1369				                dec     si 
    1370				 
    1371				                CLEAR_STRNUM_L: 
    1372				                        mov     al, "0"
					 
    1373				                        mov     [si],al
					 
    1374				                        dec     si 
    1375				                        loop    CLEAR_S
					TRNUM_L 
    1376				ENDM 
    1377				 
    1378				CURSOR MACRO row,column 
    1379				                push    ax 
    1380				                push    bx 
    1381				                push    cx 
    1382				                push    dx 
    1383				 
    1384				                ;set cursor 
    1385				                mov dh, row        ;row
					 
    1386				                mov dl, column       ;c
					olumn 
    1387				                mov bh, 0         ; 
    1388				                mov ah, 02h       ;  
    1389				                int 10h 
    1390				 
    1391				                pop    dx 
    1392				                pop    cx 
    1393				                pop    bx 
    1394				                pop    ax 
    1395				ENDM 
    1396				CURSORPOS   MACRO                      
					 ;return cursor pos (row:dh , column:dl
					) 
    1397				                push    ax 
    1398				                push    bx 
    1399				                push    cx 
    1400				 
    1401				                ;set cursor 
    1402				                mov bh, 0d 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-33


    1403				                mov ah, 03h       ;  
    1404				                int 10h 
    1405				 
    1406				                pop    cx 
    1407				                pop    bx 
    1408				                pop    ax 
    1409				ENDM 
    1410				COLOUR_CHAR MACRO character, colour, pr
					intNum 
    1411				                push    ax 
    1412				                push    bx 
    1413				                push    cx 
    1414				                push    dx 
    1415				 
    1416				                xor     bx,bx 
    1417				 
    1418				                mov cx, printNum       
					   
    1419				                mov al, character      
					   
    1420				                mov bl, colour        
    1421				                mov ah, 09h        
    1422				                int 10h 
    1423				 
    1424				                pop    dx 
    1425				                pop    cx 
    1426				                pop    bx 
    1427				                pop    ax 
    1428				ENDM 
    1429				 
    1430				BG_16_COLOUR    MACRO 
    1431				                push    ax 
    1432				                push    bx 
    1433				                push    cx 
    1434				                push    dx 
    1435				 
    1436				                xor     ax,ax 
    1437				                xor     bx,bx 
    1438				                xor     cx,cx 
    1439				                xor     dx,dx 
    1440				 
    1441				                mov         ax, 1003h 
    1442				                mov         bl, 0000h  
					     ;enable 16 colours for background,
					 disable text blink 
    1443				                int         10h 
    1444				 
    1445				                pop    dx 
    1446				                pop    cx 
    1447				                pop    bx 
    1448				                pop    ax 
    1449				ENDM 
    1450				 
    1451				BG_8_COLOUR     MACRO 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-34


    1452				                push    ax 
    1453				                push    bx 
    1454				                push    cx 
    1455				                push    dx 
    1456				 
    1457				                xor     ax,ax 
    1458				                xor     bx,bx 
    1459				                xor     cx,cx 
    1460				                xor     dx,dx 
    1461				 
    1462				                mov         ax, 1003h 
    1463				                mov         bl, 0001h  
					     ;enable 8 colours for background, 
					enable text blink 
    1464				                int         10h 
    1465				 
    1466				                pop    dx 
    1467				                pop    cx 
    1468				                pop    bx 
    1469				                pop    ax 
    1470				ENDM 
    1471				 
    1472 0000				.CODE 
    1473				 
    1474 0000				MAIN            PROC 
    1475 0000  B8 ---- R		                mov         ax  ,@DATA 
    1476 0003  8E D8			                mov         ds  ,ax 
    1477 0005  33 C0			                xor         ax  ,ax 
    1478				 
    1479				                ; call        cls 
    1480				                ; call        TRANSACTI
					ON 
    1481				                ; jmp         EXIT_LABL
					E 
    1482				 
    1483 0007				                LOGIN_START: 
    1484 0007  E8 1741 R		                            call       
					 cls 
    1485				 
    1486 000A  8D 16 0026 R		                            lea        
					 dx, abcLogo 
    1487 000E  E8 173A R		                            call       
					 PRINT_STR 
    1488				 
    1489				                            CURSOR     
					 8,  0 
    1490 0011  50                    1	                push    ax 
    1491 0012  53                    1	                push    bx 
    1492 0013  51                    1	                push    cx 
    1493 0014  52                    1	                push    dx 
    1494 0015  B6 08                 1	                mov dh, 8        ;row 
    1495 0017  B2 00                 1	                mov dl, 0       ;column
					 
    1496 0019  B7 00                 1	                mov bh, 0         ; 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-35


    1497 001B  B4 02                 1	                mov ah, 02h       ; 
    1498 001D  CD 10                 1	                int 10h 
    1499 001F  5A                    1	                pop    dx 
    1500 0020  59                    1	                pop    cx 
    1501 0021  5B                    1	                pop    bx 
    1502 0022  58                    1	                pop    ax 
    1503				                            COLOUR_CHAR
					 0,  00001011b,  240d 
    1504 0023  50                    1	                push    ax 
    1505 0024  53                    1	                push    bx 
    1506 0025  51                    1	                push    cx 
    1507 0026  52                    1	                push    dx 
    1508 0027  33 DB                 1	                xor     bx,bx 
    1509 0029  B9 00F0               1	                mov cx, 240d 
    1510 002C  B0 00                 1	                mov al, 0 
    1511 002E  B3 0B                 1	                mov bl, 00001011b 
    1512 0030  B4 09                 1	                mov ah, 09h 
    1513 0032  CD 10                 1	                int 10h 
    1514 0034  5A                    1	                pop    dx 
    1515 0035  59                    1	                pop    cx 
    1516 0036  5B                    1	                pop    bx 
    1517 0037  58                    1	                pop    ax 
    1518 0038  8D 16 029E R		                            lea        
					 dx  ,loginHeader 
    1519 003C  E8 173A R		                            call       
					 PRINT_STR 
    1520				 
    1521				                            COLOUR_CHAR
					 0,  00001111b,  280d 
    1522 003F  50                    1	                push    ax 
    1523 0040  53                    1	                push    bx 
    1524 0041  51                    1	                push    cx 
    1525 0042  52                    1	                push    dx 
    1526 0043  33 DB                 1	                xor     bx,bx 
    1527 0045  B9 0118               1	                mov cx, 280d 
    1528 0048  B0 00                 1	                mov al, 0 
    1529 004A  B3 0F                 1	                mov bl, 00001111b 
    1530 004C  B4 09                 1	                mov ah, 09h 
    1531 004E  CD 10                 1	                int 10h 
    1532 0050  5A                    1	                pop    dx 
    1533 0051  59                    1	                pop    cx 
    1534 0052  5B                    1	                pop    bx 
    1535 0053  58                    1	                pop    ax 
    1536				 
    1537 0054  E8 04CB R		                            call       
					 LOGIN_INPUT 
    1538				 
    1539 0057  E8 0588 R		                            call       
					 LOGIN_CHECK 
    1540				 
    1541				                            ;;login cha
					nces check 
    1542 005A  A0 0241 R		                            mov        
					 al  ,[loginChances] 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-36


    1543 005D  3C 00			                            cmp        
					 al  ,0 
    1544 005F  74 0A			                            je         
					 LOGIN_NO_CHANCES 
    1545				 
    1546				                            ;;if login 
					not successful 
    1547 0061  A0 0242 R		                            mov        
					 al  ,[loginState] 
    1548 0064  3C 00			                            cmp        
					 al  ,0 
    1549 0066  74 9F			                            je         
					 LOGIN_START 
    1550				 
    1551 0068  EB 2D 90			                            jmp        
					 AFTER_LOGIN                 ;if login 
					successful 
    1552				 
    1553 006B				                            LOGIN_NO_CH
					ANCES: 
    1554 006B  E8 1741 R		                                       
					 call        cls 
    1555				                                       
					 COLOUR_CHAR 0,  01001111b,  2000d 
    1556 006E  50                    1	                push    ax 
    1557 006F  53                    1	                push    bx 
    1558 0070  51                    1	                push    cx 
    1559 0071  52                    1	                push    dx 
    1560 0072  33 DB                 1	                xor     bx,bx 
    1561 0074  B9 07D0               1	                mov cx, 2000d 
    1562 0077  B0 00                 1	                mov al, 0 
    1563 0079  B3 4F                 1	                mov bl, 01001111b 
    1564 007B  B4 09                 1	                mov ah, 09h 
    1565 007D  CD 10                 1	                int 10h 
    1566 007F  5A                    1	                pop    dx 
    1567 0080  59                    1	                pop    cx 
    1568 0081  5B                    1	                pop    bx 
    1569 0082  58                    1	                pop    ax 
    1570				 
    1571 0083  8D 16 0539 R		                                       
					 lea         dx, skull 
    1572 0087  E8 173A R		                                       
					 call        PRINT_STR 
    1573				 
    1574 008A  E8 17D2 R		                                       
					 call        NEWLINE 
    1575 008D  8D 16 0502 R		                                       
					 lea         dx, noMoreChance 
    1576 0091  E8 173A R		                                       
					 call        PRINT_STR 
    1577				 
    1578 0094  EB 48 90			                                       
					 jmp         EXIT_LABLE 
    1579 0097				                AFTER_LOGIN: 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-37


    1580				 
    1581 0097				                MENU_START: 
    1582				                            BG_8_COLOUR
					 
    1583 0097  50                    1	                push    ax 
    1584 0098  53                    1	                push    bx 
    1585 0099  51                    1	                push    cx 
    1586 009A  52                    1	                push    dx 
    1587 009B  33 C0                 1	                xor     ax,ax 
    1588 009D  33 DB                 1	                xor     bx,bx 
    1589 009F  33 C9                 1	                xor     cx,cx 
    1590 00A1  33 D2                 1	                xor     dx,dx 
    1591 00A3  B8 1003               1	                mov         ax, 1003h 
    1592 00A6  B3 01                 1	                mov         bl, 0001h  
					     ;enable 8 colours for background, 
					enable text blink 
    1593 00A8  CD 10                 1	                int         10h 
    1594 00AA  5A                    1	                pop    dx 
    1595 00AB  59                    1	                pop    cx 
    1596 00AC  5B                    1	                pop    bx 
    1597 00AD  58                    1	                pop    ax 
    1598 00AE  E8 1741 R		                            call       
					 cls 
    1599				 
    1600 00B1  E8 0310 R		                            call       
					 MENU        ;will change [currentSel] 
    1601				 
    1602 00B4  A0 0FF4 R		                            mov        
					 al, [currentSel] 
    1603				                             
    1604				                            ;;match cur
					rentSel and function to call  
    1605 00B7  3C 01			                            cmp        
					 al, 1 
    1606 00B9  74 0A			                            je         
					 main_menu_sales 
    1607				 
    1608 00BB  3C 02			                            cmp        
					 al, 2 
    1609 00BD  74 0E			                            je         
					 main_menu_customer 
    1610				 
    1611 00BF  3C 03			                            cmp        
					 al, 3 
    1612 00C1  74 0F			                            je         
					 main_menu_exit 
    1613				 
    1614 00C3  EB D2			                            jmp        
					 MENU_START 
    1615				                             
    1616 00C5				                            main_menu_s
					ales: 
    1617 00C5  E8 06D7 R		                                       
					 call        SALES 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-38


    1618 00C8  E8 0871 R		                                       
					 call        TRANSACTION 
    1619 00CB  EB CA			                                       
					 jmp         MENU_START 
    1620				 
    1621 00CD				                            main_menu_c
					ustomer: 
    1622 00CD  E8 07C5 R		                                       
					 call        CUSTOMER 
    1623 00D0  EB C5			                                       
					 jmp         MENU_START 
    1624				 
    1625 00D2				                            main_menu_e
					xit: 
    1626 00D2  E8 00F4 R		                                       
					 call        EXIT                      
					  ;output selection in exitSel 
    1627 00D5  A0 1019 R		                                       
					             mov         al, [exitSel] 
    1628 00D8  3C 01			                                       
					             cmp         al, 1 
    1629 00DA  74 02			                                       
					             je          MENU_EXIT 
    1630 00DC  EB B9			                                       
					 jmp         MENU_START 
    1631 00DE				                MENU_EXIT: 
    1632				 
    1633 00DE				                EXIT_LABLE: 
    1634				                CURSOR      21,0 
    1635 00DE  50                    1	                push    ax 
    1636 00DF  53                    1	                push    bx 
    1637 00E0  51                    1	                push    cx 
    1638 00E1  52                    1	                push    dx 
    1639 00E2  B6 15                 1	                mov dh, 21        ;row 
    1640 00E4  B2 00                 1	                mov dl, 0       ;column
					 
    1641 00E6  B7 00                 1	                mov bh, 0         ; 
    1642 00E8  B4 02                 1	                mov ah, 02h       ; 
    1643 00EA  CD 10                 1	                int 10h 
    1644 00EC  5A                    1	                pop    dx 
    1645 00ED  59                    1	                pop    cx 
    1646 00EE  5B                    1	                pop    bx 
    1647 00EF  58                    1	                pop    ax 
    1648 00F0  B4 4C			                mov         ah  ,4ch 
    1649 00F2  CD 21			                int         21h 
    1650 00F4				MAIN            ENDP 
    1651				 
    1652 00F4				EXIT            PROC                   
					     ;output selection in exitSel 
    1653				 
    1654 00F4  33 C0			                xor         ax,ax 
    1655 00F6  33 DB			                xor         bx,bx 
    1656 00F8  33 C9			                xor         cx,cx 
    1657 00FA  33 D2			                xor         dx,dx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-39


    1658				 
    1659 00FC  E8 1741 R		                call        cls 
    1660				                CURSOR      0,0        
					     ;change BG colour 
    1661 00FF  50                    1	                push    ax 
    1662 0100  53                    1	                push    bx 
    1663 0101  51                    1	                push    cx 
    1664 0102  52                    1	                push    dx 
    1665 0103  B6 00                 1	                mov dh, 0        ;row 
    1666 0105  B2 00                 1	                mov dl, 0       ;column
					 
    1667 0107  B7 00                 1	                mov bh, 0         ; 
    1668 0109  B4 02                 1	                mov ah, 02h       ; 
    1669 010B  CD 10                 1	                int 10h 
    1670 010D  5A                    1	                pop    dx 
    1671 010E  59                    1	                pop    cx 
    1672 010F  5B                    1	                pop    bx 
    1673 0110  58                    1	                pop    ax 
    1674				                COLOUR_CHAR 0,  0001111
					1b,  1000h 
    1675 0111  50                    1	                push    ax 
    1676 0112  53                    1	                push    bx 
    1677 0113  51                    1	                push    cx 
    1678 0114  52                    1	                push    dx 
    1679 0115  33 DB                 1	                xor     bx,bx 
    1680 0117  B9 1000               1	                mov cx, 1000h 
    1681 011A  B0 00                 1	                mov al, 0 
    1682 011C  B3 1F                 1	                mov bl, 00011111b 
    1683 011E  B4 09                 1	                mov ah, 09h 
    1684 0120  CD 10                 1	                int 10h 
    1685 0122  5A                    1	                pop    dx 
    1686 0123  59                    1	                pop    cx 
    1687 0124  5B                    1	                pop    bx 
    1688 0125  58                    1	                pop    ax 
    1689				 
    1690 0126  8D 36 101A R		                lea         si, exitBox
					 
    1691 012A  E8 16E9 R		                call        DISPLAY_BOX
					 
    1692				 
    1693				                BG_16_COLOUR 
    1694 012D  50                    1	                push    ax 
    1695 012E  53                    1	                push    bx 
    1696 012F  51                    1	                push    cx 
    1697 0130  52                    1	                push    dx 
    1698 0131  33 C0                 1	                xor     ax,ax 
    1699 0133  33 DB                 1	                xor     bx,bx 
    1700 0135  33 C9                 1	                xor     cx,cx 
    1701 0137  33 D2                 1	                xor     dx,dx 
    1702 0139  B8 1003               1	                mov         ax, 1003h 
    1703 013C  B3 00                 1	                mov         bl, 0000h  
					     ;enable 16 colours for background,
					 disable text blink 
    1704 013E  CD 10                 1	                int         10h 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-40


    1705 0140  5A                    1	                pop    dx 
    1706 0141  59                    1	                pop    cx 
    1707 0142  5B                    1	                pop    bx 
    1708 0143  58                    1	                pop    ax 
    1709				 
    1710 0144  8D 36 101F R		                lea         si, exitBox
					1 
    1711 0148  E8 16E9 R		                call        DISPLAY_BOX
					 
    1712				 
    1713 014B  8D 36 1024 R		                lea         si, exitBox
					2 
    1714 014F  E8 16E9 R		                call        DISPLAY_BOX
					 
    1715				 
    1716 0152  8D 36 1029 R		                lea         si, exitBox
					3 
    1717 0156  E8 16E9 R		                call        DISPLAY_BOX
					 
    1718				 
    1719				                CURSOR      4,  58 
    1720 0159  50                    1	                push    ax 
    1721 015A  53                    1	                push    bx 
    1722 015B  51                    1	                push    cx 
    1723 015C  52                    1	                push    dx 
    1724 015D  B6 04                 1	                mov dh, 4        ;row 
    1725 015F  B2 3A                 1	                mov dl, 58       ;colum
					n 
    1726 0161  B7 00                 1	                mov bh, 0         ; 
    1727 0163  B4 02                 1	                mov ah, 02h       ; 
    1728 0165  CD 10                 1	                int 10h 
    1729 0167  5A                    1	                pop    dx 
    1730 0168  59                    1	                pop    cx 
    1731 0169  5B                    1	                pop    bx 
    1732 016A  58                    1	                pop    ax 
    1733				                COLOUR_CHAR 0,  0111111
					1b,  2 
    1734 016B  50                    1	                push    ax 
    1735 016C  53                    1	                push    bx 
    1736 016D  51                    1	                push    cx 
    1737 016E  52                    1	                push    dx 
    1738 016F  33 DB                 1	                xor     bx,bx 
    1739 0171  B9 0002               1	                mov cx, 2 
    1740 0174  B0 00                 1	                mov al, 0 
    1741 0176  B3 7F                 1	                mov bl, 01111111b 
    1742 0178  B4 09                 1	                mov ah, 09h 
    1743 017A  CD 10                 1	                int 10h 
    1744 017C  5A                    1	                pop    dx 
    1745 017D  59                    1	                pop    cx 
    1746 017E  5B                    1	                pop    bx 
    1747 017F  58                    1	                pop    ax 
    1748				 
    1749				                CURSOR      17,  8 
    1750 0180  50                    1	                push    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-41


    1751 0181  53                    1	                push    bx 
    1752 0182  51                    1	                push    cx 
    1753 0183  52                    1	                push    dx 
    1754 0184  B6 11                 1	                mov dh, 17        ;row 
    1755 0186  B2 08                 1	                mov dl, 8       ;column
					 
    1756 0188  B7 00                 1	                mov bh, 0         ; 
    1757 018A  B4 02                 1	                mov ah, 02h       ; 
    1758 018C  CD 10                 1	                int 10h 
    1759 018E  5A                    1	                pop    dx 
    1760 018F  59                    1	                pop    cx 
    1761 0190  5B                    1	                pop    bx 
    1762 0191  58                    1	                pop    ax 
    1763				                COLOUR_CHAR 0,  0111111
					1b,  2 
    1764 0192  50                    1	                push    ax 
    1765 0193  53                    1	                push    bx 
    1766 0194  51                    1	                push    cx 
    1767 0195  52                    1	                push    dx 
    1768 0196  33 DB                 1	                xor     bx,bx 
    1769 0198  B9 0002               1	                mov cx, 2 
    1770 019B  B0 00                 1	                mov al, 0 
    1771 019D  B3 7F                 1	                mov bl, 01111111b 
    1772 019F  B4 09                 1	                mov ah, 09h 
    1773 01A1  CD 10                 1	                int 10h 
    1774 01A3  5A                    1	                pop    dx 
    1775 01A4  59                    1	                pop    cx 
    1776 01A5  5B                    1	                pop    bx 
    1777 01A6  58                    1	                pop    ax 
    1778				 
    1779				                CURSOR      7,25 
    1780 01A7  50                    1	                push    ax 
    1781 01A8  53                    1	                push    bx 
    1782 01A9  51                    1	                push    cx 
    1783 01AA  52                    1	                push    dx 
    1784 01AB  B6 07                 1	                mov dh, 7        ;row 
    1785 01AD  B2 19                 1	                mov dl, 25       ;colum
					n 
    1786 01AF  B7 00                 1	                mov bh, 0         ; 
    1787 01B1  B4 02                 1	                mov ah, 02h       ; 
    1788 01B3  CD 10                 1	                int 10h 
    1789 01B5  5A                    1	                pop    dx 
    1790 01B6  59                    1	                pop    cx 
    1791 01B7  5B                    1	                pop    bx 
    1792 01B8  58                    1	                pop    ax 
    1793 01B9  8D 16 0FF5 R		                lea         dx, confirm
					Exit 
    1794 01BD  E8 173A R		                call        PRINT_STR 
    1795				 
    1796				                CURSOR      [yesPos],[y
					esPos+1] 
    1797 01C0  50                    1	                push    ax 
    1798 01C1  53                    1	                push    bx 
    1799 01C2  51                    1	                push    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-42


    1800 01C3  52                    1	                push    dx 
    1801 01C4  8A 36 102E R          1	                mov dh, [yesPos]       
					 ;row 
    1802 01C8  8A 16 102F R          1	                mov dl, [yesPos+1]     
					  ;column 
    1803 01CC  B7 00                 1	                mov bh, 0         ; 
    1804 01CE  B4 02                 1	                mov ah, 02h       ; 
    1805 01D0  CD 10                 1	                int 10h 
    1806 01D2  5A                    1	                pop    dx 
    1807 01D3  59                    1	                pop    cx 
    1808 01D4  5B                    1	                pop    bx 
    1809 01D5  58                    1	                pop    ax 
    1810				                COLOUR_CHAR 0, 00001111
					b, 9 
    1811 01D6  50                    1	                push    ax 
    1812 01D7  53                    1	                push    bx 
    1813 01D8  51                    1	                push    cx 
    1814 01D9  52                    1	                push    dx 
    1815 01DA  33 DB                 1	                xor     bx,bx 
    1816 01DC  B9 0009               1	                mov cx, 9 
    1817 01DF  B0 00                 1	                mov al, 0 
    1818 01E1  B3 0F                 1	                mov bl, 00001111b 
    1819 01E3  B4 09                 1	                mov ah, 09h 
    1820 01E5  CD 10                 1	                int 10h 
    1821 01E7  5A                    1	                pop    dx 
    1822 01E8  59                    1	                pop    cx 
    1823 01E9  5B                    1	                pop    bx 
    1824 01EA  58                    1	                pop    ax 
    1825 01EB  8D 16 1007 R		                lea         dx, yesStr 
    1826 01EF  E8 173A R		                call        PRINT_STR 
    1827				 
    1828				                CURSOR      [noPos],[no
					Pos+1] 
    1829 01F2  50                    1	                push    ax 
    1830 01F3  53                    1	                push    bx 
    1831 01F4  51                    1	                push    cx 
    1832 01F5  52                    1	                push    dx 
    1833 01F6  8A 36 1030 R          1	                mov dh, [noPos]        
					;row 
    1834 01FA  8A 16 1031 R          1	                mov dl, [noPos+1]      
					 ;column 
    1835 01FE  B7 00                 1	                mov bh, 0         ; 
    1836 0200  B4 02                 1	                mov ah, 02h       ; 
    1837 0202  CD 10                 1	                int 10h 
    1838 0204  5A                    1	                pop    dx 
    1839 0205  59                    1	                pop    cx 
    1840 0206  5B                    1	                pop    bx 
    1841 0207  58                    1	                pop    ax 
    1842 0208  8D 16 1011 R		                lea         dx, noStr 
    1843 020C  E8 173A R		                call        PRINT_STR 
    1844				 
    1845				                CURSOR      [yesPos],[y
					esPos+1] 
    1846 020F  50                    1	                push    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-43


    1847 0210  53                    1	                push    bx 
    1848 0211  51                    1	                push    cx 
    1849 0212  52                    1	                push    dx 
    1850 0213  8A 36 102E R          1	                mov dh, [yesPos]       
					 ;row 
    1851 0217  8A 16 102F R          1	                mov dl, [yesPos+1]     
					  ;column 
    1852 021B  B7 00                 1	                mov bh, 0         ; 
    1853 021D  B4 02                 1	                mov ah, 02h       ; 
    1854 021F  CD 10                 1	                int 10h 
    1855 0221  5A                    1	                pop    dx 
    1856 0222  59                    1	                pop    cx 
    1857 0223  5B                    1	                pop    bx 
    1858 0224  58                    1	                pop    ax 
    1859				 
    1860 0225				                exitSelectionLoop: 
    1861 0225  B4 07			                            mov        
					 ah, 07h 
    1862 0227  CD 21			                            int        
					 21h 
    1863				 
    1864 0229  3C 61			                            cmp        
					 al, "a" 
    1865 022B  74 0B			                            je         
					 exitSelectionLeft 
    1866				 
    1867 022D  3C 64			                            cmp        
					 al, "d" 
    1868 022F  74 72			                            je         
					 exitSelectionRight 
    1869				 
    1870 0231  3C 0D			                            cmp        
					 al  ,13d 
    1871 0233  75 F0			                            jne        
					 exitSelectionLoop 
    1872 0235  E9 030F R		                            jmp        
					 exitSelectionLoopExit 
    1873				 
    1874 0238				                            exitSelecti
					onLeft: 
    1875 0238  C6 06 1019 R 01		                                       
					 mov         [exitSel] , 1 
    1876				 
    1877				                                       
					 CURSOR      [yesPos],[yesPos+1] 
    1878 023D  50                    1	                push    ax 
    1879 023E  53                    1	                push    bx 
    1880 023F  51                    1	                push    cx 
    1881 0240  52                    1	                push    dx 
    1882 0241  8A 36 102E R          1	                mov dh, [yesPos]       
					 ;row 
    1883 0245  8A 16 102F R          1	                mov dl, [yesPos+1]     
					  ;column 
    1884 0249  B7 00                 1	                mov bh, 0         ; 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-44


    1885 024B  B4 02                 1	                mov ah, 02h       ; 
    1886 024D  CD 10                 1	                int 10h 
    1887 024F  5A                    1	                pop    dx 
    1888 0250  59                    1	                pop    cx 
    1889 0251  5B                    1	                pop    bx 
    1890 0252  58                    1	                pop    ax 
    1891				                                       
					 COLOUR_CHAR 0, 00001111b, 9 
    1892 0253  50                    1	                push    ax 
    1893 0254  53                    1	                push    bx 
    1894 0255  51                    1	                push    cx 
    1895 0256  52                    1	                push    dx 
    1896 0257  33 DB                 1	                xor     bx,bx 
    1897 0259  B9 0009               1	                mov cx, 9 
    1898 025C  B0 00                 1	                mov al, 0 
    1899 025E  B3 0F                 1	                mov bl, 00001111b 
    1900 0260  B4 09                 1	                mov ah, 09h 
    1901 0262  CD 10                 1	                int 10h 
    1902 0264  5A                    1	                pop    dx 
    1903 0265  59                    1	                pop    cx 
    1904 0266  5B                    1	                pop    bx 
    1905 0267  58                    1	                pop    ax 
    1906				 
    1907 0268  8D 16 1007 R		                                       
					 lea         dx, yesStr 
    1908 026C  E8 173A R		                                       
					 call        PRINT_STR 
    1909				 
    1910				                                       
					 CURSOR      [noPos],[noPos+1] 
    1911 026F  50                    1	                push    ax 
    1912 0270  53                    1	                push    bx 
    1913 0271  51                    1	                push    cx 
    1914 0272  52                    1	                push    dx 
    1915 0273  8A 36 1030 R          1	                mov dh, [noPos]        
					;row 
    1916 0277  8A 16 1031 R          1	                mov dl, [noPos+1]      
					 ;column 
    1917 027B  B7 00                 1	                mov bh, 0         ; 
    1918 027D  B4 02                 1	                mov ah, 02h       ; 
    1919 027F  CD 10                 1	                int 10h 
    1920 0281  5A                    1	                pop    dx 
    1921 0282  59                    1	                pop    cx 
    1922 0283  5B                    1	                pop    bx 
    1923 0284  58                    1	                pop    ax 
    1924				                                       
					 COLOUR_CHAR 0, 01110000b, 7 
    1925 0285  50                    1	                push    ax 
    1926 0286  53                    1	                push    bx 
    1927 0287  51                    1	                push    cx 
    1928 0288  52                    1	                push    dx 
    1929 0289  33 DB                 1	                xor     bx,bx 
    1930 028B  B9 0007               1	                mov cx, 7 
    1931 028E  B0 00                 1	                mov al, 0 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-45


    1932 0290  B3 70                 1	                mov bl, 01110000b 
    1933 0292  B4 09                 1	                mov ah, 09h 
    1934 0294  CD 10                 1	                int 10h 
    1935 0296  5A                    1	                pop    dx 
    1936 0297  59                    1	                pop    cx 
    1937 0298  5B                    1	                pop    bx 
    1938 0299  58                    1	                pop    ax 
    1939				 
    1940 029A  8D 16 1011 R		                                       
					 lea         dx, noStr 
    1941 029E  E8 173A R		                                       
					 call        PRINT_STR 
    1942				 
    1943 02A1  EB 82			                                       
					 jmp         exitSelectionLoop 
    1944				 
    1945 02A3				                            exitSelecti
					onRight: 
    1946 02A3  C6 06 1019 R 02		                                       
					 mov         [exitSel] , 2 
    1947				 
    1948				                                       
					 CURSOR      [noPos],[noPos+1] 
    1949 02A8  50                    1	                push    ax 
    1950 02A9  53                    1	                push    bx 
    1951 02AA  51                    1	                push    cx 
    1952 02AB  52                    1	                push    dx 
    1953 02AC  8A 36 1030 R          1	                mov dh, [noPos]        
					;row 
    1954 02B0  8A 16 1031 R          1	                mov dl, [noPos+1]      
					 ;column 
    1955 02B4  B7 00                 1	                mov bh, 0         ; 
    1956 02B6  B4 02                 1	                mov ah, 02h       ; 
    1957 02B8  CD 10                 1	                int 10h 
    1958 02BA  5A                    1	                pop    dx 
    1959 02BB  59                    1	                pop    cx 
    1960 02BC  5B                    1	                pop    bx 
    1961 02BD  58                    1	                pop    ax 
    1962				                                       
					 COLOUR_CHAR 0, 00001111b, 7 
    1963 02BE  50                    1	                push    ax 
    1964 02BF  53                    1	                push    bx 
    1965 02C0  51                    1	                push    cx 
    1966 02C1  52                    1	                push    dx 
    1967 02C2  33 DB                 1	                xor     bx,bx 
    1968 02C4  B9 0007               1	                mov cx, 7 
    1969 02C7  B0 00                 1	                mov al, 0 
    1970 02C9  B3 0F                 1	                mov bl, 00001111b 
    1971 02CB  B4 09                 1	                mov ah, 09h 
    1972 02CD  CD 10                 1	                int 10h 
    1973 02CF  5A                    1	                pop    dx 
    1974 02D0  59                    1	                pop    cx 
    1975 02D1  5B                    1	                pop    bx 
    1976 02D2  58                    1	                pop    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-46


    1977				 
    1978				 
    1979 02D3  8D 16 1011 R		                                       
					 lea         dx, noStr 
    1980 02D7  E8 173A R		                                       
					 call        PRINT_STR 
    1981				 
    1982				                                       
					 CURSOR      [yesPos],[yesPos+1] 
    1983 02DA  50                    1	                push    ax 
    1984 02DB  53                    1	                push    bx 
    1985 02DC  51                    1	                push    cx 
    1986 02DD  52                    1	                push    dx 
    1987 02DE  8A 36 102E R          1	                mov dh, [yesPos]       
					 ;row 
    1988 02E2  8A 16 102F R          1	                mov dl, [yesPos+1]     
					  ;column 
    1989 02E6  B7 00                 1	                mov bh, 0         ; 
    1990 02E8  B4 02                 1	                mov ah, 02h       ; 
    1991 02EA  CD 10                 1	                int 10h 
    1992 02EC  5A                    1	                pop    dx 
    1993 02ED  59                    1	                pop    cx 
    1994 02EE  5B                    1	                pop    bx 
    1995 02EF  58                    1	                pop    ax 
    1996				                                       
					 COLOUR_CHAR 0, 01110000b, 9 
    1997 02F0  50                    1	                push    ax 
    1998 02F1  53                    1	                push    bx 
    1999 02F2  51                    1	                push    cx 
    2000 02F3  52                    1	                push    dx 
    2001 02F4  33 DB                 1	                xor     bx,bx 
    2002 02F6  B9 0009               1	                mov cx, 9 
    2003 02F9  B0 00                 1	                mov al, 0 
    2004 02FB  B3 70                 1	                mov bl, 01110000b 
    2005 02FD  B4 09                 1	                mov ah, 09h 
    2006 02FF  CD 10                 1	                int 10h 
    2007 0301  5A                    1	                pop    dx 
    2008 0302  59                    1	                pop    cx 
    2009 0303  5B                    1	                pop    bx 
    2010 0304  58                    1	                pop    ax 
    2011				 
    2012				 
    2013 0305  8D 16 1007 R		                                       
					 lea         dx, yesStr 
    2014 0309  E8 173A R		                                       
					 call        PRINT_STR 
    2015				 
    2016 030C  E9 0225 R		                                       
					 jmp         exitSelectionLoop 
    2017 030F				                exitSelectionLoopExit: 
    2018 030F  C3			                ret 
    2019				 
    2020 0310				EXIT            ENDP 
    2021				 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-47


    2022 0310				MENU            PROC 
    2023				     
    2024				                CURSOR      0,  0 
    2025 0310  50                    1	                push    ax 
    2026 0311  53                    1	                push    bx 
    2027 0312  51                    1	                push    cx 
    2028 0313  52                    1	                push    dx 
    2029 0314  B6 00                 1	                mov dh, 0        ;row 
    2030 0316  B2 00                 1	                mov dl, 0       ;column
					 
    2031 0318  B7 00                 1	                mov bh, 0         ; 
    2032 031A  B4 02                 1	                mov ah, 02h       ; 
    2033 031C  CD 10                 1	                int 10h 
    2034 031E  5A                    1	                pop    dx 
    2035 031F  59                    1	                pop    cx 
    2036 0320  5B                    1	                pop    bx 
    2037 0321  58                    1	                pop    ax 
    2038				                COLOUR_CHAR 0,  0000101
					1b,  240d 
    2039 0322  50                    1	                push    ax 
    2040 0323  53                    1	                push    bx 
    2041 0324  51                    1	                push    cx 
    2042 0325  52                    1	                push    dx 
    2043 0326  33 DB                 1	                xor     bx,bx 
    2044 0328  B9 00F0               1	                mov cx, 240d 
    2045 032B  B0 00                 1	                mov al, 0 
    2046 032D  B3 0B                 1	                mov bl, 00001011b 
    2047 032F  B4 09                 1	                mov ah, 09h 
    2048 0331  CD 10                 1	                int 10h 
    2049 0333  5A                    1	                pop    dx 
    2050 0334  59                    1	                pop    cx 
    2051 0335  5B                    1	                pop    bx 
    2052 0336  58                    1	                pop    ax 
    2053 0337  8D 16 0A26 R		                lea         dx  ,menuHe
					ader 
    2054 033B  E8 173A R		                call        PRINT_STR 
    2055				 
    2056				                CURSOR      4,  0 
    2057 033E  50                    1	                push    ax 
    2058 033F  53                    1	                push    bx 
    2059 0340  51                    1	                push    cx 
    2060 0341  52                    1	                push    dx 
    2061 0342  B6 04                 1	                mov dh, 4        ;row 
    2062 0344  B2 00                 1	                mov dl, 0       ;column
					 
    2063 0346  B7 00                 1	                mov bh, 0         ; 
    2064 0348  B4 02                 1	                mov ah, 02h       ; 
    2065 034A  CD 10                 1	                int 10h 
    2066 034C  5A                    1	                pop    dx 
    2067 034D  59                    1	                pop    cx 
    2068 034E  5B                    1	                pop    bx 
    2069 034F  58                    1	                pop    ax 
    2070 0350  8D 16 0AD1 R		                lea         dx  ,divide
					r 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-48


    2071 0354  E8 173A R		                call        PRINT_STR 
    2072				 
    2073				                CURSOR      5,  0 
    2074 0357  50                    1	                push    ax 
    2075 0358  53                    1	                push    bx 
    2076 0359  51                    1	                push    cx 
    2077 035A  52                    1	                push    dx 
    2078 035B  B6 05                 1	                mov dh, 5        ;row 
    2079 035D  B2 00                 1	                mov dl, 0       ;column
					 
    2080 035F  B7 00                 1	                mov bh, 0         ; 
    2081 0361  B4 02                 1	                mov ah, 02h       ; 
    2082 0363  CD 10                 1	                int 10h 
    2083 0365  5A                    1	                pop    dx 
    2084 0366  59                    1	                pop    cx 
    2085 0367  5B                    1	                pop    bx 
    2086 0368  58                    1	                pop    ax 
    2087				                COLOUR_CHAR 0,  0000110
					1b,  1600d 
    2088 0369  50                    1	                push    ax 
    2089 036A  53                    1	                push    bx 
    2090 036B  51                    1	                push    cx 
    2091 036C  52                    1	                push    dx 
    2092 036D  33 DB                 1	                xor     bx,bx 
    2093 036F  B9 0640               1	                mov cx, 1600d 
    2094 0372  B0 00                 1	                mov al, 0 
    2095 0374  B3 0D                 1	                mov bl, 00001101b 
    2096 0376  B4 09                 1	                mov ah, 09h 
    2097 0378  CD 10                 1	                int 10h 
    2098 037A  5A                    1	                pop    dx 
    2099 037B  59                    1	                pop    cx 
    2100 037C  5B                    1	                pop    bx 
    2101 037D  58                    1	                pop    ax 
    2102 037E  8D 16 0B22 R		                lea         dx  ,menuBo
					rder 
    2103 0382  E8 173A R		                call        PRINT_STR 
    2104				 
    2105				                CURSOR      9,15 
    2106 0385  50                    1	                push    ax 
    2107 0386  53                    1	                push    bx 
    2108 0387  51                    1	                push    cx 
    2109 0388  52                    1	                push    dx 
    2110 0389  B6 09                 1	                mov dh, 9        ;row 
    2111 038B  B2 0F                 1	                mov dl, 15       ;colum
					n 
    2112 038D  B7 00                 1	                mov bh, 0         ; 
    2113 038F  B4 02                 1	                mov ah, 02h       ; 
    2114 0391  CD 10                 1	                int 10h 
    2115 0393  5A                    1	                pop    dx 
    2116 0394  59                    1	                pop    cx 
    2117 0395  5B                    1	                pop    bx 
    2118 0396  58                    1	                pop    ax 
    2119				                COLOUR_CHAR 0,  0000101
					0b,  30d 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-49


    2120 0397  50                    1	                push    ax 
    2121 0398  53                    1	                push    bx 
    2122 0399  51                    1	                push    cx 
    2123 039A  52                    1	                push    dx 
    2124 039B  33 DB                 1	                xor     bx,bx 
    2125 039D  B9 001E               1	                mov cx, 30d 
    2126 03A0  B0 00                 1	                mov al, 0 
    2127 03A2  B3 0A                 1	                mov bl, 00001010b 
    2128 03A4  B4 09                 1	                mov ah, 09h 
    2129 03A6  CD 10                 1	                int 10h 
    2130 03A8  5A                    1	                pop    dx 
    2131 03A9  59                    1	                pop    cx 
    2132 03AA  5B                    1	                pop    bx 
    2133 03AB  58                    1	                pop    ax 
    2134 03AC  8D 16 0F7F R		                lea         dx  ,menuSe
					lections 
    2135 03B0  E8 173A R		                call        PRINT_STR 
    2136				 
    2137				                CURSOR      12,15 
    2138 03B3  50                    1	                push    ax 
    2139 03B4  53                    1	                push    bx 
    2140 03B5  51                    1	                push    cx 
    2141 03B6  52                    1	                push    dx 
    2142 03B7  B6 0C                 1	                mov dh, 12        ;row 
    2143 03B9  B2 0F                 1	                mov dl, 15       ;colum
					n 
    2144 03BB  B7 00                 1	                mov bh, 0         ; 
    2145 03BD  B4 02                 1	                mov ah, 02h       ; 
    2146 03BF  CD 10                 1	                int 10h 
    2147 03C1  5A                    1	                pop    dx 
    2148 03C2  59                    1	                pop    cx 
    2149 03C3  5B                    1	                pop    bx 
    2150 03C4  58                    1	                pop    ax 
    2151				                COLOUR_CHAR 0,  0000101
					0b,  30d 
    2152 03C5  50                    1	                push    ax 
    2153 03C6  53                    1	                push    bx 
    2154 03C7  51                    1	                push    cx 
    2155 03C8  52                    1	                push    dx 
    2156 03C9  33 DB                 1	                xor     bx,bx 
    2157 03CB  B9 001E               1	                mov cx, 30d 
    2158 03CE  B0 00                 1	                mov al, 0 
    2159 03D0  B3 0A                 1	                mov bl, 00001010b 
    2160 03D2  B4 09                 1	                mov ah, 09h 
    2161 03D4  CD 10                 1	                int 10h 
    2162 03D6  5A                    1	                pop    dx 
    2163 03D7  59                    1	                pop    cx 
    2164 03D8  5B                    1	                pop    bx 
    2165 03D9  58                    1	                pop    ax 
    2166 03DA  8D 16 0F93 R		                lea         dx  ,menuSe
					lections+20 
    2167 03DE  E8 173A R		                call        PRINT_STR 
    2168				 
    2169				                CURSOR      15,15 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-50


    2170 03E1  50                    1	                push    ax 
    2171 03E2  53                    1	                push    bx 
    2172 03E3  51                    1	                push    cx 
    2173 03E4  52                    1	                push    dx 
    2174 03E5  B6 0F                 1	                mov dh, 15        ;row 
    2175 03E7  B2 0F                 1	                mov dl, 15       ;colum
					n 
    2176 03E9  B7 00                 1	                mov bh, 0         ; 
    2177 03EB  B4 02                 1	                mov ah, 02h       ; 
    2178 03ED  CD 10                 1	                int 10h 
    2179 03EF  5A                    1	                pop    dx 
    2180 03F0  59                    1	                pop    cx 
    2181 03F1  5B                    1	                pop    bx 
    2182 03F2  58                    1	                pop    ax 
    2183				                COLOUR_CHAR 0,  0000101
					0b,  30d 
    2184 03F3  50                    1	                push    ax 
    2185 03F4  53                    1	                push    bx 
    2186 03F5  51                    1	                push    cx 
    2187 03F6  52                    1	                push    dx 
    2188 03F7  33 DB                 1	                xor     bx,bx 
    2189 03F9  B9 001E               1	                mov cx, 30d 
    2190 03FC  B0 00                 1	                mov al, 0 
    2191 03FE  B3 0A                 1	                mov bl, 00001010b 
    2192 0400  B4 09                 1	                mov ah, 09h 
    2193 0402  CD 10                 1	                int 10h 
    2194 0404  5A                    1	                pop    dx 
    2195 0405  59                    1	                pop    cx 
    2196 0406  5B                    1	                pop    bx 
    2197 0407  58                    1	                pop    ax 
    2198 0408  8D 16 0FA7 R		                lea         dx  ,menuSe
					lections+40 
    2199 040C  E8 173A R		                call        PRINT_STR 
    2200				 
    2201				                CURSOR      23,0 
    2202 040F  50                    1	                push    ax 
    2203 0410  53                    1	                push    bx 
    2204 0411  51                    1	                push    cx 
    2205 0412  52                    1	                push    dx 
    2206 0413  B6 17                 1	                mov dh, 23        ;row 
    2207 0415  B2 00                 1	                mov dl, 0       ;column
					 
    2208 0417  B7 00                 1	                mov bh, 0         ; 
    2209 0419  B4 02                 1	                mov ah, 02h       ; 
    2210 041B  CD 10                 1	                int 10h 
    2211 041D  5A                    1	                pop    dx 
    2212 041E  59                    1	                pop    cx 
    2213 041F  5B                    1	                pop    bx 
    2214 0420  58                    1	                pop    ax 
    2215				                COLOUR_CHAR 0,  1000111
					1b,  80d 
    2216 0421  50                    1	                push    ax 
    2217 0422  53                    1	                push    bx 
    2218 0423  51                    1	                push    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-51


    2219 0424  52                    1	                push    dx 
    2220 0425  33 DB                 1	                xor     bx,bx 
    2221 0427  B9 0050               1	                mov cx, 80d 
    2222 042A  B0 00                 1	                mov al, 0 
    2223 042C  B3 8F                 1	                mov bl, 10001111b 
    2224 042E  B4 09                 1	                mov ah, 09h 
    2225 0430  CD 10                 1	                int 10h 
    2226 0432  5A                    1	                pop    dx 
    2227 0433  59                    1	                pop    cx 
    2228 0434  5B                    1	                pop    bx 
    2229 0435  58                    1	                pop    ax 
    2230 0436  8D 16 0FBB R		                lea         dx, menuInp
					utTip 
    2231 043A  E8 173A R		                call        PRINT_STR 
    2232				 
    2233				                ;menu selection code 
    2234 043D  C6 06 0FF4 R 01		                mov         [currentSel
					],1 
    2235				 
    2236 0442  B9 0009			                mov         cx, 9d 
    2237				                CURSOR      cl, 35 
    2238 0445  50                    1	                push    ax 
    2239 0446  53                    1	                push    bx 
    2240 0447  51                    1	                push    cx 
    2241 0448  52                    1	                push    dx 
    2242 0449  8A F1                 1	                mov dh, cl        ;row 
    2243 044B  B2 23                 1	                mov dl, 35       ;colum
					n 
    2244 044D  B7 00                 1	                mov bh, 0         ; 
    2245 044F  B4 02                 1	                mov ah, 02h       ; 
    2246 0451  CD 10                 1	                int 10h 
    2247 0453  5A                    1	                pop    dx 
    2248 0454  59                    1	                pop    cx 
    2249 0455  5B                    1	                pop    bx 
    2250 0456  58                    1	                pop    ax 
    2251 0457				                selectionLoop: 
    2252 0457  52			                            push       
					 dx 
    2253 0458  B2 20			                            mov        
					 dl, " " 
    2254 045A  E8 17CB R		                            call       
					 PRINT_CHAR          ;clear current sel
					ection arrow 
    2255 045D  5A			                            pop        
					 dx 
    2256				 
    2257				                            CURSOR     
					 cl  ,35 
    2258 045E  50                    1	                push    ax 
    2259 045F  53                    1	                push    bx 
    2260 0460  51                    1	                push    cx 
    2261 0461  52                    1	                push    dx 
    2262 0462  8A F1                 1	                mov dh, cl        ;row 
    2263 0464  B2 23                 1	                mov dl, 35       ;colum
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-52


					n 
    2264 0466  B7 00                 1	                mov bh, 0         ; 
    2265 0468  B4 02                 1	                mov ah, 02h       ; 
    2266 046A  CD 10                 1	                int 10h 
    2267 046C  5A                    1	                pop    dx 
    2268 046D  59                    1	                pop    cx 
    2269 046E  5B                    1	                pop    bx 
    2270 046F  58                    1	                pop    ax 
    2271				                            COLOUR_CHAR
					 17d ,00001100b,1    ;print arrow symbo
					l once 
    2272 0470  50                    1	                push    ax 
    2273 0471  53                    1	                push    bx 
    2274 0472  51                    1	                push    cx 
    2275 0473  52                    1	                push    dx 
    2276 0474  33 DB                 1	                xor     bx,bx 
    2277 0476  B9 0001               1	                mov cx, 1 
    2278 0479  B0 11                 1	                mov al, 17d 
    2279 047B  B3 0C                 1	                mov bl, 00001100b 
    2280 047D  B4 09                 1	                mov ah, 09h 
    2281 047F  CD 10                 1	                int 10h 
    2282 0481  5A                    1	                pop    dx 
    2283 0482  59                    1	                pop    cx 
    2284 0483  5B                    1	                pop    bx 
    2285 0484  58                    1	                pop    ax 
    2286				 
    2287 0485  B4 07			                            mov        
					 ah  ,07h 
    2288 0487  CD 21			                            int        
					 21h 
    2289				 
    2290 0489  3C 77			                            cmp        
					 al, "w"             ;up 
    2291 048B  74 0B			                            je         
					 selectionUp 
    2292				 
    2293 048D  3C 73			                            cmp        
					 al, "s"             ;down 
    2294 048F  74 13			                            je         
					 selectionDown           
    2295				 
    2296 0491  3C 0D			                            cmp        
					 al  ,13d 
    2297 0493  75 C2			                            jne        
					 selectionLoop 
    2298				 
    2299 0495  EB 33 90			                            jmp        
					 selectionLoopExit 
    2300				 
    2301 0498				                            selectionUp
					: 
    2302 0498  B3 01			                                       
					 mov         bl, 1 
    2303 049A  8A 3E 0FF4 R		                                       
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-53


					 mov         bh, [currentSel]        ;o
					nly move up if current selection is lar
					ger than 1 
    2304 049E  3A FB			                                       
					 cmp         bh, bl 
    2305 04A0  77 0E			                                       
					 ja          selectionMoveUp 
    2306 04A2  EB B3			                                       
					 jmp         selectionLoop 
    2307				 
    2308 04A4				                            selectionDo
					wn: 
    2309 04A4  B3 03			                                       
					 mov         bl, maxSel 
    2310 04A6  8A 3E 0FF4 R		                                       
					 mov         bh, [currentSel]        ;o
					nly move down if current selection is s
					maller than max
    2311 04AA  3A FB			                                       
					 cmp         bh, bl 
    2312 04AC  72 0F			                                       
					 jb          selectionMoveDown 
    2313 04AE  EB A7			                                       
					 jmp         selectionLoop 
    2314				 
    2315 04B0				                            selectionMo
					veUp: 
    2316 04B0  FE CF			                                       
					 dec         bh 
    2317 04B2  88 3E 0FF4 R		                                       
					 mov         [currentSel],bh 
    2318 04B6  B0 06			                                       
					 mov         al, 06d 
    2319				                                       
					  
    2320 04B8  83 E9 03			                                       
					 sub         cx,3                    ;c
					x track row of cursor, add 3 to move do
					wn one part 
    2321				 
    2322 04BB  EB 9A			                                       
					 jmp         selectionLoop 
    2323				 
    2324 04BD				                            selectionMo
					veDown: 
    2325 04BD  FE C7			                                       
					 inc         bh 
    2326 04BF  88 3E 0FF4 R		                                       
					 mov         [currentSel],bh 
    2327 04C3  B0 06			                                       
					 mov         al, 06d 
    2328				 
    2329 04C5  83 C1 03			                                       
					 add         cx,3                    ;c
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-54


					x track row of cursor, sub 3 to move up
					 one part 
    2330				 
    2331 04C8  EB 8D			                                       
					 jmp         selectionLoop 
    2332 04CA				                selectionLoopExit: 
    2333				 
    2334 04CA  C3			                ret 
    2335 04CB				MENU            ENDP 
    2336				 
    2337 04CB				LOGIN_INPUT     PROC                   
					          
    2338				                            CURSOR     
					 12, 0 
    2339 04CB  50                    1	                push    ax 
    2340 04CC  53                    1	                push    bx 
    2341 04CD  51                    1	                push    cx 
    2342 04CE  52                    1	                push    dx 
    2343 04CF  B6 0C                 1	                mov dh, 12        ;row 
    2344 04D1  B2 00                 1	                mov dl, 0       ;column
					 
    2345 04D3  B7 00                 1	                mov bh, 0         ; 
    2346 04D5  B4 02                 1	                mov ah, 02h       ; 
    2347 04D7  CD 10                 1	                int 10h 
    2348 04D9  5A                    1	                pop    dx 
    2349 04DA  59                    1	                pop    cx 
    2350 04DB  5B                    1	                pop    bx 
    2351 04DC  58                    1	                pop    ax 
    2352				                            COLOUR_CHAR
					 0,  00001110b,  400d 
    2353 04DD  50                    1	                push    ax 
    2354 04DE  53                    1	                push    bx 
    2355 04DF  51                    1	                push    cx 
    2356 04E0  52                    1	                push    dx 
    2357 04E1  33 DB                 1	                xor     bx,bx 
    2358 04E3  B9 0190               1	                mov cx, 400d 
    2359 04E6  B0 00                 1	                mov al, 0 
    2360 04E8  B3 0E                 1	                mov bl, 00001110b 
    2361 04EA  B4 09                 1	                mov ah, 09h 
    2362 04EC  CD 10                 1	                int 10h 
    2363 04EE  5A                    1	                pop    dx 
    2364 04EF  59                    1	                pop    cx 
    2365 04F0  5B                    1	                pop    bx 
    2366 04F1  58                    1	                pop    ax 
    2367				                             
    2368 04F2  8D 16 036D R		                            lea        
					 dx, loginBorder 
    2369 04F6  E8 173A R		                            call       
					 PRINT_STR 
    2370				 
    2371				                            CURSOR     
					 13  ,20 
    2372 04F9  50                    1	                push    ax 
    2373 04FA  53                    1	                push    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-55


    2374 04FB  51                    1	                push    cx 
    2375 04FC  52                    1	                push    dx 
    2376 04FD  B6 0D                 1	                mov dh, 13        ;row 
    2377 04FF  B2 14                 1	                mov dl, 20       ;colum
					n 
    2378 0501  B7 00                 1	                mov bh, 0         ; 
    2379 0503  B4 02                 1	                mov ah, 02h       ; 
    2380 0505  CD 10                 1	                int 10h 
    2381 0507  5A                    1	                pop    dx 
    2382 0508  59                    1	                pop    cx 
    2383 0509  5B                    1	                pop    bx 
    2384 050A  58                    1	                pop    ax 
    2385				                            COLOUR_CHAR
					 0,  00001111b, 39d 
    2386 050B  50                    1	                push    ax 
    2387 050C  53                    1	                push    bx 
    2388 050D  51                    1	                push    cx 
    2389 050E  52                    1	                push    dx 
    2390 050F  33 DB                 1	                xor     bx,bx 
    2391 0511  B9 0027               1	                mov cx, 39d 
    2392 0514  B0 00                 1	                mov al, 0 
    2393 0516  B3 0F                 1	                mov bl, 00001111b 
    2394 0518  B4 09                 1	                mov ah, 09h 
    2395 051A  CD 10                 1	                int 10h 
    2396 051C  5A                    1	                pop    dx 
    2397 051D  59                    1	                pop    cx 
    2398 051E  5B                    1	                pop    bx 
    2399 051F  58                    1	                pop    ax 
    2400 0520  8D 16 049E R		                            lea        
					 dx  ,promptUsername 
    2401 0524  E8 173A R		                            call       
					 PRINT_STR 
    2402				 
    2403				                            CURSOR     
					 15  ,20 
    2404 0527  50                    1	                push    ax 
    2405 0528  53                    1	                push    bx 
    2406 0529  51                    1	                push    cx 
    2407 052A  52                    1	                push    dx 
    2408 052B  B6 0F                 1	                mov dh, 15        ;row 
    2409 052D  B2 14                 1	                mov dl, 20       ;colum
					n 
    2410 052F  B7 00                 1	                mov bh, 0         ; 
    2411 0531  B4 02                 1	                mov ah, 02h       ; 
    2412 0533  CD 10                 1	                int 10h 
    2413 0535  5A                    1	                pop    dx 
    2414 0536  59                    1	                pop    cx 
    2415 0537  5B                    1	                pop    bx 
    2416 0538  58                    1	                pop    ax 
    2417				                            COLOUR_CHAR
					 0,  00001111b, 39d 
    2418 0539  50                    1	                push    ax 
    2419 053A  53                    1	                push    bx 
    2420 053B  51                    1	                push    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-56


    2421 053C  52                    1	                push    dx 
    2422 053D  33 DB                 1	                xor     bx,bx 
    2423 053F  B9 0027               1	                mov cx, 39d 
    2424 0542  B0 00                 1	                mov al, 0 
    2425 0544  B3 0F                 1	                mov bl, 00001111b 
    2426 0546  B4 09                 1	                mov ah, 09h 
    2427 0548  CD 10                 1	                int 10h 
    2428 054A  5A                    1	                pop    dx 
    2429 054B  59                    1	                pop    cx 
    2430 054C  5B                    1	                pop    bx 
    2431 054D  58                    1	                pop    ax 
    2432				 
    2433 054E  8D 16 04A9 R		                            lea        
					 dx  ,promptPassword 
    2434 0552  E8 173A R		                            call       
					 PRINT_STR 
    2435				 
    2436				                            ;set cursor
					 to username:  
    2437				                            CURSOR     
					 13  ,30 
    2438 0555  50                    1	                push    ax 
    2439 0556  53                    1	                push    bx 
    2440 0557  51                    1	                push    cx 
    2441 0558  52                    1	                push    dx 
    2442 0559  B6 0D                 1	                mov dh, 13        ;row 
    2443 055B  B2 1E                 1	                mov dl, 30       ;colum
					n 
    2444 055D  B7 00                 1	                mov bh, 0         ; 
    2445 055F  B4 02                 1	                mov ah, 02h       ; 
    2446 0561  CD 10                 1	                int 10h 
    2447 0563  5A                    1	                pop    dx 
    2448 0564  59                    1	                pop    cx 
    2449 0565  5B                    1	                pop    bx 
    2450 0566  58                    1	                pop    ax 
    2451 0567  8D 3E 051B R		                            lea        
					 di  ,inputUsername 
    2452 056B  E8 1762 R		                            call       
					 input_str               ;write to DI 
    2453				 
    2454				                            ;set cursor
					 to password:  
    2455				                            CURSOR     
					 15  ,30 
    2456 056E  50                    1	                push    ax 
    2457 056F  53                    1	                push    bx 
    2458 0570  51                    1	                push    cx 
    2459 0571  52                    1	                push    dx 
    2460 0572  B6 0F                 1	                mov dh, 15        ;row 
    2461 0574  B2 1E                 1	                mov dl, 30       ;colum
					n 
    2462 0576  B7 00                 1	                mov bh, 0         ; 
    2463 0578  B4 02                 1	                mov ah, 02h       ; 
    2464 057A  CD 10                 1	                int 10h 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-57


    2465 057C  5A                    1	                pop    dx 
    2466 057D  59                    1	                pop    cx 
    2467 057E  5B                    1	                pop    bx 
    2468 057F  58                    1	                pop    ax 
    2469 0580  8D 3E 0525 R		                            lea        
					 di  ,inputPassword 
    2470 0584  E8 1796 R		                            call       
					 SECRET_INPUT            ;write to DI (
					input hidden) 
    2471 0587  C3			                            ret 
    2472 0588				LOGIN_INPUT     ENDP 
    2473				 
    2474 0588				LOGIN_CHECK     PROC 
    2475 0588  B9 0001			                            mov        
					 cx  ,1 
    2476 058B  8D 36 051B R		                            lea        
					 si  ,inputUsername 
    2477 058F  8D 3E 0244 R		                            lea        
					 di  ,loginInfo 
    2478				 
    2479				                            CURSOR     
					 19, 0 
    2480 0593  50                    1	                push    ax 
    2481 0594  53                    1	                push    bx 
    2482 0595  51                    1	                push    cx 
    2483 0596  52                    1	                push    dx 
    2484 0597  B6 13                 1	                mov dh, 19        ;row 
    2485 0599  B2 00                 1	                mov dl, 0       ;column
					 
    2486 059B  B7 00                 1	                mov bh, 0         ; 
    2487 059D  B4 02                 1	                mov ah, 02h       ; 
    2488 059F  CD 10                 1	                int 10h 
    2489 05A1  5A                    1	                pop    dx 
    2490 05A2  59                    1	                pop    cx 
    2491 05A3  5B                    1	                pop    bx 
    2492 05A4  58                    1	                pop    ax 
    2493				                            COLOUR_CHAR
					 0,  10001100b, 80d 
    2494 05A5  50                    1	                push    ax 
    2495 05A6  53                    1	                push    bx 
    2496 05A7  51                    1	                push    cx 
    2497 05A8  52                    1	                push    dx 
    2498 05A9  33 DB                 1	                xor     bx,bx 
    2499 05AB  B9 0050               1	                mov cx, 80d 
    2500 05AE  B0 00                 1	                mov al, 0 
    2501 05B0  B3 8C                 1	                mov bl, 10001100b 
    2502 05B2  B4 09                 1	                mov ah, 09h 
    2503 05B4  CD 10                 1	                int 10h 
    2504 05B6  5A                    1	                pop    dx 
    2505 05B7  59                    1	                pop    cx 
    2506 05B8  5B                    1	                pop    bx 
    2507 05B9  58                    1	                pop    ax 
    2508 05BA				                            MATCH_USERN
					AME: 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-58


    2509 05BA  E8 17EA R		                                       
					 call        STRCMP              ;compa
					res string in si, di until "$" 
    2510 05BD  3D 0000			                                       
					 cmp         ax  ,0              ;if ma
					tch, go the match user password 
    2511 05C0  74 2C			                                       
					 je          MATCH_PASSWORD 
    2512				 
    2513 05C2  33 D2			                                       
					 xor         dx  ,dx 
    2514 05C4  8A 16 0243 R		                                       
					 mov         dl  ,[userNumber] 
    2515 05C8  3B CA			                                       
					 cmp         cx  ,dx                 ;i
					f number of tries more than number of u
					sers, user does
    2516 05CA  73 06			                                       
					 jae         USER_NOT_FOUND   
    2517				 
    2518 05CC  83 C7 1E			                                       
					 add         di  ,accountSize        ;o
					ffset to next user 
    2519 05CF  41			                                       
					 inc         cx                      ;n
					umber of tries inc 1 
    2520				 
    2521 05D0  EB E8			                                       
					 jmp         MATCH_USERNAME          ;f
					ind matching username 
    2522				 
    2523 05D2				                                       
					 USER_NOT_FOUND: 
    2524				                                       
					             CURSOR      19, 33 
    2525 05D2  50                    1	                push    ax 
    2526 05D3  53                    1	                push    bx 
    2527 05D4  51                    1	                push    cx 
    2528 05D5  52                    1	                push    dx 
    2529 05D6  B6 13                 1	                mov dh, 19        ;row 
    2530 05D8  B2 21                 1	                mov dl, 33       ;colum
					n 
    2531 05DA  B7 00                 1	                mov bh, 0         ; 
    2532 05DC  B4 02                 1	                mov ah, 02h       ; 
    2533 05DE  CD 10                 1	                int 10h 
    2534 05E0  5A                    1	                pop    dx 
    2535 05E1  59                    1	                pop    cx 
    2536 05E2  5B                    1	                pop    bx 
    2537 05E3  58                    1	                pop    ax 
    2538 05E4  8D 16 04B4 R		                                       
					             lea         dx  ,userNotFo
					und 
    2539 05E8  E8 173A R		                                       
					             call        PRINT_STR 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-59


    2540				 
    2541 05EB  EB 2C 90			                                       
					             jmp         LOGIN_FAIL 
    2542				 
    2543 05EE				                            MATCH_PASSW
					ORD: 
    2544 05EE  8D 36 0525 R		                                       
					 lea         si  ,inputPassword 
    2545 05F2  83 C7 0A			                                       
					 add         di  ,passwordOffset     ;o
					ffset to password region 
    2546				 
    2547 05F5  E8 17EA R		                                       
					 call        STRCMP                  ;c
					ompare input password with password of 
					found user 
    2548 05F8  3D 0000			                                       
					 cmp         ax  ,0                  ;i
					f found 
    2549 05FB  74 7D			                                       
					 je          LOGIN_SUCCESS 
    2550				 
    2551 05FD				                                       
					 PASS_NOT_FOUND: 
    2552				                                       
					             CURSOR      19, 33 
    2553 05FD  50                    1	                push    ax 
    2554 05FE  53                    1	                push    bx 
    2555 05FF  51                    1	                push    cx 
    2556 0600  52                    1	                push    dx 
    2557 0601  B6 13                 1	                mov dh, 19        ;row 
    2558 0603  B2 21                 1	                mov dl, 33       ;colum
					n 
    2559 0605  B7 00                 1	                mov bh, 0         ; 
    2560 0607  B4 02                 1	                mov ah, 02h       ; 
    2561 0609  CD 10                 1	                int 10h 
    2562 060B  5A                    1	                pop    dx 
    2563 060C  59                    1	                pop    cx 
    2564 060D  5B                    1	                pop    bx 
    2565 060E  58                    1	                pop    ax 
    2566 060F  8D 16 04C4 R		                                       
					             lea         dx  ,passWrong
					 
    2567 0613  E8 173A R		                                       
					             call        PRINT_STR 
    2568				 
    2569 0616  EB 01 90			                                       
					             jmp         LOGIN_FAIL 
    2570				 
    2571 0619				                            LOGIN_FAIL:
					 
    2572				                                       
					 CURSOR      21, 0 
    2573 0619  50                    1	                push    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-60


    2574 061A  53                    1	                push    bx 
    2575 061B  51                    1	                push    cx 
    2576 061C  52                    1	                push    dx 
    2577 061D  B6 15                 1	                mov dh, 21        ;row 
    2578 061F  B2 00                 1	                mov dl, 0       ;column
					 
    2579 0621  B7 00                 1	                mov bh, 0         ; 
    2580 0623  B4 02                 1	                mov ah, 02h       ; 
    2581 0625  CD 10                 1	                int 10h 
    2582 0627  5A                    1	                pop    dx 
    2583 0628  59                    1	                pop    cx 
    2584 0629  5B                    1	                pop    bx 
    2585 062A  58                    1	                pop    ax 
    2586				                                       
					 COLOUR_CHAR 0,  00001100b, 80d 
    2587 062B  50                    1	                push    ax 
    2588 062C  53                    1	                push    bx 
    2589 062D  51                    1	                push    cx 
    2590 062E  52                    1	                push    dx 
    2591 062F  33 DB                 1	                xor     bx,bx 
    2592 0631  B9 0050               1	                mov cx, 80d 
    2593 0634  B0 00                 1	                mov al, 0 
    2594 0636  B3 0C                 1	                mov bl, 00001100b 
    2595 0638  B4 09                 1	                mov ah, 09h 
    2596 063A  CD 10                 1	                int 10h 
    2597 063C  5A                    1	                pop    dx 
    2598 063D  59                    1	                pop    cx 
    2599 063E  5B                    1	                pop    bx 
    2600 063F  58                    1	                pop    ax 
    2601				 
    2602 0640  8A 16 0241 R		                                       
					 mov         dl  ,[loginChances]       
					  ;decrease number of chances left 
    2603 0644  FE CA			                                       
					 dec         dl 
    2604 0646  88 16 0241 R		                                       
					 mov         [loginChances],dl 
    2605				 
    2606				                                       
					 ;;print LOGIN FAILED x CHANCES LEFT 
    2607 064A  8D 16 04E5 R		                                       
					 lea         dx  ,failedLogin1 
    2608 064E  E8 173A R		                                       
					 call        PRINT_STR 
    2609				 
    2610 0651  8A 16 0241 R		                                       
					 mov         dl  ,[loginChances] 
    2611 0655  80 C2 30			                                       
					 add         dl  ,48d 
    2612 0658  E8 17CB R		                                       
					 call        PRINT_CHAR 
    2613				 
    2614 065B  8D 16 04F3 R		                                       
					 lea         dx  ,failedLogin2 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-61


    2615 065F  E8 173A R		                                       
					 call        PRINT_STR 
    2616				                                       
					 ;;------------------------------------
					------- 
    2617				 
    2618				                                       
					 CURSOR      24, 0 
    2619 0662  50                    1	                push    ax 
    2620 0663  53                    1	                push    bx 
    2621 0664  51                    1	                push    cx 
    2622 0665  52                    1	                push    dx 
    2623 0666  B6 18                 1	                mov dh, 24        ;row 
    2624 0668  B2 00                 1	                mov dl, 0       ;column
					 
    2625 066A  B7 00                 1	                mov bh, 0         ; 
    2626 066C  B4 02                 1	                mov ah, 02h       ; 
    2627 066E  CD 10                 1	                int 10h 
    2628 0670  5A                    1	                pop    dx 
    2629 0671  59                    1	                pop    cx 
    2630 0672  5B                    1	                pop    bx 
    2631 0673  58                    1	                pop    ax 
    2632 0674  E8 17DA R		                                       
					 call        ANYPAUSE 
    2633 0677  EB 49 90			                                       
					 jmp         LOGIN_EXIT 
    2634				 
    2635 067A				                            LOGIN_SUCCE
					SS: 
    2636				                                       
					 CURSOR      19, 31 
    2637 067A  50                    1	                push    ax 
    2638 067B  53                    1	                push    bx 
    2639 067C  51                    1	                push    cx 
    2640 067D  52                    1	                push    dx 
    2641 067E  B6 13                 1	                mov dh, 19        ;row 
    2642 0680  B2 1F                 1	                mov dl, 31       ;colum
					n 
    2643 0682  B7 00                 1	                mov bh, 0         ; 
    2644 0684  B4 02                 1	                mov ah, 02h       ; 
    2645 0686  CD 10                 1	                int 10h 
    2646 0688  5A                    1	                pop    dx 
    2647 0689  59                    1	                pop    cx 
    2648 068A  5B                    1	                pop    bx 
    2649 068B  58                    1	                pop    ax 
    2650				                                       
					 COLOUR_CHAR 0,  10001010b,  40d 
    2651 068C  50                    1	                push    ax 
    2652 068D  53                    1	                push    bx 
    2653 068E  51                    1	                push    cx 
    2654 068F  52                    1	                push    dx 
    2655 0690  33 DB                 1	                xor     bx,bx 
    2656 0692  B9 0028               1	                mov cx, 40d 
    2657 0695  B0 00                 1	                mov al, 0 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-62


    2658 0697  B3 8A                 1	                mov bl, 10001010b 
    2659 0699  B4 09                 1	                mov ah, 09h 
    2660 069B  CD 10                 1	                int 10h 
    2661 069D  5A                    1	                pop    dx 
    2662 069E  59                    1	                pop    cx 
    2663 069F  5B                    1	                pop    bx 
    2664 06A0  58                    1	                pop    ax 
    2665				 
    2666 06A1  8D 16 04D3 R		                                       
					 lea         dx  ,successfulLogin 
    2667 06A5  E8 173A R		                                       
					 call        PRINT_STR 
    2668				 
    2669 06A8  C6 06 0242 R 01		                                       
					 mov         [loginState],1          ;l
					ogin succesfull, set to 1 
    2670				 
    2671				                                       
					 CURSOR      24, 0 
    2672 06AD  50                    1	                push    ax 
    2673 06AE  53                    1	                push    bx 
    2674 06AF  51                    1	                push    cx 
    2675 06B0  52                    1	                push    dx 
    2676 06B1  B6 18                 1	                mov dh, 24        ;row 
    2677 06B3  B2 00                 1	                mov dl, 0       ;column
					 
    2678 06B5  B7 00                 1	                mov bh, 0         ; 
    2679 06B7  B4 02                 1	                mov ah, 02h       ; 
    2680 06B9  CD 10                 1	                int 10h 
    2681 06BB  5A                    1	                pop    dx 
    2682 06BC  59                    1	                pop    cx 
    2683 06BD  5B                    1	                pop    bx 
    2684 06BE  58                    1	                pop    ax 
    2685 06BF  E8 17DA R		                                       
					 call        ANYPAUSE 
    2686 06C2				                            LOGIN_EXIT:
					 
    2687				 
    2688				                            ;clear logi
					n input data 
    2689 06C2  56			                            push       
					 si 
    2690 06C3  51			                            push       
					 cx 
    2691 06C4  50			                            push       
					 ax 
    2692 06C5  8D 36 051B R		                            lea        
					 si, inputUsername 
    2693 06C9  B9 001E			                            mov        
					 cx, 30 
    2694 06CC				                            clearLoginI
					nput: 
    2695 06CC  B0 24			                                       
					 mov     al,     "$" 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-63


    2696 06CE  88 04			                                       
					 mov     [si],   al 
    2697 06D0  46			                                       
					 inc     si 
    2698 06D1  E2 F9			                                       
					 loop    clearLoginInput 
    2699 06D3  58			                            pop        
					 ax 
    2700 06D4  59			                            pop        
					 cx 
    2701 06D5  5E			                            pop        
					 si 
    2702 06D6  C3			                            ret 
    2703 06D7				LOGIN_CHECK     ENDP 
    2704				 
    2705 06D7				SALES           PROC 
    2706 06D7  33 C0			                            xor        
					 ax  ,ax 
    2707 06D9  33 DB			                            xor        
					 bx  ,bx 
    2708 06DB  33 C9			                            xor        
					 cx  ,cx 
    2709 06DD  33 D2			                            xor        
					 dx  ,dx 
    2710				 
    2711 06DF  33 DB			    SALES_START:            xor        
					 bx, bx 
    2712 06E1  C6 06 1032 R 01		                            mov        
					 [itemSelectionChoice], 1        ;reset
					 selection 
    2713				 
    2714 06E6  E8 1741 R		                            call       
					 cls 
    2715				                            CURSOR     
					 0,0  
    2716 06E9  50                    1	                push    ax 
    2717 06EA  53                    1	                push    bx 
    2718 06EB  51                    1	                push    cx 
    2719 06EC  52                    1	                push    dx 
    2720 06ED  B6 00                 1	                mov dh, 0        ;row 
    2721 06EF  B2 00                 1	                mov dl, 0       ;column
					 
    2722 06F1  B7 00                 1	                mov bh, 0         ; 
    2723 06F3  B4 02                 1	                mov ah, 02h       ; 
    2724 06F5  CD 10                 1	                int 10h 
    2725 06F7  5A                    1	                pop    dx 
    2726 06F8  59                    1	                pop    cx 
    2727 06F9  5B                    1	                pop    bx 
    2728 06FA  58                    1	                pop    ax 
    2729				 
    2730 06FB  8D 16 112D R		                            lea        
					 dx  ,itemSelHeader 
    2731 06FF  E8 173A R		                            call       
					 PRINT_STR 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-64


    2732				 
    2733				                            CURSOR     
					 2  ,3 
    2734 0702  50                    1	                push    ax 
    2735 0703  53                    1	                push    bx 
    2736 0704  51                    1	                push    cx 
    2737 0705  52                    1	                push    dx 
    2738 0706  B6 02                 1	                mov dh, 2        ;row 
    2739 0708  B2 03                 1	                mov dl, 3       ;column
					 
    2740 070A  B7 00                 1	                mov bh, 0         ; 
    2741 070C  B4 02                 1	                mov ah, 02h       ; 
    2742 070E  CD 10                 1	                int 10h 
    2743 0710  5A                    1	                pop    dx 
    2744 0711  59                    1	                pop    cx 
    2745 0712  5B                    1	                pop    bx 
    2746 0713  58                    1	                pop    ax 
    2747				                            COLOUR_CHAR
					 0, 00011110b, 52d 
    2748 0714  50                    1	                push    ax 
    2749 0715  53                    1	                push    bx 
    2750 0716  51                    1	                push    cx 
    2751 0717  52                    1	                push    dx 
    2752 0718  33 DB                 1	                xor     bx,bx 
    2753 071A  B9 0034               1	                mov cx, 52d 
    2754 071D  B0 00                 1	                mov al, 0 
    2755 071F  B3 1E                 1	                mov bl, 00011110b 
    2756 0721  B4 09                 1	                mov ah, 09h 
    2757 0723  CD 10                 1	                int 10h 
    2758 0725  5A                    1	                pop    dx 
    2759 0726  59                    1	                pop    cx 
    2760 0727  5B                    1	                pop    bx 
    2761 0728  58                    1	                pop    ax 
    2762 0729  8D 16 180E R		                            lea        
					 dx  ,itemHeader 
    2763 072D  E8 173A R		                            call       
					 PRINT_STR 
    2764				                             
    2765 0730  EB 03 90			                            jmp        
					 SALES_START_BREAK 
    2766 0733				                            SALES_START
					_CP: 
    2767 0733  EB AA			                                       
					 jmp         SALES_START 
    2768 0735				                            SALES_START
					_BREAK: 
    2769				 
    2770				                            CURSOR     
					 3  ,2 
    2771 0735  50                    1	                push    ax 
    2772 0736  53                    1	                push    bx 
    2773 0737  51                    1	                push    cx 
    2774 0738  52                    1	                push    dx 
    2775 0739  B6 03                 1	                mov dh, 3        ;row 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-65


    2776 073B  B2 02                 1	                mov dl, 2       ;column
					 
    2777 073D  B7 00                 1	                mov bh, 0         ; 
    2778 073F  B4 02                 1	                mov ah, 02h       ; 
    2779 0741  CD 10                 1	                int 10h 
    2780 0743  5A                    1	                pop    dx 
    2781 0744  59                    1	                pop    cx 
    2782 0745  5B                    1	                pop    bx 
    2783 0746  58                    1	                pop    ax 
    2784 0747  8D 16 1843 R		                            lea        
					 dx  ,itemSelBorder 
    2785 074B  E8 173A R		                            call       
					 PRINT_STR 
    2786				 
    2787 074E  E8 154F R		                            call       
					 PRINT_ALL_ITEMS 
    2788				                             
    2789 0751  E8 146A R		                            call       
					 ITEM_SELECTION          ;modify variab
					le itemSelectionChoice 
    2790				 
    2791 0754  80 3E 1032 R 09		                                       
					 cmp         [itemSelectionChoice], 9  
					      ;exit if 9(exit selection) 
    2792 0759  74 69			                                       
					 je          ITEM_SELECTION_EXIT 
    2793				 
    2794 075B  E8 1401 R		                                       
					 call        DISPLAY_QTY_BOX 
    2795				 
    2796				                                       
					 ;;move qty input cursor 
    2797 075E  E8 13DE R		                                       
					 call        MOVE_CURSOR_QTY 
    2798				 
    2799				                                       
					 ;item choice to al 
    2800 0761  33 C0			                                       
					 xor         ax, ax 
    2801 0763  A0 1032 R		                                       
					 mov         al, [itemSelectionChoice] 
					  ;item choice to al 
    2802 0766  FE C8			                                       
					 dec         al                       
    2803				 
    2804				                                       
					 ;change di into the address of the sal
					e record of the selected item 
    2805 0768  8D 3E 1125 R		                                       
					 lea         di, itemSaleRecord        
					  ;change address to the selected item 
    2806 076C  03 F8			                                       
					 add         di, ax 
    2807				                                       
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-66


					 ;change si to the address of the selec
					ted item 
    2808 076E  33 DB			                                       
					 xor         bx, bx 
    2809 0770  B3 1E			                                       
					 mov         bl, itemSize 
    2810 0772  F7 E3			                                       
					 mul         bx                        
					  ;item choice number * itemSize to get
					 offset of the 
    2811 0774  8D 36 1034 R		                                       
					 lea         si, items                 
					   
    2812 0778  03 F0			                                       
					 add         si, ax                    
					  ;item + offset 
    2813				 
    2814 077A				                                       
					 QTY_CHECK: 
    2815 077A  33 DB			                                       
					             xor         bx, bx 
    2816 077C  E8 1699 R		                                       
					             call        BCD_INPUT     
					              ;store input into ax 
    2817 077F  8A 5C 1D			                                       
					             mov         bl, [si + item
					Qty]          ;quantity of selected ite
					m 
    2818				 
    2819 0782  E8 13DE R		                                       
					             call        MOVE_CURSOR_QT
					Y 
    2820				 
    2821 0785  3B C3			                                       
					             cmp         ax, bx        
					              ;if input is larger than 
					qty of item 
    2822 0787  77 03			                                       
					             ja          QTY_CHECK_ERRO
					R 
    2823 0789  EB 1F 90			                                       
					             jmp         QTY_CHECK_END 
    2824 078C				                                       
					             QTY_CHECK_ERROR: 
    2825 078C  8D 16 18E1 R		                                       
					                         lea         dx
					, qtyError 
    2826 0790  E8 173A R		                                       
					                         call        PR
					INT_STR 
    2827				                                       
					                         CURSOR      22
					,0 
    2828 0793  50                    1	                push    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-67


    2829 0794  53                    1	                push    bx 
    2830 0795  51                    1	                push    cx 
    2831 0796  52                    1	                push    dx 
    2832 0797  B6 16                 1	                mov dh, 22        ;row 
    2833 0799  B2 00                 1	                mov dl, 0       ;column
					 
    2834 079B  B7 00                 1	                mov bh, 0         ; 
    2835 079D  B4 02                 1	                mov ah, 02h       ; 
    2836 079F  CD 10                 1	                int 10h 
    2837 07A1  5A                    1	                pop    dx 
    2838 07A2  59                    1	                pop    cx 
    2839 07A3  5B                    1	                pop    bx 
    2840 07A4  58                    1	                pop    ax 
    2841 07A5  E8 17DA R		                                       
					                         call        AN
					YPAUSE 
    2842 07A8  EB 89			                                       
					                         jmp         SA
					LES_START_CP 
    2843 07AA				                                       
					 QTY_CHECK_END: 
    2844				 
    2845				                                       
					 ;;write sold qty to sales record 
    2846 07AA  88 05			                                       
					 mov         [di],   al 
    2847				 
    2848				                                       
					 CURSOR      22,0 
    2849 07AC  50                    1	                push    ax 
    2850 07AD  53                    1	                push    bx 
    2851 07AE  51                    1	                push    cx 
    2852 07AF  52                    1	                push    dx 
    2853 07B0  B6 16                 1	                mov dh, 22        ;row 
    2854 07B2  B2 00                 1	                mov dl, 0       ;column
					 
    2855 07B4  B7 00                 1	                mov bh, 0         ; 
    2856 07B6  B4 02                 1	                mov ah, 02h       ; 
    2857 07B8  CD 10                 1	                int 10h 
    2858 07BA  5A                    1	                pop    dx 
    2859 07BB  59                    1	                pop    cx 
    2860 07BC  5B                    1	                pop    bx 
    2861 07BD  58                    1	                pop    ax 
    2862 07BE  E8 17DA R		                                       
					 call        ANYPAUSE 
    2863				 
    2864 07C1  E9 0733 R		                                       
					 jmp         SALES_START_CP 
    2865 07C4				                            ITEM_SELECT
					ION_EXIT: 
    2866 07C4  C3			                            ret 
    2867 07C5				SALES           ENDP 
    2868				 
    2869 07C5				CUSTOMER        PROC 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-68


    2870 07C5				                    customerMenuLoop: 
    2871 07C5  E8 1741 R		                            call       
					 CLS 
    2872 07C8  E8 0B1A R		                            call       
					 CUSTOMER_MENU 
    2873				 
    2874				                            CURSOR     
					 20,  0 
    2875 07CB  50                    1	                push    ax 
    2876 07CC  53                    1	                push    bx 
    2877 07CD  51                    1	                push    cx 
    2878 07CE  52                    1	                push    dx 
    2879 07CF  B6 14                 1	                mov dh, 20        ;row 
    2880 07D1  B2 00                 1	                mov dl, 0       ;column
					 
    2881 07D3  B7 00                 1	                mov bh, 0         ; 
    2882 07D5  B4 02                 1	                mov ah, 02h       ; 
    2883 07D7  CD 10                 1	                int 10h 
    2884 07D9  5A                    1	                pop    dx 
    2885 07DA  59                    1	                pop    cx 
    2886 07DB  5B                    1	                pop    bx 
    2887 07DC  58                    1	                pop    ax 
    2888 07DD  8D 16 1BE0 R		                            lea        
					 dx,     customerMenuInputPrompt 
    2889 07E1  E8 173A R		                            call       
					 print_STR 
    2890				 
    2891 07E4  B4 01			                            mov        
					 ah, 01h 
    2892 07E6  CD 21			                            int        
					 21h 
    2893				                             
    2894 07E8  3C 31			                            cmp        
					 al, "1" 
    2895 07EA  74 51			                            je         
					 customerMenu_Add 
    2896				 
    2897 07EC  3C 32			                            cmp        
					 al, "2" 
    2898 07EE  74 56			                            je         
					 customerMenu_Display 
    2899				 
    2900 07F0  3C 33			                            cmp        
					 al, "3" 
    2901 07F2  74 5B			                            je         
					 customerMenu_Remove 
    2902				 
    2903 07F4  3C 34			                            cmp        
					 al, "4" 
    2904 07F6  74 78			                            je         
					 customerMenu_Exit 
    2905				 
    2906				                            ;;invalid i
					nput 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-69


    2907				                            CURSOR     
					 22,  0 
    2908 07F8  50                    1	                push    ax 
    2909 07F9  53                    1	                push    bx 
    2910 07FA  51                    1	                push    cx 
    2911 07FB  52                    1	                push    dx 
    2912 07FC  B6 16                 1	                mov dh, 22        ;row 
    2913 07FE  B2 00                 1	                mov dl, 0       ;column
					 
    2914 0800  B7 00                 1	                mov bh, 0         ; 
    2915 0802  B4 02                 1	                mov ah, 02h       ; 
    2916 0804  CD 10                 1	                int 10h 
    2917 0806  5A                    1	                pop    dx 
    2918 0807  59                    1	                pop    cx 
    2919 0808  5B                    1	                pop    bx 
    2920 0809  58                    1	                pop    ax 
    2921				                            COLOUR_CHAR
					 0,  10001100b,  80d 
    2922 080A  50                    1	                push    ax 
    2923 080B  53                    1	                push    bx 
    2924 080C  51                    1	                push    cx 
    2925 080D  52                    1	                push    dx 
    2926 080E  33 DB                 1	                xor     bx,bx 
    2927 0810  B9 0050               1	                mov cx, 80d 
    2928 0813  B0 00                 1	                mov al, 0 
    2929 0815  B3 8C                 1	                mov bl, 10001100b 
    2930 0817  B4 09                 1	                mov ah, 09h 
    2931 0819  CD 10                 1	                int 10h 
    2932 081B  5A                    1	                pop    dx 
    2933 081C  59                    1	                pop    cx 
    2934 081D  5B                    1	                pop    bx 
    2935 081E  58                    1	                pop    ax 
    2936 081F  8D 16 1BFA R		                            lea        
					 dx, customerInvalidInput 
    2937 0823  E8 173A R		                            call       
					 PRINT_STR 
    2938				                            CURSOR     
					 24,  0 
    2939 0826  50                    1	                push    ax 
    2940 0827  53                    1	                push    bx 
    2941 0828  51                    1	                push    cx 
    2942 0829  52                    1	                push    dx 
    2943 082A  B6 18                 1	                mov dh, 24        ;row 
    2944 082C  B2 00                 1	                mov dl, 0       ;column
					 
    2945 082E  B7 00                 1	                mov bh, 0         ; 
    2946 0830  B4 02                 1	                mov ah, 02h       ; 
    2947 0832  CD 10                 1	                int 10h 
    2948 0834  5A                    1	                pop    dx 
    2949 0835  59                    1	                pop    cx 
    2950 0836  5B                    1	                pop    bx 
    2951 0837  58                    1	                pop    ax 
    2952 0838  E8 17DA R		                            call       
					 ANYPAUSE 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-70


    2953 083B  EB 88			                            jmp        
					 customerMenuLoop 
    2954				 
    2955 083D				                            customerMen
					u_Add: 
    2956 083D  E8 1741 R		                                       
					 call        cls 
    2957 0840  E8 0C79 R		                                       
					 call        ADD_CUSTOMER 
    2958 0843  EB 13 90			                                       
					 jmp         customerMenu_End 
    2959				                             
    2960 0846				                            customerMen
					u_Display: 
    2961 0846  E8 1741 R		                                       
					 call        cls 
    2962 0849  E8 0E92 R		                                       
					 call        DISPLAY_ALL_CUST 
    2963 084C  EB 0A 90			                                       
					 jmp         customerMenu_End 
    2964				 
    2965 084F				                            customerMen
					u_Remove: 
    2966 084F  E8 1741 R		                                       
					 call        cls 
    2967 0852  E8 0E39 R		                                       
					 call        REMOVE_CUSTOMER 
    2968 0855  EB 01 90			                                       
					 jmp         customerMenu_End 
    2969				                                       
					  
    2970 0858				                            customerMen
					u_End: 
    2971				                                       
					 CURSOR      23, 0 
    2972 0858  50                    1	                push    ax 
    2973 0859  53                    1	                push    bx 
    2974 085A  51                    1	                push    cx 
    2975 085B  52                    1	                push    dx 
    2976 085C  B6 17                 1	                mov dh, 23        ;row 
    2977 085E  B2 00                 1	                mov dl, 0       ;column
					 
    2978 0860  B7 00                 1	                mov bh, 0         ; 
    2979 0862  B4 02                 1	                mov ah, 02h       ; 
    2980 0864  CD 10                 1	                int 10h 
    2981 0866  5A                    1	                pop    dx 
    2982 0867  59                    1	                pop    cx 
    2983 0868  5B                    1	                pop    bx 
    2984 0869  58                    1	                pop    ax 
    2985 086A  E8 17DA R		                                       
					 call        ANYPAUSE 
    2986 086D  E9 07C5 R		                                       
					 jmp         customerMenuLoop 
    2987				                 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-71


    2988 0870				                customerMenu_Exit: 
    2989 0870  C3			                            ret 
    2990 0871				CUSTOMER        ENDP 
    2991				 
    2992 0871				TRANSACTION     PROC 
    2993 0871  E8 1741 R		                    call        cls 
    2994				 
    2995 0874  E8 0A96 R		                    call        CALC_SU
					BTOTAL           ;multiples item price 
					with  qty in itemSaleRecord and output 
					in itemSubTotal
    2996				 
    2997 0877  E8 0A68 R		                    call        SUBTOTA
					LS_TO_STR        ;convert itemSubTotals
					 to string number. Output to itemSubTot
					alsString 
    2998				     
    2999 087A  E8 0A47 R		                    call        SUM_SUB
					TOTALS           ;sum all the item subt
					otals in itemSubTotalsString, output in
					 result 
    3000				                    STRCPY      subtota
					l,   result 
    3001 087D  8D 36 258D R          1	                lea     si, result 
    3002 0881  8D 3E 2596 R          1	                lea     di, subtotal 
    3003 0885                        1	                STRCPY_L: 
    3004 0885  8A 04                 1	                        mov     al, [si
					] 
    3005 0887  88 05                 1	                        mov     [di],al
					 
    3006 0889  46                    1	                        inc     si 
    3007 088A  47                    1	                        inc     di 
    3008 088B  3C 24                 1	                        cmp     al, "$"
					 
    3009 088D  75 F6                 1	                        jne     STRCPY_
					L 
    3010				 
    3011				                    CURSOR      3,  0 
    3012 088F  50                    1	                push    ax 
    3013 0890  53                    1	                push    bx 
    3014 0891  51                    1	                push    cx 
    3015 0892  52                    1	                push    dx 
    3016 0893  B6 03                 1	                mov dh, 3        ;row 
    3017 0895  B2 00                 1	                mov dl, 0       ;column
					 
    3018 0897  B7 00                 1	                mov bh, 0         ; 
    3019 0899  B4 02                 1	                mov ah, 02h       ; 
    3020 089B  CD 10                 1	                int 10h 
    3021 089D  5A                    1	                pop    dx 
    3022 089E  59                    1	                pop    cx 
    3023 089F  5B                    1	                pop    bx 
    3024 08A0  58                    1	                pop    ax 
    3025 08A1  8D 16 2632 R		                    lea         dx, rec
					ieptBorder 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-72


    3026 08A5  E8 173A R		                    call        PRINT_S
					TR 
    3027				 
    3028 08A8  E8 092C R		                    call        PRINT_A
					LL_ITEM_NAME 
    3029 08AB  E8 08C7 R		                    call        PRINT_A
					LL_SOLD_QTY 
    3030 08AE  E8 08F8 R		                    call        PRINT_A
					LL_SUBTOTAL 
    3031				 
    3032				                    ; call        TRANS
					ACTION_CUST 
    3033				 
    3034				                    CURSOR      24,0 
    3035 08B1  50                    1	                push    ax 
    3036 08B2  53                    1	                push    bx 
    3037 08B3  51                    1	                push    cx 
    3038 08B4  52                    1	                push    dx 
    3039 08B5  B6 18                 1	                mov dh, 24        ;row 
    3040 08B7  B2 00                 1	                mov dl, 0       ;column
					 
    3041 08B9  B7 00                 1	                mov bh, 0         ; 
    3042 08BB  B4 02                 1	                mov ah, 02h       ; 
    3043 08BD  CD 10                 1	                int 10h 
    3044 08BF  5A                    1	                pop    dx 
    3045 08C0  59                    1	                pop    cx 
    3046 08C1  5B                    1	                pop    bx 
    3047 08C2  58                    1	                pop    ax 
    3048 08C3  E8 17DA R		                    call        ANYPAUS
					E 
    3049 08C6  C3			                    ret 
    3050 08C7				TRANSACTION     ENDP 
    3051				;;;;;; 
    3052				 
    3053 08C7				PRINT_ALL_SOLD_QTY  PROC 
    3054 08C7  33 F6			                        xor         si,
					     si 
    3055				 
    3056 08C9  B3 12			                        mov         bl,
					     18 
    3057				 
    3058 08CB  33 C9			                        xor         cx,
					     cx 
    3059 08CD  8A 0E 1033 R		                        mov         cl,
					     [numberOfItems] 
    3060				 
    3061 08D1  8D 36 1125 R		                        lea         si,
					     itemSaleRecord 
    3062 08D5  03 F1			                        add         si,
					     cx 
    3063 08D7  4E			                        dec         si 
    3064 08D8				                        PRINT_ALL_SOLD_
					QTY_LOOP: 
    3065				                                    CUR
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-73


					SOR      bl, 30d 
    3066 08D8  50                    1	                push    ax 
    3067 08D9  53                    1	                push    bx 
    3068 08DA  51                    1	                push    cx 
    3069 08DB  52                    1	                push    dx 
    3070 08DC  8A F3                 1	                mov dh, bl        ;row 
    3071 08DE  B2 1E                 1	                mov dl, 30d       ;colu
					mn 
    3072 08E0  B7 00                 1	                mov bh, 0         ; 
    3073 08E2  B4 02                 1	                mov ah, 02h       ; 
    3074 08E4  CD 10                 1	                int 10h 
    3075 08E6  5A                    1	                pop    dx 
    3076 08E7  59                    1	                pop    cx 
    3077 08E8  5B                    1	                pop    bx 
    3078 08E9  58                    1	                pop    ax 
    3079				                     
    3080 08EA  33 C0			                                    xor
					     ax,     ax 
    3081 08EC  8A 04			                                    mov
					     al,     [si] 
    3082 08EE  E8 1676 R		                                    cal
					l    PRINT_NUM 
    3083				 
    3084 08F1  80 EB 02			                                    sub
					         bl, 2 
    3085				 
    3086 08F4  4E			                                    dec
					         si 
    3087 08F5  E2 E1			                                    loo
					p    PRINT_ALL_SOLD_QTY_LOOP 
    3088 08F7  C3			                        ret 
    3089 08F8				PRINT_ALL_SOLD_QTY  ENDP 
    3090				 
    3091 08F8				PRINT_ALL_SUBTOTAL  PROC 
    3092 08F8  33 FF			                        xor         di,
					     di 
    3093 08FA  B3 12			                        mov         bl,
					     18 
    3094 08FC  33 C9			                        xor         cx,
					     cx 
    3095 08FE  8A 0E 1033 R		                        mov         cl,
					     numberOfItems 
    3096				 
    3097 0902				                        PRINT_ALL_SUBTO
					TAL_LOOP: 
    3098				                                    CUR
					SOR      bl, 40d 
    3099 0902  50                    1	                push    ax 
    3100 0903  53                    1	                push    bx 
    3101 0904  51                    1	                push    cx 
    3102 0905  52                    1	                push    dx 
    3103 0906  8A F3                 1	                mov dh, bl        ;row 
    3104 0908  B2 28                 1	                mov dl, 40d       ;colu
					mn 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-74


    3105 090A  B7 00                 1	                mov bh, 0         ; 
    3106 090C  B4 02                 1	                mov ah, 02h       ; 
    3107 090E  CD 10                 1	                int 10h 
    3108 0910  5A                    1	                pop    dx 
    3109 0911  59                    1	                pop    cx 
    3110 0912  5B                    1	                pop    bx 
    3111 0913  58                    1	                pop    ax 
    3112				 
    3113 0914  33 C0			                                    xor
					         ax,     ax 
    3114 0916  B0 08			                                    mov
					         al,     strNumLen 
    3115 0918  40			                                    inc
					         ax 
    3116				 
    3117 0919  49			                                    dec
					         cx 
    3118 091A  F7 E1			                                    mul
					         cx 
    3119 091C  41			                                    inc
					         cx 
    3120 091D  8B F8			                                    mov
					         di,     ax 
    3121				 
    3122 091F  8D B5 2545 R		                                    lea
					         si,     itemSubTotalsString[di
					] 
    3123 0923  E8 1611 R		                                    cal
					l        PRINT_PRICE_STR 
    3124				 
    3125 0926  80 EB 02			                                    sub
					         bl, 2 
    3126				 
    3127 0929  E2 D7			                                    loo
					p        PRINT_ALL_SUBTOTAL_LOOP 
    3128 092B  C3			                        ret 
    3129 092C				PRINT_ALL_SUBTOTAL  ENDP 
    3130				 
    3131 092C				PRINT_ALL_ITEM_NAME PROC 
    3132 092C  33 F6			                        xor         si,
					     si 
    3133				 
    3134 092E  B3 12			                        mov         bl,
					     18 
    3135				 
    3136 0930  8D 36 1034 R		                        lea         si,
					     items 
    3137 0934  83 C6 01			                        add         si,
					     itemName 
    3138				 
    3139 0937  33 C9			                        xor         cx,
					     cx 
    3140 0939  8A 0E 1033 R		                        mov         cl,
					     [numberOfItems] 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-75


    3141 093D				                        PRINT_ALL_ITEM_
					NAME_LOOP: 
    3142				                                    CUR
					SOR      bl, 2d 
    3143 093D  50                    1	                push    ax 
    3144 093E  53                    1	                push    bx 
    3145 093F  51                    1	                push    cx 
    3146 0940  52                    1	                push    dx 
    3147 0941  8A F3                 1	                mov dh, bl        ;row 
    3148 0943  B2 02                 1	                mov dl, 2d       ;colum
					n 
    3149 0945  B7 00                 1	                mov bh, 0         ; 
    3150 0947  B4 02                 1	                mov ah, 02h       ; 
    3151 0949  CD 10                 1	                int 10h 
    3152 094B  5A                    1	                pop    dx 
    3153 094C  59                    1	                pop    cx 
    3154 094D  5B                    1	                pop    bx 
    3155 094E  58                    1	                pop    ax 
    3156				 
    3157 094F  8B D6			                                    mov
					         dx, si 
    3158 0951  E8 173A R		                                    cal
					l        PRINT_STR 
    3159				 
    3160 0954  80 EB 02			                                    sub
					         bl, 2 
    3161 0957  83 C6 1E			                                    add
					         si, itemSize 
    3162				 
    3163 095A  E2 E1			                                    loo
					p    PRINT_ALL_ITEM_NAME_LOOP 
    3164 095C  C3			                        ret 
    3165 095D				PRINT_ALL_ITEM_NAME ENDP 
    3166				 
    3167 095D				TRANSACTION_CUST    PROC 
    3168 095D  EB 16 90			                    jmp         TRANSAC
					TION_CUST_SELECTION_INIT 
    3169				                    ;;select customer 
    3170				 
    3171 0960				                    TRANSACTION_CUST_SE
					LECTION: 
    3172				                                CURSOR 
					     24,0 
    3173 0960  50                    1	                push    ax 
    3174 0961  53                    1	                push    bx 
    3175 0962  51                    1	                push    cx 
    3176 0963  52                    1	                push    dx 
    3177 0964  B6 18                 1	                mov dh, 24        ;row 
    3178 0966  B2 00                 1	                mov dl, 0       ;column
					 
    3179 0968  B7 00                 1	                mov bh, 0         ; 
    3180 096A  B4 02                 1	                mov ah, 02h       ; 
    3181 096C  CD 10                 1	                int 10h 
    3182 096E  5A                    1	                pop    dx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-76


    3183 096F  59                    1	                pop    cx 
    3184 0970  5B                    1	                pop    bx 
    3185 0971  58                    1	                pop    ax 
    3186 0972  E8 17DA R		                                call   
					     ANYPAUSE 
    3187				 
    3188 0975				                    TRANSACTION_CUST_SE
					LECTION_INIT: 
    3189 0975  E8 1741 R		                                call   
					     cls 
    3190				 
    3191 0978  E8 0E92 R		                                call   
					     DISPLAY_ALL_CUST 
    3192 097B  E8 12E1 R		                                call   
					     CUSTOMER_NUMBERING 
    3193				 
    3194				                                CURSOR 
					     16, 0 
    3195 097E  50                    1	                push    ax 
    3196 097F  53                    1	                push    bx 
    3197 0980  51                    1	                push    cx 
    3198 0981  52                    1	                push    dx 
    3199 0982  B6 10                 1	                mov dh, 16        ;row 
    3200 0984  B2 00                 1	                mov dl, 0       ;column
					 
    3201 0986  B7 00                 1	                mov bh, 0         ; 
    3202 0988  B4 02                 1	                mov ah, 02h       ; 
    3203 098A  CD 10                 1	                int 10h 
    3204 098C  5A                    1	                pop    dx 
    3205 098D  59                    1	                pop    cx 
    3206 098E  5B                    1	                pop    bx 
    3207 098F  58                    1	                pop    ax 
    3208 0990  8D 16 25C7 R		                                lea    
					     dx, promptCustomerPointSel 
    3209 0994  E8 173A R		                                call   
					     PRINT_STR 
    3210				 
    3211 0997  B4 01			                                mov    
					     ah, 01h 
    3212 0999  CD 21			                                int    
					     21h 
    3213				 
    3214 099B  3C 65			                                cmp    
					     al, 'e' 
    3215 099D  74 5A			                                je     
					     TRANSACTION_CUST_SELECTION_END 
    3216 099F  3C 45			                                cmp    
					     al, 'E' 
    3217 09A1  74 56			                                je     
					     TRANSACTION_CUST_SELECTION_END 
    3218				 
    3219 09A3  2C 31			                                sub    
					     al, 49d             ;convert to di
					git and dec 1 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-77


    3220				 
    3221 09A5  3C 00			                                cmp    
					     al, 0 
    3222 09A7  72 19			                                jb     
					     TRANSACTION_CUST_SELECTION_WRONG 
    3223				 
    3224 09A9  3C 04			                                cmp    
					     al, 4 
    3225 09AB  77 15			                                ja     
					     TRANSACTION_CUST_SELECTION_WRONG 
    3226				 
    3227 09AD  32 E4			                                xor    
					     ah, ah 
    3228 09AF  BB 0030			                                mov    
					     bx, customerSize 
    3229 09B2  F7 E3			                                mul    
					     bx 
    3230				 
    3231 09B4  8B F0			                                mov    
					     si, ax 
    3232				 
    3233 09B6  8A 94 22C6 R		                                mov    
					     dl, customerArr[si] 
    3234 09BA  80 FA 24			                                cmp    
					     dl, "$" 
    3235 09BD  74 1E			                                je     
					     TRANSACTION_CUST_SELECTION_EMPTY 
    3236				 
    3237				                                ;;all c
					lear 
    3238				                                ;;si is
					 address of selected customer 
    3239				                                 
    3240 09BF  EB 38 90			                                jmp    
					     TRANSACTION_CUST_SELECTION_END 
    3241				 
    3242 09C2				                                TRANSAC
					TION_CUST_SELECTION_WRONG: 
    3243				                                CURSOR 
					     20, 31 
    3244 09C2  50                    1	                push    ax 
    3245 09C3  53                    1	                push    bx 
    3246 09C4  51                    1	                push    cx 
    3247 09C5  52                    1	                push    dx 
    3248 09C6  B6 14                 1	                mov dh, 20        ;row 
    3249 09C8  B2 1F                 1	                mov dl, 31       ;colum
					n 
    3250 09CA  B7 00                 1	                mov bh, 0         ; 
    3251 09CC  B4 02                 1	                mov ah, 02h       ; 
    3252 09CE  CD 10                 1	                int 10h 
    3253 09D0  5A                    1	                pop    dx 
    3254 09D1  59                    1	                pop    cx 
    3255 09D2  5B                    1	                pop    bx 
    3256 09D3  58                    1	                pop    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-78


    3257 09D4  8D 16 25FC R		                                lea    
					     dx, transactionCustInvalidSel 
    3258 09D8  E8 173A R		                                call   
					     PRINT_STR 
    3259 09DB  EB 83			                                jmp    
					     TRANSACTION_CUST_SELECTION 
    3260				 
    3261 09DD				                                TRANSAC
					TION_CUST_SELECTION_EMPTY: 
    3262				                                CURSOR 
					     20, 24 
    3263 09DD  50                    1	                push    ax 
    3264 09DE  53                    1	                push    bx 
    3265 09DF  51                    1	                push    cx 
    3266 09E0  52                    1	                push    dx 
    3267 09E1  B6 14                 1	                mov dh, 20        ;row 
    3268 09E3  B2 18                 1	                mov dl, 24       ;colum
					n 
    3269 09E5  B7 00                 1	                mov bh, 0         ; 
    3270 09E7  B4 02                 1	                mov ah, 02h       ; 
    3271 09E9  CD 10                 1	                int 10h 
    3272 09EB  5A                    1	                pop    dx 
    3273 09EC  59                    1	                pop    cx 
    3274 09ED  5B                    1	                pop    bx 
    3275 09EE  58                    1	                pop    ax 
    3276 09EF  8D 16 2610 R		                                lea    
					     dx, transactionCustEmpty 
    3277 09F3  E8 173A R		                                call   
					     PRINT_STR 
    3278 09F6  E9 0960 R		                                jmp    
					     TRANSACTION_CUST_SELECTION 
    3279 09F9				                    TRANSACTION_CUST_SE
					LECTION_END: 
    3280 09F9  C3			                    ret 
    3281 09FA				TRANSACTION_CUST    ENDP 
    3282				 
    3283 09FA				DEBUG               PROC 
    3284 09FA  8A 16 2533 R		                                       
					 mov     dl, [mulI] 
    3285 09FE  80 C2 30			                                       
					 add     dl, 48d 
    3286 0A01  E8 17CB R		                                       
					 call    PRINT_CHAR 
    3287				 
    3288 0A04  B2 20			                                       
					 mov     dl, " " 
    3289 0A06  E8 17CB R		                                       
					 call    PRINT_CHAR 
    3290				 
    3291 0A09  8A 16 2534 R		                                       
					 mov     dl, [mulJ] 
    3292 0A0D  80 C2 30			                                       
					 add     dl, 48d 
    3293 0A10  E8 17CB R		                                       
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-79


					 call    PRINT_CHAR 
    3294				 
    3295 0A13  B2 20			                                       
					 mov     dl, " " 
    3296 0A15  E8 17CB R		                                       
					 call    PRINT_CHAR 
    3297				 
    3298 0A18  8D 16 251C R		                                       
					 lea     dx, mulResult 
    3299 0A1C  E8 173A R		                                       
					 call    PRINT_STR 
    3300				 
    3301 0A1F  B2 20			                                       
					 mov     dl, " " 
    3302 0A21  E8 17CB R		                                       
					 call    PRINT_CHAR 
    3303 0A24  E8 17CB R		                                       
					 call    PRINT_CHAR 
    3304				 
    3305 0A27  E8 0A34 R		                                       
					 call    GET_IJ 
    3306 0A2A  8B C2			                                       
					 mov     ax, dx 
    3307				                                       
					 ; add     dx, 48d 
    3308 0A2C  E8 1676 R		                                       
					 call    PRINT_NUM 
    3309				 
    3310 0A2F  B4 01			                                       
					 mov     ah, 01h 
    3311 0A31  CD 21			                                       
					 int     21h 
    3312 0A33  C3			                                       
					 ret 
    3313 0A34				DEBUG               ENDP 
    3314				 
    3315 0A34				GET_IJ              PROC               
					                         ;return i+j in
					 dx 
    3316 0A34  8A 36 2533 R		                                mov    
					 dh, [mulI]             ;i+j 
    3317 0A38  8A 16 2534 R		                                mov    
					 dl, [mulJ] 
    3318 0A3C  02 F2			                                add    
					 dh, dl 
    3319				 
    3320 0A3E  B2 14			                                mov    
					 dl, mulResultLen    ;get the length of
					 result string 
    3321 0A40  FE CA			                                dec    
					 dl 
    3322 0A42  2A D6			                                sub    
					 dl, dh               ;(i+j) offset fro
					m result string 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-80


    3323 0A44  32 F6			                                xor    
					 dh, dh 
    3324				 
    3325 0A46  C3			                                ret 
    3326 0A47				GET_IJ              ENDP 
    3327				 
    3328 0A47				SUM_SUBTOTALS       PROC 
    3329 0A47  33 FF			                        xor         di,
					 di 
    3330 0A49  33 C9			                        xor         cx,
					 cx 
    3331 0A4B  8A 0E 1033 R		                        mov         cl,
					 [numberOfItems] 
    3332 0A4F				                        sumAllSubtotals
					: 
    3333 0A4F  51			                                    pus
					h        cx 
    3334				 
    3335 0A50  49			                                    dec
					         cx 
    3336 0A51  B8 0008			                                    mov
					         ax, strNumLen 
    3337 0A54  40			                                    inc
					         ax 
    3338 0A55  F7 E1			                                    mul
					         cx              ;index to next
					 strNum 
    3339 0A57  8B F8			                                    mov
					         di, ax 
    3340				 
    3341 0A59  59			                                    pop
					         cx 
    3342				 
    3343 0A5A  8D 36 258D R		                                    lea
					         si, result 
    3344 0A5E  8D BD 2545 R		                                    lea
					         di, itemSubTotalsString[di] 
    3345 0A62  E8 1803 R		                                    cal
					l        STRNUM_ADD 
    3346				 
    3347 0A65  E2 E8			                                    loo
					p        sumAllSubtotals 
    3348				 
    3349 0A67  C3			                        ret 
    3350 0A68				SUM_SUBTOTALS       ENDP 
    3351				 
    3352 0A68				SUBTOTALS_TO_STR    PROC 
    3353 0A68  33 F6			                        xor         si,
					 si              ;index for itemSubTota
					ls 
    3354 0A6A  33 FF			                        xor         di,
					 di              ;index for itemSubTota
					lsString 
    3355 0A6C  33 C9			                        xor         cx,
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-81


					 cx 
    3356 0A6E  8A 0E 1033 R		                        mov         cl,
					 [numberOfItems] 
    3357 0A72				                        itemSubTotals_T
					o_String: 
    3358 0A72  51			                                    pus
					h        cx 
    3359 0A73  49			                                    dec
					         cx 
    3360				 
    3361 0A74  B8 0002			                                    mov
					         ax, 2 
    3362 0A77  F7 E1			                                    mul
					         cx 
    3363 0A79  8B F0			                                    mov
					         si, ax              ;index for
					 itemSubtotals ;;; address + 2*cx 
    3364				 
    3365 0A7B  B8 0008			                                    mov
					         ax, strNumLen        
    3366 0A7E  40			                                    inc
					         ax 
    3367 0A7F  F7 E1			                                    mul
					         cx 
    3368 0A81  8B F8			                                    mov
					         di, ax              ;index for
					 itemSubTotalsString ;;; addresss + str
					ingLength*cx 
    3369				 
    3370 0A83  59			                                    pop
					         cx 
    3371				 
    3372				                                    NUM
					_TO_STR_M    itemSubTotals[si], itemSub
					TotalsString[di] 
    3373 0A84  50                    1	                push    ax 
    3374 0A85  56                    1	                push    si 
    3375 0A86  8B 84 2535 R          1	                mov     ax, itemSubTota
					ls[si] 
    3376 0A8A  8D B5 2545 R          1	                lea     si, itemSubTota
					lsString[di] 
    3377 0A8E  E8 1653 R             1	                call    NUM_TO_STR 
    3378 0A91  5E                    1	                pop     si 
    3379 0A92  58                    1	                pop     ax 
    3380				 
    3381 0A93  E2 DD			                                    loo
					p        itemSubTotals_To_String 
    3382 0A95  C3			                    ret 
    3383 0A96				SUBTOTALS_TO_STR    ENDP 
    3384				 
    3385 0A96				CALC_SUBTOTAL       PROC 
    3386 0A96  33 C9			                        xor     cx, cx 
    3387 0A98  8A 0E 1033 R		                        mov     cl, [nu
					mberOfItems] 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-82


    3388 0A9C				                        calculateSubTot
					alLoop: 
    3389 0A9C  8D 36 1049 R		                                lea    
					 si, items + itemPrice 
    3390 0AA0  8D 3E 1125 R		                                lea    
					 di, itemSaleRecord 
    3391				 
    3392 0AA4  51			                                push   
					 cx 
    3393 0AA5  49			                                dec    
					 cx 
    3394 0AA6  B8 001E			                                mov    
					 ax, itemSize            ;offset to pre
					vious item cx*itemSize 
    3395 0AA9  F7 E1			                                mul    
					 cx 
    3396 0AAB  03 F0			                                add    
					 si, ax 
    3397 0AAD  03 F9			                                add    
					 di, cx 
    3398 0AAF  59			                                pop    
					 cx 
    3399				 
    3400 0AB0  E8 0ACE R		                                call   
					 GET_ITEM_PRICE     
    3401				 
    3402 0AB3  8B C2			                                mov    
					 ax, dx 
    3403 0AB5  33 D2			                                xor    
					 dx, dx 
    3404 0AB7  8A 15			                                mov    
					 dl, [di]                ;get sold qty 
    3405				 
    3406 0AB9  F7 E2			                                mul    
					 dx                      ;calculate Sal
					eQty*Price 
    3407				 
    3408 0ABB  50			                                push   
					 ax 
    3409 0ABC  BB 0002			                                mov    
					 bx, 2 
    3410 0ABF  8B C1			                                mov    
					 ax, cx 
    3411 0AC1  48			                                dec    
					 ax 
    3412 0AC2  F7 E3			                                mul    
					 bx 
    3413 0AC4  8B F8			                                mov    
					 di, ax 
    3414 0AC6  58			                                pop    
					 ax 
    3415 0AC7  89 85 2535 R		                                mov    
					 itemSubTotals[di], ax 
    3416				 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-83


    3417 0ACB  E2 CF			                                loop   
					 calculateSubTotalLoop 
    3418				 
    3419 0ACD  C3			                        ret 
    3420 0ACE				CALC_SUBTOTAL   ENDP 
    3421				 
    3422 0ACE				GET_ITEM_PRICE      PROC               
					             ;output price from item in
					 si into dx 
    3423 0ACE  51			                push    cx 
    3424 0ACF  56			                push    si 
    3425				                 
    3426 0AD0  33 C0			                xor     ax, ax 
    3427 0AD2  33 DB			                xor     bx, bx 
    3428 0AD4  33 C9			                xor     cx, cx 
    3429 0AD6  33 D2			                xor     dx, dx 
    3430				 
    3431 0AD8  B9 0000			                mov     cx, 0          
					         ;cx as number counter 
    3432				  
    3433 0ADB  4E			                dec     si        
    3434 0ADC				                PRICE_BCD_CONV_LOOP: 
    3435 0ADC  46			                        inc     si 
    3436 0ADD  8A 04			                        mov     al, [si
					] 
    3437 0ADF  3C 24			                        cmp     al, "$"
					 
    3438 0AE1  74 07			                        je      PRICE_B
					CD_CONV_CALC 
    3439				                         
    3440 0AE3  3C 2E			                        cmp     al, "."
					 
    3441 0AE5  74 F5			                        je      PRICE_B
					CD_CONV_LOOP 
    3442				                         
    3443 0AE7  41			                        inc     cx     
					         ;record number of digits 
    3444 0AE8  EB F2			                        jmp     PRICE_B
					CD_CONV_LOOP                    
    3445				                                       
					      
    3446 0AEA				                        PRICE_BCD_CONV_
					CALC: 
    3447 0AEA  B8 0001			                                mov    
					     ax, 0001h                   ;ax tr
					acks place of number, eg first number *
					 1, second numb
    3448 0AED  4E			                                dec    
					     si 
    3449				                                 
    3450 0AEE				                                BCD_INP
					UT_CAL: 
    3451 0AEE  33 DB			                                xor    
					     bx, bx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-84


    3452				 
    3453 0AF0  8A 1C			                                mov    
					     bl, [si] 
    3454 0AF2  80 FB 24			                                cmp    
					     bl, "$"     ;if is not digit 
    3455 0AF5  74 1D			                                je     
					     BCD_INPUT_CAL_NOT_DIGIT_1   
    3456				                                 
    3457 0AF7  80 FB 2E			                                cmp    
					     bl, "."     ;if is not digit 
    3458 0AFA  74 18			                                je     
					     BCD_INPUT_CAL_NOT_DIGIT_1 
    3459				                                 
    3460 0AFC  80 EB 30			                                sub    
					     bl, 48d 
    3461				 
    3462				 
    3463 0AFF  50			                                push   
					     ax               
    3464				 
    3465 0B00  52			                                push   
					     dx                  ;mul will effe
					ct dx 
    3466 0B01  F7 E3			                                mul    
					     bx 
    3467 0B03  5A			                                pop    
					     dx 
    3468				 
    3469 0B04  03 D0			                                add    
					     dx, ax 
    3470 0B06  58			                                pop    
					     ax 
    3471				 
    3472 0B07  52			                                push   
					     dx                  ;mul will effe
					ct dx 
    3473 0B08  BB 000A			                                mov    
					     bx, 10d 
    3474 0B0B  F7 E3			                                mul    
					     bx 
    3475 0B0D  5A			                                pop    
					     dx 
    3476				 
    3477 0B0E  4E			                                dec    
					     si 
    3478 0B0F  E2 DD			                                loop   
					     BCD_INPUT_CAL                
    3479				                                 
    3480 0B11  EB 04 90			                                jmp    
					     BCD_INPUT_CAL_NOT_DIGIT_END_1  
    3481 0B14				                                BCD_INP
					UT_CAL_NOT_DIGIT_1: 
    3482 0B14  4E			                                       
					     dec         si 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-85


    3483 0B15  EB D7			                                       
					     jmp         BCD_INPUT_CAL 
    3484 0B17				                                BCD_INP
					UT_CAL_NOT_DIGIT_END_1:     
    3485 0B17  5E			                pop     si 
    3486 0B18  59			                pop     cx 
    3487 0B19  C3			                ret 
    3488 0B1A				GET_ITEM_PRICE  ENDP   
    3489				 
    3490 0B1A				CUSTOMER_MENU       PROC 
    3491				                            COLOUR_CHAR
					 0,  00001011b, 640d 
    3492 0B1A  50                    1	                push    ax 
    3493 0B1B  53                    1	                push    bx 
    3494 0B1C  51                    1	                push    cx 
    3495 0B1D  52                    1	                push    dx 
    3496 0B1E  33 DB                 1	                xor     bx,bx 
    3497 0B20  B9 0280               1	                mov cx, 640d 
    3498 0B23  B0 00                 1	                mov al, 0 
    3499 0B25  B3 0B                 1	                mov bl, 00001011b 
    3500 0B27  B4 09                 1	                mov ah, 09h 
    3501 0B29  CD 10                 1	                int 10h 
    3502 0B2B  5A                    1	                pop    dx 
    3503 0B2C  59                    1	                pop    cx 
    3504 0B2D  5B                    1	                pop    bx 
    3505 0B2E  58                    1	                pop    ax 
    3506 0B2F  8D 16 0026 R		                            lea        
					 dx, abcLogo 
    3507 0B33  E8 173A R		                            call       
					 PRINT_STR 
    3508				 
    3509				                            CURSOR     
					 9,0 
    3510 0B36  50                    1	                push    ax 
    3511 0B37  53                    1	                push    bx 
    3512 0B38  51                    1	                push    cx 
    3513 0B39  52                    1	                push    dx 
    3514 0B3A  B6 09                 1	                mov dh, 9        ;row 
    3515 0B3C  B2 00                 1	                mov dl, 0       ;column
					 
    3516 0B3E  B7 00                 1	                mov bh, 0         ; 
    3517 0B40  B4 02                 1	                mov ah, 02h       ; 
    3518 0B42  CD 10                 1	                int 10h 
    3519 0B44  5A                    1	                pop    dx 
    3520 0B45  59                    1	                pop    cx 
    3521 0B46  5B                    1	                pop    bx 
    3522 0B47  58                    1	                pop    ax 
    3523				                            COLOUR_CHAR
					 0,  00001101b, 880d 
    3524 0B48  50                    1	                push    ax 
    3525 0B49  53                    1	                push    bx 
    3526 0B4A  51                    1	                push    cx 
    3527 0B4B  52                    1	                push    dx 
    3528 0B4C  33 DB                 1	                xor     bx,bx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-86


    3529 0B4E  B9 0370               1	                mov cx, 880d 
    3530 0B51  B0 00                 1	                mov al, 0 
    3531 0B53  B3 0D                 1	                mov bl, 00001101b 
    3532 0B55  B4 09                 1	                mov ah, 09h 
    3533 0B57  CD 10                 1	                int 10h 
    3534 0B59  5A                    1	                pop    dx 
    3535 0B5A  59                    1	                pop    cx 
    3536 0B5B  5B                    1	                pop    bx 
    3537 0B5C  58                    1	                pop    ax 
    3538 0B5D  8D 16 18ED R		                            lea        
					 dx, customerMenu 
    3539 0B61  E8 173A R		                            call       
					 PRINT_STR 
    3540				 
    3541				                            CURSOR     
					 10, 20 
    3542 0B64  50                    1	                push    ax 
    3543 0B65  53                    1	                push    bx 
    3544 0B66  51                    1	                push    cx 
    3545 0B67  52                    1	                push    dx 
    3546 0B68  B6 0A                 1	                mov dh, 10        ;row 
    3547 0B6A  B2 14                 1	                mov dl, 20       ;colum
					n 
    3548 0B6C  B7 00                 1	                mov bh, 0         ; 
    3549 0B6E  B4 02                 1	                mov ah, 02h       ; 
    3550 0B70  CD 10                 1	                int 10h 
    3551 0B72  5A                    1	                pop    dx 
    3552 0B73  59                    1	                pop    cx 
    3553 0B74  5B                    1	                pop    bx 
    3554 0B75  58                    1	                pop    ax 
    3555				                            COLOUR_CHAR
					 0,  00001111b, 35d 
    3556 0B76  50                    1	                push    ax 
    3557 0B77  53                    1	                push    bx 
    3558 0B78  51                    1	                push    cx 
    3559 0B79  52                    1	                push    dx 
    3560 0B7A  33 DB                 1	                xor     bx,bx 
    3561 0B7C  B9 0023               1	                mov cx, 35d 
    3562 0B7F  B0 00                 1	                mov al, 0 
    3563 0B81  B3 0F                 1	                mov bl, 00001111b 
    3564 0B83  B4 09                 1	                mov ah, 09h 
    3565 0B85  CD 10                 1	                int 10h 
    3566 0B87  5A                    1	                pop    dx 
    3567 0B88  59                    1	                pop    cx 
    3568 0B89  5B                    1	                pop    bx 
    3569 0B8A  58                    1	                pop    ax 
    3570 0B8B  8D 16 1B6C R		                            lea        
					 dx, customerMenuStr1 
    3571 0B8F  E8 173A R		                            call       
					 PRINT_STR 
    3572				 
    3573				                            CURSOR     
					 12, 27 
    3574 0B92  50                    1	                push    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-87


    3575 0B93  53                    1	                push    bx 
    3576 0B94  51                    1	                push    cx 
    3577 0B95  52                    1	                push    dx 
    3578 0B96  B6 0C                 1	                mov dh, 12        ;row 
    3579 0B98  B2 1B                 1	                mov dl, 27       ;colum
					n 
    3580 0B9A  B7 00                 1	                mov bh, 0         ; 
    3581 0B9C  B4 02                 1	                mov ah, 02h       ; 
    3582 0B9E  CD 10                 1	                int 10h 
    3583 0BA0  5A                    1	                pop    dx 
    3584 0BA1  59                    1	                pop    cx 
    3585 0BA2  5B                    1	                pop    bx 
    3586 0BA3  58                    1	                pop    ax 
    3587				                            COLOUR_CHAR
					 0,  00001111b, 19d 
    3588 0BA4  50                    1	                push    ax 
    3589 0BA5  53                    1	                push    bx 
    3590 0BA6  51                    1	                push    cx 
    3591 0BA7  52                    1	                push    dx 
    3592 0BA8  33 DB                 1	                xor     bx,bx 
    3593 0BAA  B9 0013               1	                mov cx, 19d 
    3594 0BAD  B0 00                 1	                mov al, 0 
    3595 0BAF  B3 0F                 1	                mov bl, 00001111b 
    3596 0BB1  B4 09                 1	                mov ah, 09h 
    3597 0BB3  CD 10                 1	                int 10h 
    3598 0BB5  5A                    1	                pop    dx 
    3599 0BB6  59                    1	                pop    cx 
    3600 0BB7  5B                    1	                pop    bx 
    3601 0BB8  58                    1	                pop    ax 
    3602 0BB9  8D 16 1B8D R		                            lea        
					 dx, customerMenuStr2 
    3603 0BBD  E8 173A R		                            call       
					 PRINT_STR 
    3604				 
    3605				                            CURSOR     
					 15, 29 
    3606 0BC0  50                    1	                push    ax 
    3607 0BC1  53                    1	                push    bx 
    3608 0BC2  51                    1	                push    cx 
    3609 0BC3  52                    1	                push    dx 
    3610 0BC4  B6 0F                 1	                mov dh, 15        ;row 
    3611 0BC6  B2 1D                 1	                mov dl, 29       ;colum
					n 
    3612 0BC8  B7 00                 1	                mov bh, 0         ; 
    3613 0BCA  B4 02                 1	                mov ah, 02h       ; 
    3614 0BCC  CD 10                 1	                int 10h 
    3615 0BCE  5A                    1	                pop    dx 
    3616 0BCF  59                    1	                pop    cx 
    3617 0BD0  5B                    1	                pop    bx 
    3618 0BD1  58                    1	                pop    ax 
    3619				                            COLOUR_CHAR
					 0,  00001010b, 15d 
    3620 0BD2  50                    1	                push    ax 
    3621 0BD3  53                    1	                push    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-88


    3622 0BD4  51                    1	                push    cx 
    3623 0BD5  52                    1	                push    dx 
    3624 0BD6  33 DB                 1	                xor     bx,bx 
    3625 0BD8  B9 000F               1	                mov cx, 15d 
    3626 0BDB  B0 00                 1	                mov al, 0 
    3627 0BDD  B3 0A                 1	                mov bl, 00001010b 
    3628 0BDF  B4 09                 1	                mov ah, 09h 
    3629 0BE1  CD 10                 1	                int 10h 
    3630 0BE3  5A                    1	                pop    dx 
    3631 0BE4  59                    1	                pop    cx 
    3632 0BE5  5B                    1	                pop    bx 
    3633 0BE6  58                    1	                pop    ax 
    3634 0BE7  8D 16 1BA1 R		                            lea        
					 dx, customerMenuAdd 
    3635 0BEB  E8 173A R		                            call       
					 PRINT_STR 
    3636				 
    3637				                            CURSOR     
					 16, 29 
    3638 0BEE  50                    1	                push    ax 
    3639 0BEF  53                    1	                push    bx 
    3640 0BF0  51                    1	                push    cx 
    3641 0BF1  52                    1	                push    dx 
    3642 0BF2  B6 10                 1	                mov dh, 16        ;row 
    3643 0BF4  B2 1D                 1	                mov dl, 29       ;colum
					n 
    3644 0BF6  B7 00                 1	                mov bh, 0         ; 
    3645 0BF8  B4 02                 1	                mov ah, 02h       ; 
    3646 0BFA  CD 10                 1	                int 10h 
    3647 0BFC  5A                    1	                pop    dx 
    3648 0BFD  59                    1	                pop    cx 
    3649 0BFE  5B                    1	                pop    bx 
    3650 0BFF  58                    1	                pop    ax 
    3651				                            COLOUR_CHAR
					 0,  00001010b, 15d 
    3652 0C00  50                    1	                push    ax 
    3653 0C01  53                    1	                push    bx 
    3654 0C02  51                    1	                push    cx 
    3655 0C03  52                    1	                push    dx 
    3656 0C04  33 DB                 1	                xor     bx,bx 
    3657 0C06  B9 000F               1	                mov cx, 15d 
    3658 0C09  B0 00                 1	                mov al, 0 
    3659 0C0B  B3 0A                 1	                mov bl, 00001010b 
    3660 0C0D  B4 09                 1	                mov ah, 09h 
    3661 0C0F  CD 10                 1	                int 10h 
    3662 0C11  5A                    1	                pop    dx 
    3663 0C12  59                    1	                pop    cx 
    3664 0C13  5B                    1	                pop    bx 
    3665 0C14  58                    1	                pop    ax 
    3666 0C15  8D 16 1BB1 R		                            lea        
					 dx, customerMenuDisplay 
    3667 0C19  E8 173A R		                            call       
					 PRINT_STR 
    3668				 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-89


    3669				                            CURSOR     
					 17, 29 
    3670 0C1C  50                    1	                push    ax 
    3671 0C1D  53                    1	                push    bx 
    3672 0C1E  51                    1	                push    cx 
    3673 0C1F  52                    1	                push    dx 
    3674 0C20  B6 11                 1	                mov dh, 17        ;row 
    3675 0C22  B2 1D                 1	                mov dl, 29       ;colum
					n 
    3676 0C24  B7 00                 1	                mov bh, 0         ; 
    3677 0C26  B4 02                 1	                mov ah, 02h       ; 
    3678 0C28  CD 10                 1	                int 10h 
    3679 0C2A  5A                    1	                pop    dx 
    3680 0C2B  59                    1	                pop    cx 
    3681 0C2C  5B                    1	                pop    bx 
    3682 0C2D  58                    1	                pop    ax 
    3683				                            COLOUR_CHAR
					 0,  00001010b, 15d 
    3684 0C2E  50                    1	                push    ax 
    3685 0C2F  53                    1	                push    bx 
    3686 0C30  51                    1	                push    cx 
    3687 0C31  52                    1	                push    dx 
    3688 0C32  33 DB                 1	                xor     bx,bx 
    3689 0C34  B9 000F               1	                mov cx, 15d 
    3690 0C37  B0 00                 1	                mov al, 0 
    3691 0C39  B3 0A                 1	                mov bl, 00001010b 
    3692 0C3B  B4 09                 1	                mov ah, 09h 
    3693 0C3D  CD 10                 1	                int 10h 
    3694 0C3F  5A                    1	                pop    dx 
    3695 0C40  59                    1	                pop    cx 
    3696 0C41  5B                    1	                pop    bx 
    3697 0C42  58                    1	                pop    ax 
    3698 0C43  8D 16 1BC1 R		                            lea        
					 dx, customerMenuRemove 
    3699 0C47  E8 173A R		                            call       
					 PRINT_STR 
    3700				 
    3701				                            CURSOR     
					 18, 29 
    3702 0C4A  50                    1	                push    ax 
    3703 0C4B  53                    1	                push    bx 
    3704 0C4C  51                    1	                push    cx 
    3705 0C4D  52                    1	                push    dx 
    3706 0C4E  B6 12                 1	                mov dh, 18        ;row 
    3707 0C50  B2 1D                 1	                mov dl, 29       ;colum
					n 
    3708 0C52  B7 00                 1	                mov bh, 0         ; 
    3709 0C54  B4 02                 1	                mov ah, 02h       ; 
    3710 0C56  CD 10                 1	                int 10h 
    3711 0C58  5A                    1	                pop    dx 
    3712 0C59  59                    1	                pop    cx 
    3713 0C5A  5B                    1	                pop    bx 
    3714 0C5B  58                    1	                pop    ax 
    3715				                            COLOUR_CHAR
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-90


					 0,  00001010b, 15d 
    3716 0C5C  50                    1	                push    ax 
    3717 0C5D  53                    1	                push    bx 
    3718 0C5E  51                    1	                push    cx 
    3719 0C5F  52                    1	                push    dx 
    3720 0C60  33 DB                 1	                xor     bx,bx 
    3721 0C62  B9 000F               1	                mov cx, 15d 
    3722 0C65  B0 00                 1	                mov al, 0 
    3723 0C67  B3 0A                 1	                mov bl, 00001010b 
    3724 0C69  B4 09                 1	                mov ah, 09h 
    3725 0C6B  CD 10                 1	                int 10h 
    3726 0C6D  5A                    1	                pop    dx 
    3727 0C6E  59                    1	                pop    cx 
    3728 0C6F  5B                    1	                pop    bx 
    3729 0C70  58                    1	                pop    ax 
    3730 0C71  8D 16 1BD0 R		                            lea        
					 dx, customerMenuExit 
    3731 0C75  E8 173A R		                            call       
					 PRINT_STR 
    3732				 
    3733 0C78  C3			                            ret 
    3734 0C79				CUSTOMER_MENU       ENDP 
    3735				 
    3736 0C79				ADD_CUSTOMER        PROC 
    3737				                            CURSOR     
					 0,0 
    3738 0C79  50                    1	                push    ax 
    3739 0C7A  53                    1	                push    bx 
    3740 0C7B  51                    1	                push    cx 
    3741 0C7C  52                    1	                push    dx 
    3742 0C7D  B6 00                 1	                mov dh, 0        ;row 
    3743 0C7F  B2 00                 1	                mov dl, 0       ;column
					 
    3744 0C81  B7 00                 1	                mov bh, 0         ; 
    3745 0C83  B4 02                 1	                mov ah, 02h       ; 
    3746 0C85  CD 10                 1	                int 10h 
    3747 0C87  5A                    1	                pop    dx 
    3748 0C88  59                    1	                pop    cx 
    3749 0C89  5B                    1	                pop    bx 
    3750 0C8A  58                    1	                pop    ax 
    3751				 
    3752				                            COLOUR_CHAR
					 0, 00001011b, 380d 
    3753 0C8B  50                    1	                push    ax 
    3754 0C8C  53                    1	                push    bx 
    3755 0C8D  51                    1	                push    cx 
    3756 0C8E  52                    1	                push    dx 
    3757 0C8F  33 DB                 1	                xor     bx,bx 
    3758 0C91  B9 017C               1	                mov cx, 380d 
    3759 0C94  B0 00                 1	                mov al, 0 
    3760 0C96  B3 0B                 1	                mov bl, 00001011b 
    3761 0C98  B4 09                 1	                mov ah, 09h 
    3762 0C9A  CD 10                 1	                int 10h 
    3763 0C9C  5A                    1	                pop    dx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-91


    3764 0C9D  59                    1	                pop    cx 
    3765 0C9E  5B                    1	                pop    bx 
    3766 0C9F  58                    1	                pop    ax 
    3767				 
    3768 0CA0  8D 16 1C0D R		                            lea        
					 dx, customerHeader 
    3769 0CA4  E8 173A R		                            call       
					 PRINT_STR 
    3770				 
    3771 0CA7  E8 17D2 R		                            call       
					 NEWLINE 
    3772 0CAA  E8 17D2 R		                            call       
					 NEWLINE    
    3773				 
    3774				                            COLOUR_CHAR
					 0, 00001110b, 1100d 
    3775 0CAD  50                    1	                push    ax 
    3776 0CAE  53                    1	                push    bx 
    3777 0CAF  51                    1	                push    cx 
    3778 0CB0  52                    1	                push    dx 
    3779 0CB1  33 DB                 1	                xor     bx,bx 
    3780 0CB3  B9 044C               1	                mov cx, 1100d 
    3781 0CB6  B0 00                 1	                mov al, 0 
    3782 0CB8  B3 0E                 1	                mov bl, 00001110b 
    3783 0CBA  B4 09                 1	                mov ah, 09h 
    3784 0CBC  CD 10                 1	                int 10h 
    3785 0CBE  5A                    1	                pop    dx 
    3786 0CBF  59                    1	                pop    cx 
    3787 0CC0  5B                    1	                pop    bx 
    3788 0CC1  58                    1	                pop    ax 
    3789				                             
    3790 0CC2  8D 16 1D6E R		                            lea        
					 dx, custInputBorder                   
					       
    3791 0CC6  E8 173A R		                            call       
					 PRINT_STR 
    3792				 
    3793				                            ;set cursor
					:  
    3794				                            CURSOR     
					 6,  2 
    3795 0CC9  50                    1	                push    ax 
    3796 0CCA  53                    1	                push    bx 
    3797 0CCB  51                    1	                push    cx 
    3798 0CCC  52                    1	                push    dx 
    3799 0CCD  B6 06                 1	                mov dh, 6        ;row 
    3800 0CCF  B2 02                 1	                mov dl, 2       ;column
					 
    3801 0CD1  B7 00                 1	                mov bh, 0         ; 
    3802 0CD3  B4 02                 1	                mov ah, 02h       ; 
    3803 0CD5  CD 10                 1	                int 10h 
    3804 0CD7  5A                    1	                pop    dx 
    3805 0CD8  59                    1	                pop    cx 
    3806 0CD9  5B                    1	                pop    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-92


    3807 0CDA  58                    1	                pop    ax 
    3808				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    3809 0CDB  50                    1	                push    ax 
    3810 0CDC  53                    1	                push    bx 
    3811 0CDD  51                    1	                push    cx 
    3812 0CDE  52                    1	                push    dx 
    3813 0CDF  33 DB                 1	                xor     bx,bx 
    3814 0CE1  B9 0019               1	                mov cx, 25d 
    3815 0CE4  B0 00                 1	                mov al, 0 
    3816 0CE6  B3 0F                 1	                mov bl, 00001111b 
    3817 0CE8  B4 09                 1	                mov ah, 09h 
    3818 0CEA  CD 10                 1	                int 10h 
    3819 0CEC  5A                    1	                pop    dx 
    3820 0CED  59                    1	                pop    cx 
    3821 0CEE  5B                    1	                pop    bx 
    3822 0CEF  58                    1	                pop    ax 
    3823				 
    3824 0CF0  8D 16 1CDA R		                            lea        
					 dx  ,promptCustomerID 
    3825 0CF4  E8 173A R		                            call       
					 PRINT_STR 
    3826				 
    3827				                            CURSOR     
					 8, 2 
    3828 0CF7  50                    1	                push    ax 
    3829 0CF8  53                    1	                push    bx 
    3830 0CF9  51                    1	                push    cx 
    3831 0CFA  52                    1	                push    dx 
    3832 0CFB  B6 08                 1	                mov dh, 8        ;row 
    3833 0CFD  B2 02                 1	                mov dl, 2       ;column
					 
    3834 0CFF  B7 00                 1	                mov bh, 0         ; 
    3835 0D01  B4 02                 1	                mov ah, 02h       ; 
    3836 0D03  CD 10                 1	                int 10h 
    3837 0D05  5A                    1	                pop    dx 
    3838 0D06  59                    1	                pop    cx 
    3839 0D07  5B                    1	                pop    bx 
    3840 0D08  58                    1	                pop    ax 
    3841				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    3842 0D09  50                    1	                push    ax 
    3843 0D0A  53                    1	                push    bx 
    3844 0D0B  51                    1	                push    cx 
    3845 0D0C  52                    1	                push    dx 
    3846 0D0D  33 DB                 1	                xor     bx,bx 
    3847 0D0F  B9 0019               1	                mov cx, 25d 
    3848 0D12  B0 00                 1	                mov al, 0 
    3849 0D14  B3 0F                 1	                mov bl, 00001111b 
    3850 0D16  B4 09                 1	                mov ah, 09h 
    3851 0D18  CD 10                 1	                int 10h 
    3852 0D1A  5A                    1	                pop    dx 
    3853 0D1B  59                    1	                pop    cx 
    3854 0D1C  5B                    1	                pop    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-93


    3855 0D1D  58                    1	                pop    ax 
    3856				 
    3857 0D1E  8D 16 1CE8 R		                            lea        
					 dx, promptCustomerName 
    3858 0D22  E8 173A R		                            call       
					 PRINT_STR 
    3859				 
    3860				                            CURSOR     
					 10, 2 
    3861 0D25  50                    1	                push    ax 
    3862 0D26  53                    1	                push    bx 
    3863 0D27  51                    1	                push    cx 
    3864 0D28  52                    1	                push    dx 
    3865 0D29  B6 0A                 1	                mov dh, 10        ;row 
    3866 0D2B  B2 02                 1	                mov dl, 2       ;column
					 
    3867 0D2D  B7 00                 1	                mov bh, 0         ; 
    3868 0D2F  B4 02                 1	                mov ah, 02h       ; 
    3869 0D31  CD 10                 1	                int 10h 
    3870 0D33  5A                    1	                pop    dx 
    3871 0D34  59                    1	                pop    cx 
    3872 0D35  5B                    1	                pop    bx 
    3873 0D36  58                    1	                pop    ax 
    3874				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    3875 0D37  50                    1	                push    ax 
    3876 0D38  53                    1	                push    bx 
    3877 0D39  51                    1	                push    cx 
    3878 0D3A  52                    1	                push    dx 
    3879 0D3B  33 DB                 1	                xor     bx,bx 
    3880 0D3D  B9 0019               1	                mov cx, 25d 
    3881 0D40  B0 00                 1	                mov al, 0 
    3882 0D42  B3 0F                 1	                mov bl, 00001111b 
    3883 0D44  B4 09                 1	                mov ah, 09h 
    3884 0D46  CD 10                 1	                int 10h 
    3885 0D48  5A                    1	                pop    dx 
    3886 0D49  59                    1	                pop    cx 
    3887 0D4A  5B                    1	                pop    bx 
    3888 0D4B  58                    1	                pop    ax 
    3889				 
    3890 0D4C  8D 16 1CF8 R		                            lea        
					 dx, promptCustomerAge 
    3891 0D50  E8 173A R		                            call       
					 PRINT_STR 
    3892				 
    3893				                            CURSOR     
					 12, 2 
    3894 0D53  50                    1	                push    ax 
    3895 0D54  53                    1	                push    bx 
    3896 0D55  51                    1	                push    cx 
    3897 0D56  52                    1	                push    dx 
    3898 0D57  B6 0C                 1	                mov dh, 12        ;row 
    3899 0D59  B2 02                 1	                mov dl, 2       ;column
					 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-94


    3900 0D5B  B7 00                 1	                mov bh, 0         ; 
    3901 0D5D  B4 02                 1	                mov ah, 02h       ; 
    3902 0D5F  CD 10                 1	                int 10h 
    3903 0D61  5A                    1	                pop    dx 
    3904 0D62  59                    1	                pop    cx 
    3905 0D63  5B                    1	                pop    bx 
    3906 0D64  58                    1	                pop    ax 
    3907				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    3908 0D65  50                    1	                push    ax 
    3909 0D66  53                    1	                push    bx 
    3910 0D67  51                    1	                push    cx 
    3911 0D68  52                    1	                push    dx 
    3912 0D69  33 DB                 1	                xor     bx,bx 
    3913 0D6B  B9 0019               1	                mov cx, 25d 
    3914 0D6E  B0 00                 1	                mov al, 0 
    3915 0D70  B3 0F                 1	                mov bl, 00001111b 
    3916 0D72  B4 09                 1	                mov ah, 09h 
    3917 0D74  CD 10                 1	                int 10h 
    3918 0D76  5A                    1	                pop    dx 
    3919 0D77  59                    1	                pop    cx 
    3920 0D78  5B                    1	                pop    bx 
    3921 0D79  58                    1	                pop    ax 
    3922				 
    3923 0D7A  8D 16 1D07 R		                            lea        
					 dx, promptCustomerPhone 
    3924 0D7E  E8 173A R		                            call       
					 PRINT_STR 
    3925				 
    3926				                            CURSOR     
					 14, 2 
    3927 0D81  50                    1	                push    ax 
    3928 0D82  53                    1	                push    bx 
    3929 0D83  51                    1	                push    cx 
    3930 0D84  52                    1	                push    dx 
    3931 0D85  B6 0E                 1	                mov dh, 14        ;row 
    3932 0D87  B2 02                 1	                mov dl, 2       ;column
					 
    3933 0D89  B7 00                 1	                mov bh, 0         ; 
    3934 0D8B  B4 02                 1	                mov ah, 02h       ; 
    3935 0D8D  CD 10                 1	                int 10h 
    3936 0D8F  5A                    1	                pop    dx 
    3937 0D90  59                    1	                pop    cx 
    3938 0D91  5B                    1	                pop    bx 
    3939 0D92  58                    1	                pop    ax 
    3940				                            COLOUR_CHAR
					 0, 00001111b, 25d 
    3941 0D93  50                    1	                push    ax 
    3942 0D94  53                    1	                push    bx 
    3943 0D95  51                    1	                push    cx 
    3944 0D96  52                    1	                push    dx 
    3945 0D97  33 DB                 1	                xor     bx,bx 
    3946 0D99  B9 0019               1	                mov cx, 25d 
    3947 0D9C  B0 00                 1	                mov al, 0 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-95


    3948 0D9E  B3 0F                 1	                mov bl, 00001111b 
    3949 0DA0  B4 09                 1	                mov ah, 09h 
    3950 0DA2  CD 10                 1	                int 10h 
    3951 0DA4  5A                    1	                pop    dx 
    3952 0DA5  59                    1	                pop    cx 
    3953 0DA6  5B                    1	                pop    bx 
    3954 0DA7  58                    1	                pop    ax 
    3955				 
    3956 0DA8  8D 16 1D18 R		                            lea        
					 dx, promptCustPoint 
    3957 0DAC  E8 173A R		                            call       
					 PRINT_STR 
    3958				 
    3959 0DAF				                            customerEnt
					er: 
    3960				                            ;;;compare 
					if is full 
    3961 0DAF  8A 0E 22C5 R		                                       
					 mov         cl, [customerCount] 
    3962 0DB3  80 F9 05			                                       
					 cmp         cl, maxCustNum 
    3963 0DB6  73 6B			                                       
					 jae         customerFull 
    3964				 
    3965				                                       
					 ;;;offset to address of empty customer
					 (if exists) 
    3966 0DB8  8D 36 22C6 R		                                       
					 lea         si, customerArr 
    3967 0DBC  B9 0005			                                       
					 mov         cx, maxCustNum 
    3968 0DBF				                                       
					 findEmptyCust: 
    3969 0DBF  8A 14			                                       
					             mov     dl, [si] 
    3970 0DC1  80 FA 24			                                       
					             cmp     dl, "$"           
					  ;if found empty customer element 
    3971 0DC4  74 08			                                       
					             je      findEmptyCustEnd 
    3972				 
    3973 0DC6  83 C6 30			                                       
					             add     si, customerSize  
					  
    3974				 
    3975 0DC9  E2 F4			                                       
					             loop    findEmptyCust 
    3976 0DCB  EB 56 90			                                       
					             jmp     customerFull      
					  ;if cannot find, means full 
    3977 0DCE				                                       
					 findEmptyCustEnd: 
    3978 0DCE  E8 10DD R		                                       
					 call        CUST_DETAIL_INPUT 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-96


    3979				 
    3980 0DD1  8A 16 22C5 R		                                       
					 mov         dl, [customerCount] 
    3981 0DD5  FE C2			                                       
					 inc         dl 
    3982 0DD7  88 16 22C5 R		                                       
					 mov         [customerCount], dl 
    3983				 
    3984 0DDB  8A 0E 22C5 R		                                       
					 mov         cl, [customerCount] 
    3985 0DDF  80 F9 05			                                       
					 cmp         cl, maxCustNum 
    3986 0DE2  73 3F			                                       
					 jae          customerFull 
    3987				 
    3988				                                       
					 ;;continue input? 
    3989 0DE4				                                       
					 customerEnterInput: 
    3990				                                       
					             CURSOR      18, 0 
    3991 0DE4  50                    1	                push    ax 
    3992 0DE5  53                    1	                push    bx 
    3993 0DE6  51                    1	                push    cx 
    3994 0DE7  52                    1	                push    dx 
    3995 0DE8  B6 12                 1	                mov dh, 18        ;row 
    3996 0DEA  B2 00                 1	                mov dl, 0       ;column
					 
    3997 0DEC  B7 00                 1	                mov bh, 0         ; 
    3998 0DEE  B4 02                 1	                mov ah, 02h       ; 
    3999 0DF0  CD 10                 1	                int 10h 
    4000 0DF2  5A                    1	                pop    dx 
    4001 0DF3  59                    1	                pop    cx 
    4002 0DF4  5B                    1	                pop    bx 
    4003 0DF5  58                    1	                pop    ax 
    4004				                                       
					             COLOUR_CHAR 0, 00001011b, 
					  40 
    4005 0DF6  50                    1	                push    ax 
    4006 0DF7  53                    1	                push    bx 
    4007 0DF8  51                    1	                push    cx 
    4008 0DF9  52                    1	                push    dx 
    4009 0DFA  33 DB                 1	                xor     bx,bx 
    4010 0DFC  B9 0028               1	                mov cx, 40 
    4011 0DFF  B0 00                 1	                mov al, 0 
    4012 0E01  B3 0B                 1	                mov bl, 00001011b 
    4013 0E03  B4 09                 1	                mov ah, 09h 
    4014 0E05  CD 10                 1	                int 10h 
    4015 0E07  5A                    1	                pop    dx 
    4016 0E08  59                    1	                pop    cx 
    4017 0E09  5B                    1	                pop    bx 
    4018 0E0A  58                    1	                pop    ax 
    4019 0E0B  8D 16 1D3D R		                                       
					             lea         dx, promptCust
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-97


					ContinueAdd 
    4020 0E0F  E8 173A R		                                       
					             call        PRINT_STR 
    4021				 
    4022 0E12  B4 01			                                       
					             mov         ah, 01h 
    4023 0E14  CD 21			                                       
					             int         21h 
    4024				 
    4025 0E16  3C 6E			                                       
					             cmp         al, "n" 
    4026 0E18  74 1E			                                       
					             je          customerEnterE
					xit 
    4027				 
    4028 0E1A  3C 79			                                       
					             cmp         al, "y" 
    4029 0E1C  75 C6			                                       
					             jne         customerEnterI
					nput 
    4030				 
    4031 0E1E  E8 1019 R		                                       
					 call        CLEAR_CUST_INPUT 
    4032 0E21  EB 8C			                                       
					 jmp         customerEnter 
    4033				 
    4034 0E23				                            customerFul
					l: 
    4035				                                       
					 CURSOR      0,0 
    4036 0E23  50                    1	                push    ax 
    4037 0E24  53                    1	                push    bx 
    4038 0E25  51                    1	                push    cx 
    4039 0E26  52                    1	                push    dx 
    4040 0E27  B6 00                 1	                mov dh, 0        ;row 
    4041 0E29  B2 00                 1	                mov dl, 0       ;column
					 
    4042 0E2B  B7 00                 1	                mov bh, 0         ; 
    4043 0E2D  B4 02                 1	                mov ah, 02h       ; 
    4044 0E2F  CD 10                 1	                int 10h 
    4045 0E31  5A                    1	                pop    dx 
    4046 0E32  59                    1	                pop    cx 
    4047 0E33  5B                    1	                pop    bx 
    4048 0E34  58                    1	                pop    ax 
    4049 0E35  E8 0FD3 R		                                       
					 call        CUST_FULL_BOX 
    4050				 
    4051 0E38				                            customerEnt
					erExit: 
    4052				 
    4053 0E38  C3			                            ret 
    4054 0E39				ADD_CUSTOMER        ENDP 
    4055				 
    4056 0E39				REMOVE_CUSTOMER     PROC 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-98


    4057 0E39  E8 0E92 R		                        call        DIS
					PLAY_ALL_CUST 
    4058 0E3C  E8 12E1 R		                        call        CUS
					TOMER_NUMBERING      ;show numbering on
					 the customers 
    4059				 
    4060 0E3F				                        REMOVE_CUSTOMER
					_INPUT_LOOP: 
    4061				                                    CUR
					SOR      18, 0 
    4062 0E3F  50                    1	                push    ax 
    4063 0E40  53                    1	                push    bx 
    4064 0E41  51                    1	                push    cx 
    4065 0E42  52                    1	                push    dx 
    4066 0E43  B6 12                 1	                mov dh, 18        ;row 
    4067 0E45  B2 00                 1	                mov dl, 0       ;column
					 
    4068 0E47  B7 00                 1	                mov bh, 0         ; 
    4069 0E49  B4 02                 1	                mov ah, 02h       ; 
    4070 0E4B  CD 10                 1	                int 10h 
    4071 0E4D  5A                    1	                pop    dx 
    4072 0E4E  59                    1	                pop    cx 
    4073 0E4F  5B                    1	                pop    bx 
    4074 0E50  58                    1	                pop    ax 
    4075 0E51  8D 16 22A3 R		                                    lea
					         dx, customerRemovePrompt 
    4076 0E55  E8 173A R		                                    cal
					l        PRINT_STR 
    4077				 
    4078 0E58  B4 01			                                    mov
					         ah, 01h 
    4079 0E5A  CD 21			                                    int
					         21h 
    4080				 
    4081 0E5C  32 E4			                                    xor
					         ah,ah 
    4082 0E5E  2C 30			                                    sub
					         al, 48d     ;convert into valu
					e 
    4083 0E60  FE C8			                                    dec
					         al          ;dec 1 
    4084				 
    4085 0E62  3C 00			                                    cmp
					         al, 0 
    4086 0E64  72 D9			                                    jb 
					         REMOVE_CUSTOMER_INPUT_LOOP 
    4087				 
    4088 0E66  3C 05			                                    cmp
					         al, maxCustNum 
    4089 0E68  73 D5			                                    jae
					         REMOVE_CUSTOMER_INPUT_LOOP 
    4090				 
    4091 0E6A  8D 36 22C6 R		                        lea         si,
					 customerArr 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-99


    4092 0E6E  BB 0030			                        mov         bx,
					 customerSize 
    4093 0E71  F7 E3			                        mul         bx 
    4094 0E73  03 F0			                        add         si,
					 ax 
    4095 0E75  E8 0E79 R		                        call        REM
					OVE_SI_CUST 
    4096				 
    4097 0E78  C3			                        ret 
    4098 0E79				REMOVE_CUSTOMER     ENDP 
    4099				 
    4100 0E79				REMOVE_SI_CUST      PROC 
    4101 0E79  8A 04			                        mov         al,
					 [si] 
    4102 0E7B  3C 24			                        cmp         al,
					 "$" 
    4103 0E7D  74 12			                        je          REM
					OVE_SI_CUST_EXIT 
    4104				 
    4105 0E7F  B9 0030			                        mov         cx,
					 customerSize 
    4106 0E82  B0 24			                        mov         al,
					 "$" 
    4107 0E84				                        REMOVE_SI_CUST_
					LOOP: 
    4108 0E84  88 04			                                    mov
					     [si],   al 
    4109 0E86  46			                                    inc
					     si 
    4110 0E87  E2 FB			                                    loo
					p    REMOVE_SI_CUST_LOOP 
    4111				 
    4112				 
    4113 0E89  A0 22C5 R		                        mov         al,
					 [customerCount] 
    4114 0E8C  FE C8			                        dec         al 
    4115 0E8E  A2 22C5 R		                        MOV         [cu
					stomerCount],    al 
    4116				 
    4117 0E91				                        REMOVE_SI_CUST_
					EXIT: 
    4118 0E91  C3			                        ret 
    4119 0E92				REMOVE_SI_CUST      ENDP 
    4120				 
    4121 0E92				DISPLAY_ALL_CUST    PROC            ;di
					splay customerArr 
    4122				                            CURSOR     
					 2,0 
    4123 0E92  50                    1	                push    ax 
    4124 0E93  53                    1	                push    bx 
    4125 0E94  51                    1	                push    cx 
    4126 0E95  52                    1	                push    dx 
    4127 0E96  B6 02                 1	                mov dh, 2        ;row 
    4128 0E98  B2 00                 1	                mov dl, 0       ;column
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-100


					 
    4129 0E9A  B7 00                 1	                mov bh, 0         ; 
    4130 0E9C  B4 02                 1	                mov ah, 02h       ; 
    4131 0E9E  CD 10                 1	                int 10h 
    4132 0EA0  5A                    1	                pop    dx 
    4133 0EA1  59                    1	                pop    cx 
    4134 0EA2  5B                    1	                pop    bx 
    4135 0EA3  58                    1	                pop    ax 
    4136 0EA4  8D 16 1F60 R		                            lea        
					 dx, custDisplayBorder 
    4137 0EA8  E8 173A R		                            call       
					 PRINT_STR 
    4138				 
    4139				                            CURSOR     
					 3,2 
    4140 0EAB  50                    1	                push    ax 
    4141 0EAC  53                    1	                push    bx 
    4142 0EAD  51                    1	                push    cx 
    4143 0EAE  52                    1	                push    dx 
    4144 0EAF  B6 03                 1	                mov dh, 3        ;row 
    4145 0EB1  B2 02                 1	                mov dl, 2       ;column
					 
    4146 0EB3  B7 00                 1	                mov bh, 0         ; 
    4147 0EB5  B4 02                 1	                mov ah, 02h       ; 
    4148 0EB7  CD 10                 1	                int 10h 
    4149 0EB9  5A                    1	                pop    dx 
    4150 0EBA  59                    1	                pop    cx 
    4151 0EBB  5B                    1	                pop    bx 
    4152 0EBC  58                    1	                pop    ax 
    4153				                            COLOUR_CHAR
					 0,  00001011b,  3 
    4154 0EBD  50                    1	                push    ax 
    4155 0EBE  53                    1	                push    bx 
    4156 0EBF  51                    1	                push    cx 
    4157 0EC0  52                    1	                push    dx 
    4158 0EC1  33 DB                 1	                xor     bx,bx 
    4159 0EC3  B9 0003               1	                mov cx, 3 
    4160 0EC6  B0 00                 1	                mov al, 0 
    4161 0EC8  B3 0B                 1	                mov bl, 00001011b 
    4162 0ECA  B4 09                 1	                mov ah, 09h 
    4163 0ECC  CD 10                 1	                int 10h 
    4164 0ECE  5A                    1	                pop    dx 
    4165 0ECF  59                    1	                pop    cx 
    4166 0ED0  5B                    1	                pop    bx 
    4167 0ED1  58                    1	                pop    ax 
    4168 0ED2  8D 16 1F47 R		                            lea        
					 dx, customerIDHeader 
    4169 0ED6  E8 173A R		                            call       
					 PRINT_STR 
    4170				 
    4171				                            CURSOR     
					 3,11 
    4172 0ED9  50                    1	                push    ax 
    4173 0EDA  53                    1	                push    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-101


    4174 0EDB  51                    1	                push    cx 
    4175 0EDC  52                    1	                push    dx 
    4176 0EDD  B6 03                 1	                mov dh, 3        ;row 
    4177 0EDF  B2 0B                 1	                mov dl, 11       ;colum
					n 
    4178 0EE1  B7 00                 1	                mov bh, 0         ; 
    4179 0EE3  B4 02                 1	                mov ah, 02h       ; 
    4180 0EE5  CD 10                 1	                int 10h 
    4181 0EE7  5A                    1	                pop    dx 
    4182 0EE8  59                    1	                pop    cx 
    4183 0EE9  5B                    1	                pop    bx 
    4184 0EEA  58                    1	                pop    ax 
    4185				                            COLOUR_CHAR
					 0,  00001011b,  10 
    4186 0EEB  50                    1	                push    ax 
    4187 0EEC  53                    1	                push    bx 
    4188 0EED  51                    1	                push    cx 
    4189 0EEE  52                    1	                push    dx 
    4190 0EEF  33 DB                 1	                xor     bx,bx 
    4191 0EF1  B9 000A               1	                mov cx, 10 
    4192 0EF4  B0 00                 1	                mov al, 0 
    4193 0EF6  B3 0B                 1	                mov bl, 00001011b 
    4194 0EF8  B4 09                 1	                mov ah, 09h 
    4195 0EFA  CD 10                 1	                int 10h 
    4196 0EFC  5A                    1	                pop    dx 
    4197 0EFD  59                    1	                pop    cx 
    4198 0EFE  5B                    1	                pop    bx 
    4199 0EFF  58                    1	                pop    ax 
    4200 0F00  8D 16 1F4A R		                            lea        
					 dx, customerNameHeader 
    4201 0F04  E8 173A R		                            call       
					 PRINT_STR 
    4202				 
    4203				                            CURSOR     
					 3,32 
    4204 0F07  50                    1	                push    ax 
    4205 0F08  53                    1	                push    bx 
    4206 0F09  51                    1	                push    cx 
    4207 0F0A  52                    1	                push    dx 
    4208 0F0B  B6 03                 1	                mov dh, 3        ;row 
    4209 0F0D  B2 20                 1	                mov dl, 32       ;colum
					n 
    4210 0F0F  B7 00                 1	                mov bh, 0         ; 
    4211 0F11  B4 02                 1	                mov ah, 02h       ; 
    4212 0F13  CD 10                 1	                int 10h 
    4213 0F15  5A                    1	                pop    dx 
    4214 0F16  59                    1	                pop    cx 
    4215 0F17  5B                    1	                pop    bx 
    4216 0F18  58                    1	                pop    ax 
    4217				                            COLOUR_CHAR
					 0,  00001011b,  3 
    4218 0F19  50                    1	                push    ax 
    4219 0F1A  53                    1	                push    bx 
    4220 0F1B  51                    1	                push    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-102


    4221 0F1C  52                    1	                push    dx 
    4222 0F1D  33 DB                 1	                xor     bx,bx 
    4223 0F1F  B9 0003               1	                mov cx, 3 
    4224 0F22  B0 00                 1	                mov al, 0 
    4225 0F24  B3 0B                 1	                mov bl, 00001011b 
    4226 0F26  B4 09                 1	                mov ah, 09h 
    4227 0F28  CD 10                 1	                int 10h 
    4228 0F2A  5A                    1	                pop    dx 
    4229 0F2B  59                    1	                pop    cx 
    4230 0F2C  5B                    1	                pop    bx 
    4231 0F2D  58                    1	                pop    ax 
    4232 0F2E  8D 16 1F4F R		                            lea        
					 dx, customerAgeHeader 
    4233 0F32  E8 173A R		                            call       
					 PRINT_STR 
    4234				 
    4235				                            CURSOR     
					 3,38 
    4236 0F35  50                    1	                push    ax 
    4237 0F36  53                    1	                push    bx 
    4238 0F37  51                    1	                push    cx 
    4239 0F38  52                    1	                push    dx 
    4240 0F39  B6 03                 1	                mov dh, 3        ;row 
    4241 0F3B  B2 26                 1	                mov dl, 38       ;colum
					n 
    4242 0F3D  B7 00                 1	                mov bh, 0         ; 
    4243 0F3F  B4 02                 1	                mov ah, 02h       ; 
    4244 0F41  CD 10                 1	                int 10h 
    4245 0F43  5A                    1	                pop    dx 
    4246 0F44  59                    1	                pop    cx 
    4247 0F45  5B                    1	                pop    bx 
    4248 0F46  58                    1	                pop    ax 
    4249				                            COLOUR_CHAR
					 0,  00001011b,  10 
    4250 0F47  50                    1	                push    ax 
    4251 0F48  53                    1	                push    bx 
    4252 0F49  51                    1	                push    cx 
    4253 0F4A  52                    1	                push    dx 
    4254 0F4B  33 DB                 1	                xor     bx,bx 
    4255 0F4D  B9 000A               1	                mov cx, 10 
    4256 0F50  B0 00                 1	                mov al, 0 
    4257 0F52  B3 0B                 1	                mov bl, 00001011b 
    4258 0F54  B4 09                 1	                mov ah, 09h 
    4259 0F56  CD 10                 1	                int 10h 
    4260 0F58  5A                    1	                pop    dx 
    4261 0F59  59                    1	                pop    cx 
    4262 0F5A  5B                    1	                pop    bx 
    4263 0F5B  58                    1	                pop    ax 
    4264 0F5C  8D 16 1F53 R		                            lea        
					 dx, customerPhoneHeader 
    4265 0F60  E8 173A R		                            call       
					 PRINT_STR 
    4266				 
    4267				                            CURSOR     
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-103


					 3,52 
    4268 0F63  50                    1	                push    ax 
    4269 0F64  53                    1	                push    bx 
    4270 0F65  51                    1	                push    cx 
    4271 0F66  52                    1	                push    dx 
    4272 0F67  B6 03                 1	                mov dh, 3        ;row 
    4273 0F69  B2 34                 1	                mov dl, 52       ;colum
					n 
    4274 0F6B  B7 00                 1	                mov bh, 0         ; 
    4275 0F6D  B4 02                 1	                mov ah, 02h       ; 
    4276 0F6F  CD 10                 1	                int 10h 
    4277 0F71  5A                    1	                pop    dx 
    4278 0F72  59                    1	                pop    cx 
    4279 0F73  5B                    1	                pop    bx 
    4280 0F74  58                    1	                pop    ax 
    4281				                            COLOUR_CHAR
					 0,  00001011b,  7 
    4282 0F75  50                    1	                push    ax 
    4283 0F76  53                    1	                push    bx 
    4284 0F77  51                    1	                push    cx 
    4285 0F78  52                    1	                push    dx 
    4286 0F79  33 DB                 1	                xor     bx,bx 
    4287 0F7B  B9 0007               1	                mov cx, 7 
    4288 0F7E  B0 00                 1	                mov al, 0 
    4289 0F80  B3 0B                 1	                mov bl, 00001011b 
    4290 0F82  B4 09                 1	                mov ah, 09h 
    4291 0F84  CD 10                 1	                int 10h 
    4292 0F86  5A                    1	                pop    dx 
    4293 0F87  59                    1	                pop    cx 
    4294 0F88  5B                    1	                pop    bx 
    4295 0F89  58                    1	                pop    ax 
    4296 0F8A  8D 16 1F59 R		                            lea        
					 dx, customerPointHeader 
    4297 0F8E  E8 173A R		                            call       
					 PRINT_STR 
    4298				 
    4299 0F91  33 DB			                            xor        
					 bx, bx 
    4300 0F93  B3 03			                            mov        
					 bl, 3 
    4301				                            CURSOR     
					 3,20     
    4302 0F95  50                    1	                push    ax 
    4303 0F96  53                    1	                push    bx 
    4304 0F97  51                    1	                push    cx 
    4305 0F98  52                    1	                push    dx 
    4306 0F99  B6 03                 1	                mov dh, 3        ;row 
    4307 0F9B  B2 14                 1	                mov dl, 20       ;colum
					n 
    4308 0F9D  B7 00                 1	                mov bh, 0         ; 
    4309 0F9F  B4 02                 1	                mov ah, 02h       ; 
    4310 0FA1  CD 10                 1	                int 10h 
    4311 0FA3  5A                    1	                pop    dx 
    4312 0FA4  59                    1	                pop    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-104


    4313 0FA5  5B                    1	                pop    bx 
    4314 0FA6  58                    1	                pop    ax 
    4315 0FA7  8D 36 22C6 R		                            lea        
					 si ,customerArr         ;print all cus
					tomers 
    4316 0FAB  E8 122F R		                            call       
					 PRINT_ALL_CUST 
    4317				 
    4318				                            CURSOR     
					 18,0 
    4319 0FAE  50                    1	                push    ax 
    4320 0FAF  53                    1	                push    bx 
    4321 0FB0  51                    1	                push    cx 
    4322 0FB1  52                    1	                push    dx 
    4323 0FB2  B6 12                 1	                mov dh, 18        ;row 
    4324 0FB4  B2 00                 1	                mov dl, 0       ;column
					 
    4325 0FB6  B7 00                 1	                mov bh, 0         ; 
    4326 0FB8  B4 02                 1	                mov ah, 02h       ; 
    4327 0FBA  CD 10                 1	                int 10h 
    4328 0FBC  5A                    1	                pop    dx 
    4329 0FBD  59                    1	                pop    cx 
    4330 0FBE  5B                    1	                pop    bx 
    4331 0FBF  58                    1	                pop    ax 
    4332 0FC0  8D 16 1D58 R		                            lea        
					 dx, totalCustomersStr    
    4333 0FC4  E8 173A R		                            call       
					 PRINT_STR 
    4334				 
    4335 0FC7  8A 16 22C5 R		                            mov        
					 dl, [customerCount]     ;print number 
					of customer 
    4336 0FCB  80 C2 30			                            add        
					 dl, 48d 
    4337 0FCE  B4 02			                            mov        
					 ah, 02h 
    4338 0FD0  CD 21			                            int        
					 21h 
    4339				 
    4340 0FD2  C3			                            ret 
    4341 0FD3				DISPLAY_ALL_CUST    ENDP 
    4342				 
    4343 0FD3				CUST_FULL_BOX       PROC 
    4344				                            BG_16_COLOU
					R 
    4345 0FD3  50                    1	                push    ax 
    4346 0FD4  53                    1	                push    bx 
    4347 0FD5  51                    1	                push    cx 
    4348 0FD6  52                    1	                push    dx 
    4349 0FD7  33 C0                 1	                xor     ax,ax 
    4350 0FD9  33 DB                 1	                xor     bx,bx 
    4351 0FDB  33 C9                 1	                xor     cx,cx 
    4352 0FDD  33 D2                 1	                xor     dx,dx 
    4353 0FDF  B8 1003               1	                mov         ax, 1003h 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-105


    4354 0FE2  B3 00                 1	                mov         bl, 0000h  
					     ;enable 16 colours for background,
					 disable text blink 
    4355 0FE4  CD 10                 1	                int         10h 
    4356 0FE6  5A                    1	                pop    dx 
    4357 0FE7  59                    1	                pop    cx 
    4358 0FE8  5B                    1	                pop    bx 
    4359 0FE9  58                    1	                pop    ax 
    4360 0FEA  8D 36 2287 R		                            lea        
					 si, custFullBox1 
    4361 0FEE  E8 16E9 R		                            call       
					 DISPLAY_BOX 
    4362 0FF1  8D 36 228C R		                            lea        
					 si, custFullBox2 
    4363 0FF5  E8 16E9 R		                            call       
					 DISPLAY_BOX 
    4364 0FF8  8D 36 2291 R		                            lea        
					 si, custFullBox3 
    4365 0FFC  E8 16E9 R		                            call       
					 DISPLAY_BOX 
    4366				                            CURSOR     
					 8, 26 
    4367 0FFF  50                    1	                push    ax 
    4368 1000  53                    1	                push    bx 
    4369 1001  51                    1	                push    cx 
    4370 1002  52                    1	                push    dx 
    4371 1003  B6 08                 1	                mov dh, 8        ;row 
    4372 1005  B2 1A                 1	                mov dl, 26       ;colum
					n 
    4373 1007  B7 00                 1	                mov bh, 0         ; 
    4374 1009  B4 02                 1	                mov ah, 02h       ; 
    4375 100B  CD 10                 1	                int 10h 
    4376 100D  5A                    1	                pop    dx 
    4377 100E  59                    1	                pop    cx 
    4378 100F  5B                    1	                pop    bx 
    4379 1010  58                    1	                pop    ax 
    4380 1011  8D 16 1D29 R		                            lea        
					 dx, promptCustomerFull 
    4381 1015  E8 173A R		                            call       
					 PRINT_STR 
    4382 1018  C3			                            ret 
    4383 1019				CUST_FULL_BOX       ENDP 
    4384				 
    4385 1019				CLEAR_CUST_INPUT    PROC 
    4386				                        CURSOR      6, 
					15 
    4387 1019  50                    1	                push    ax 
    4388 101A  53                    1	                push    bx 
    4389 101B  51                    1	                push    cx 
    4390 101C  52                    1	                push    dx 
    4391 101D  B6 06                 1	                mov dh, 6        ;row 
    4392 101F  B2 0F                 1	                mov dl, 15       ;colum
					n 
    4393 1021  B7 00                 1	                mov bh, 0         ; 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-106


    4394 1023  B4 02                 1	                mov ah, 02h       ; 
    4395 1025  CD 10                 1	                int 10h 
    4396 1027  5A                    1	                pop    dx 
    4397 1028  59                    1	                pop    cx 
    4398 1029  5B                    1	                pop    bx 
    4399 102A  58                    1	                pop    ax 
    4400				                        COLOUR_CHAR " "
					, 00001010b, 20d 
    4401 102B  50                    1	                push    ax 
    4402 102C  53                    1	                push    bx 
    4403 102D  51                    1	                push    cx 
    4404 102E  52                    1	                push    dx 
    4405 102F  33 DB                 1	                xor     bx,bx 
    4406 1031  B9 0014               1	                mov cx, 20d 
    4407 1034  B0 20                 1	                mov al, " " 
    4408 1036  B3 0A                 1	                mov bl, 00001010b 
    4409 1038  B4 09                 1	                mov ah, 09h 
    4410 103A  CD 10                 1	                int 10h 
    4411 103C  5A                    1	                pop    dx 
    4412 103D  59                    1	                pop    cx 
    4413 103E  5B                    1	                pop    bx 
    4414 103F  58                    1	                pop    ax 
    4415				                        CURSOR      8, 
					17 
    4416 1040  50                    1	                push    ax 
    4417 1041  53                    1	                push    bx 
    4418 1042  51                    1	                push    cx 
    4419 1043  52                    1	                push    dx 
    4420 1044  B6 08                 1	                mov dh, 8        ;row 
    4421 1046  B2 11                 1	                mov dl, 17       ;colum
					n 
    4422 1048  B7 00                 1	                mov bh, 0         ; 
    4423 104A  B4 02                 1	                mov ah, 02h       ; 
    4424 104C  CD 10                 1	                int 10h 
    4425 104E  5A                    1	                pop    dx 
    4426 104F  59                    1	                pop    cx 
    4427 1050  5B                    1	                pop    bx 
    4428 1051  58                    1	                pop    ax 
    4429				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    4430 1052  50                    1	                push    ax 
    4431 1053  53                    1	                push    bx 
    4432 1054  51                    1	                push    cx 
    4433 1055  52                    1	                push    dx 
    4434 1056  33 DB                 1	                xor     bx,bx 
    4435 1058  B9 0014               1	                mov cx, 20d 
    4436 105B  B0 00                 1	                mov al, 0 
    4437 105D  B3 0A                 1	                mov bl, 00001010b 
    4438 105F  B4 09                 1	                mov ah, 09h 
    4439 1061  CD 10                 1	                int 10h 
    4440 1063  5A                    1	                pop    dx 
    4441 1064  59                    1	                pop    cx 
    4442 1065  5B                    1	                pop    bx 
    4443 1066  58                    1	                pop    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-107


    4444				                        CURSOR      10,
					 16 
    4445 1067  50                    1	                push    ax 
    4446 1068  53                    1	                push    bx 
    4447 1069  51                    1	                push    cx 
    4448 106A  52                    1	                push    dx 
    4449 106B  B6 0A                 1	                mov dh, 10        ;row 
    4450 106D  B2 10                 1	                mov dl, 16       ;colum
					n 
    4451 106F  B7 00                 1	                mov bh, 0         ; 
    4452 1071  B4 02                 1	                mov ah, 02h       ; 
    4453 1073  CD 10                 1	                int 10h 
    4454 1075  5A                    1	                pop    dx 
    4455 1076  59                    1	                pop    cx 
    4456 1077  5B                    1	                pop    bx 
    4457 1078  58                    1	                pop    ax 
    4458				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    4459 1079  50                    1	                push    ax 
    4460 107A  53                    1	                push    bx 
    4461 107B  51                    1	                push    cx 
    4462 107C  52                    1	                push    dx 
    4463 107D  33 DB                 1	                xor     bx,bx 
    4464 107F  B9 0014               1	                mov cx, 20d 
    4465 1082  B0 00                 1	                mov al, 0 
    4466 1084  B3 0A                 1	                mov bl, 00001010b 
    4467 1086  B4 09                 1	                mov ah, 09h 
    4468 1088  CD 10                 1	                int 10h 
    4469 108A  5A                    1	                pop    dx 
    4470 108B  59                    1	                pop    cx 
    4471 108C  5B                    1	                pop    bx 
    4472 108D  58                    1	                pop    ax 
    4473				                        CURSOR      12,
					 18 
    4474 108E  50                    1	                push    ax 
    4475 108F  53                    1	                push    bx 
    4476 1090  51                    1	                push    cx 
    4477 1091  52                    1	                push    dx 
    4478 1092  B6 0C                 1	                mov dh, 12        ;row 
    4479 1094  B2 12                 1	                mov dl, 18       ;colum
					n 
    4480 1096  B7 00                 1	                mov bh, 0         ; 
    4481 1098  B4 02                 1	                mov ah, 02h       ; 
    4482 109A  CD 10                 1	                int 10h 
    4483 109C  5A                    1	                pop    dx 
    4484 109D  59                    1	                pop    cx 
    4485 109E  5B                    1	                pop    bx 
    4486 109F  58                    1	                pop    ax 
    4487				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    4488 10A0  50                    1	                push    ax 
    4489 10A1  53                    1	                push    bx 
    4490 10A2  51                    1	                push    cx 
    4491 10A3  52                    1	                push    dx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-108


    4492 10A4  33 DB                 1	                xor     bx,bx 
    4493 10A6  B9 0014               1	                mov cx, 20d 
    4494 10A9  B0 00                 1	                mov al, 0 
    4495 10AB  B3 0A                 1	                mov bl, 00001010b 
    4496 10AD  B4 09                 1	                mov ah, 09h 
    4497 10AF  CD 10                 1	                int 10h 
    4498 10B1  5A                    1	                pop    dx 
    4499 10B2  59                    1	                pop    cx 
    4500 10B3  5B                    1	                pop    bx 
    4501 10B4  58                    1	                pop    ax 
    4502				                        CURSOR      14,
					 18 
    4503 10B5  50                    1	                push    ax 
    4504 10B6  53                    1	                push    bx 
    4505 10B7  51                    1	                push    cx 
    4506 10B8  52                    1	                push    dx 
    4507 10B9  B6 0E                 1	                mov dh, 14        ;row 
    4508 10BB  B2 12                 1	                mov dl, 18       ;colum
					n 
    4509 10BD  B7 00                 1	                mov bh, 0         ; 
    4510 10BF  B4 02                 1	                mov ah, 02h       ; 
    4511 10C1  CD 10                 1	                int 10h 
    4512 10C3  5A                    1	                pop    dx 
    4513 10C4  59                    1	                pop    cx 
    4514 10C5  5B                    1	                pop    bx 
    4515 10C6  58                    1	                pop    ax 
    4516				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    4517 10C7  50                    1	                push    ax 
    4518 10C8  53                    1	                push    bx 
    4519 10C9  51                    1	                push    cx 
    4520 10CA  52                    1	                push    dx 
    4521 10CB  33 DB                 1	                xor     bx,bx 
    4522 10CD  B9 0014               1	                mov cx, 20d 
    4523 10D0  B0 00                 1	                mov al, 0 
    4524 10D2  B3 0A                 1	                mov bl, 00001010b 
    4525 10D4  B4 09                 1	                mov ah, 09h 
    4526 10D6  CD 10                 1	                int 10h 
    4527 10D8  5A                    1	                pop    dx 
    4528 10D9  59                    1	                pop    cx 
    4529 10DA  5B                    1	                pop    bx 
    4530 10DB  58                    1	                pop    ax 
    4531				 
    4532 10DC  C3			                        ret 
    4533 10DD				CLEAR_CUST_INPUT    ENDP 
    4534				 
    4535 10DD				CUST_DETAIL_INPUT   PROC               
					                         ;input into cu
					stomer array 
    4536 10DD  51			                        push        cx 
    4537				 
    4538 10DE				                        startReadID: 
    4539				                        CURSOR      6, 
					15 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-109


    4540 10DE  50                    1	                push    ax 
    4541 10DF  53                    1	                push    bx 
    4542 10E0  51                    1	                push    cx 
    4543 10E1  52                    1	                push    dx 
    4544 10E2  B6 06                 1	                mov dh, 6        ;row 
    4545 10E4  B2 0F                 1	                mov dl, 15       ;colum
					n 
    4546 10E6  B7 00                 1	                mov bh, 0         ; 
    4547 10E8  B4 02                 1	                mov ah, 02h       ; 
    4548 10EA  CD 10                 1	                int 10h 
    4549 10EC  5A                    1	                pop    dx 
    4550 10ED  59                    1	                pop    cx 
    4551 10EE  5B                    1	                pop    bx 
    4552 10EF  58                    1	                pop    ax 
    4553				                        COLOUR_CHAR 0, 
					00001010b, 20d 
    4554 10F0  50                    1	                push    ax 
    4555 10F1  53                    1	                push    bx 
    4556 10F2  51                    1	                push    cx 
    4557 10F3  52                    1	                push    dx 
    4558 10F4  33 DB                 1	                xor     bx,bx 
    4559 10F6  B9 0014               1	                mov cx, 20d 
    4560 10F9  B0 00                 1	                mov al, 0 
    4561 10FB  B3 0A                 1	                mov bl, 00001010b 
    4562 10FD  B4 09                 1	                mov ah, 09h 
    4563 10FF  CD 10                 1	                int 10h 
    4564 1101  5A                    1	                pop    dx 
    4565 1102  59                    1	                pop    cx 
    4566 1103  5B                    1	                pop    bx 
    4567 1104  58                    1	                pop    ax 
    4568				 
    4569 1105  56			                        push        si 
    4570 1106  B9 0004			                        mov         cx,
					 4d  
    4571				 
    4572				                        ;;init, first c
					har of id must be C 
    4573 1109  52			                        push        dx 
    4574 110A  B2 43			                        mov         dl 
					 ,"C" 
    4575 110C  88 14			                        mov         [si
					],dl 
    4576 110E  46			                        inc         si 
    4577 110F  E8 17CB R		                        call        PRI
					NT_CHAR 
    4578 1112  5A			                        pop         dx 
					    
    4579				                               
    4580 1113				                        readID: 
    4581 1113  B4 01			                                mov    
					     ah, 01h 
    4582 1115  CD 21			                                int    
					     21h 
    4583				 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-110


    4584 1117  3C 0D			                                cmp    
					     al, 13d 
    4585 1119  74 05			                                je     
					     startReadName 
    4586				 
    4587 111B  88 04			                                mov    
					     [si], al 
    4588 111D  46			                                inc    
					     si 
    4589 111E  E2 F3			                                loop   
					     readID  
    4590				 
    4591 1120				                    startReadName: 
    4592 1120  5E			                            pop        
					 si 
    4593 1121  56			                            push       
					 si 
    4594 1122  83 C6 06			                            add        
					 si, custName  
    4595 1125  B3 24			                            mov        
					 bl, "$" 
    4596 1127  88 1C			                            mov        
					 [si], bl        
    4597				                             
    4598				                            CURSOR     
					 8, 17 
    4599 1129  50                    1	                push    ax 
    4600 112A  53                    1	                push    bx 
    4601 112B  51                    1	                push    cx 
    4602 112C  52                    1	                push    dx 
    4603 112D  B6 08                 1	                mov dh, 8        ;row 
    4604 112F  B2 11                 1	                mov dl, 17       ;colum
					n 
    4605 1131  B7 00                 1	                mov bh, 0         ; 
    4606 1133  B4 02                 1	                mov ah, 02h       ; 
    4607 1135  CD 10                 1	                int 10h 
    4608 1137  5A                    1	                pop    dx 
    4609 1138  59                    1	                pop    cx 
    4610 1139  5B                    1	                pop    bx 
    4611 113A  58                    1	                pop    ax 
    4612				                            COLOUR_CHAR
					 0, 00001010b, 20d 
    4613 113B  50                    1	                push    ax 
    4614 113C  53                    1	                push    bx 
    4615 113D  51                    1	                push    cx 
    4616 113E  52                    1	                push    dx 
    4617 113F  33 DB                 1	                xor     bx,bx 
    4618 1141  B9 0014               1	                mov cx, 20d 
    4619 1144  B0 00                 1	                mov al, 0 
    4620 1146  B3 0A                 1	                mov bl, 00001010b 
    4621 1148  B4 09                 1	                mov ah, 09h 
    4622 114A  CD 10                 1	                int 10h 
    4623 114C  5A                    1	                pop    dx 
    4624 114D  59                    1	                pop    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-111


    4625 114E  5B                    1	                pop    bx 
    4626 114F  58                    1	                pop    ax 
    4627 1150  B9 0014			                            mov        
					 cx, 20d 
    4628 1153  EB 01 90			                            jmp        
					 readName 
    4629				                     
    4630 1156				                            readName:  
					  
    4631				 
    4632 1156  B4 01			                                    mov
					         ah, 01h 
    4633 1158  CD 21			                                    int
					         21h 
    4634				 
    4635 115A  3C 0D			                                    cmp
					         al, 13d 
    4636 115C  74 05			                                    je 
					         startReadAge 
    4637				 
    4638 115E  88 04			                                    mov
					         [si], al 
    4639 1160  46			                                    inc
					         si 
    4640				 
    4641 1161  E2 F3			                                    loo
					p        readName 
    4642				 
    4643 1163				                    startReadAge: 
    4644 1163  5E			                            pop        
					 si 
    4645 1164  56			                            push       
					 si 
    4646 1165  83 C6 1A			                            add        
					 si, Age 
    4647 1168  B3 24			                            mov        
					 bl, "$" 
    4648 116A  88 1C			                            mov        
					 [si], bl  
    4649				 
    4650				                            CURSOR     
					 10, 16 
    4651 116C  50                    1	                push    ax 
    4652 116D  53                    1	                push    bx 
    4653 116E  51                    1	                push    cx 
    4654 116F  52                    1	                push    dx 
    4655 1170  B6 0A                 1	                mov dh, 10        ;row 
    4656 1172  B2 10                 1	                mov dl, 16       ;colum
					n 
    4657 1174  B7 00                 1	                mov bh, 0         ; 
    4658 1176  B4 02                 1	                mov ah, 02h       ; 
    4659 1178  CD 10                 1	                int 10h 
    4660 117A  5A                    1	                pop    dx 
    4661 117B  59                    1	                pop    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-112


    4662 117C  5B                    1	                pop    bx 
    4663 117D  58                    1	                pop    ax 
    4664				                            COLOUR_CHAR
					 0, 00001010b, 20d 
    4665 117E  50                    1	                push    ax 
    4666 117F  53                    1	                push    bx 
    4667 1180  51                    1	                push    cx 
    4668 1181  52                    1	                push    dx 
    4669 1182  33 DB                 1	                xor     bx,bx 
    4670 1184  B9 0014               1	                mov cx, 20d 
    4671 1187  B0 00                 1	                mov al, 0 
    4672 1189  B3 0A                 1	                mov bl, 00001010b 
    4673 118B  B4 09                 1	                mov ah, 09h 
    4674 118D  CD 10                 1	                int 10h 
    4675 118F  5A                    1	                pop    dx 
    4676 1190  59                    1	                pop    cx 
    4677 1191  5B                    1	                pop    bx 
    4678 1192  58                    1	                pop    ax 
    4679 1193  B9 0004			                            mov        
					 cx, 4d 
    4680 1196  EB 01 90			                            jmp        
					 readAge 
    4681				 
    4682 1199				                            readAge: 
    4683				 
    4684 1199  B4 01			                                    mov
					         ah, 01h 
    4685 119B  CD 21			                                    int
					         21h 
    4686				 
    4687 119D  3C 0D			                                    cmp
					         al, 13d 
    4688 119F  74 05			                                    je 
					         startReadPhone 
    4689				 
    4690 11A1  88 04			                                    mov
					         [si], al 
    4691 11A3  46			                                    inc
					         si 
    4692				 
    4693 11A4  E2 F3			                                    loo
					p        readAge 
    4694				 
    4695 11A6				                    startReadPhone: 
    4696				 
    4697 11A6  5E			                            pop        
					 si 
    4698 11A7  56			                            push       
					 si 
    4699 11A8  83 C6 1E			                            add        
					 si, Phone 
    4700 11AB  B3 24			                            mov        
					 bl, "$" 
    4701 11AD  88 1C			                            mov        
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-113


					 [si], bl 
    4702				 
    4703				                            CURSOR     
					 12, 18 
    4704 11AF  50                    1	                push    ax 
    4705 11B0  53                    1	                push    bx 
    4706 11B1  51                    1	                push    cx 
    4707 11B2  52                    1	                push    dx 
    4708 11B3  B6 0C                 1	                mov dh, 12        ;row 
    4709 11B5  B2 12                 1	                mov dl, 18       ;colum
					n 
    4710 11B7  B7 00                 1	                mov bh, 0         ; 
    4711 11B9  B4 02                 1	                mov ah, 02h       ; 
    4712 11BB  CD 10                 1	                int 10h 
    4713 11BD  5A                    1	                pop    dx 
    4714 11BE  59                    1	                pop    cx 
    4715 11BF  5B                    1	                pop    bx 
    4716 11C0  58                    1	                pop    ax 
    4717				                            COLOUR_CHAR
					 0, 00001010b, 20d 
    4718 11C1  50                    1	                push    ax 
    4719 11C2  53                    1	                push    bx 
    4720 11C3  51                    1	                push    cx 
    4721 11C4  52                    1	                push    dx 
    4722 11C5  33 DB                 1	                xor     bx,bx 
    4723 11C7  B9 0014               1	                mov cx, 20d 
    4724 11CA  B0 00                 1	                mov al, 0 
    4725 11CC  B3 0A                 1	                mov bl, 00001010b 
    4726 11CE  B4 09                 1	                mov ah, 09h 
    4727 11D0  CD 10                 1	                int 10h 
    4728 11D2  5A                    1	                pop    dx 
    4729 11D3  59                    1	                pop    cx 
    4730 11D4  5B                    1	                pop    bx 
    4731 11D5  58                    1	                pop    ax 
    4732 11D6  B9 000C			                            mov        
					 cx, 12d 
    4733 11D9  EB 01 90			                            jmp        
					 ReadPhone  
    4734				                     
    4735 11DC				                            ReadPhone: 
					 
    4736				 
    4737 11DC  B4 01			                                    mov
					         ah, 01h 
    4738 11DE  CD 21			                                    int
					         21h 
    4739				 
    4740 11E0  3C 0D			                                    cmp
					         al, 13d 
    4741 11E2  74 05			                                    je 
					         startCustPoint 
    4742				 
    4743 11E4  88 04			                                    mov
					         [si], al 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-114


    4744 11E6  46			                                    inc
					         si 
    4745				 
    4746 11E7  E2 F3			                                    loo
					p        ReadPhone 
    4747				                     
    4748 11E9				                    startCustPoint: 
    4749				 
    4750 11E9  5E			                            pop        
					 si 
    4751 11EA  56			                            push       
					 si 
    4752 11EB  83 C6 2A			                            add        
					 si, bonusPoint 
    4753 11EE  B3 24			                            mov        
					 bl, "$" 
    4754 11F0  88 1C			                            mov        
					 [si], bl 
    4755				 
    4756				                            CURSOR     
					 14, 18 
    4757 11F2  50                    1	                push    ax 
    4758 11F3  53                    1	                push    bx 
    4759 11F4  51                    1	                push    cx 
    4760 11F5  52                    1	                push    dx 
    4761 11F6  B6 0E                 1	                mov dh, 14        ;row 
    4762 11F8  B2 12                 1	                mov dl, 18       ;colum
					n 
    4763 11FA  B7 00                 1	                mov bh, 0         ; 
    4764 11FC  B4 02                 1	                mov ah, 02h       ; 
    4765 11FE  CD 10                 1	                int 10h 
    4766 1200  5A                    1	                pop    dx 
    4767 1201  59                    1	                pop    cx 
    4768 1202  5B                    1	                pop    bx 
    4769 1203  58                    1	                pop    ax 
    4770				                            COLOUR_CHAR
					 0, 00001010b, 20d 
    4771 1204  50                    1	                push    ax 
    4772 1205  53                    1	                push    bx 
    4773 1206  51                    1	                push    cx 
    4774 1207  52                    1	                push    dx 
    4775 1208  33 DB                 1	                xor     bx,bx 
    4776 120A  B9 0014               1	                mov cx, 20d 
    4777 120D  B0 00                 1	                mov al, 0 
    4778 120F  B3 0A                 1	                mov bl, 00001010b 
    4779 1211  B4 09                 1	                mov ah, 09h 
    4780 1213  CD 10                 1	                int 10h 
    4781 1215  5A                    1	                pop    dx 
    4782 1216  59                    1	                pop    cx 
    4783 1217  5B                    1	                pop    bx 
    4784 1218  58                    1	                pop    ax 
    4785 1219  B9 0004			                            mov        
					 cx, 4d 
    4786 121C  EB 01 90			                            jmp        
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-115


					 ReadPoint 
    4787				                     
    4788 121F				                            ReadPoint: 
    4789				 
    4790 121F  B4 01			                                    mov
					         ah, 01h 
    4791 1221  CD 21			                                    int
					         21h 
    4792				 
    4793 1223  3C 0D			                                    cmp
					         al, 13d 
    4794 1225  74 05			                                    je 
					         confirmAdded 
    4795				 
    4796 1227  88 04			                                    mov
					         [si], al 
    4797 1229  46			                                    inc
					         si 
    4798				 
    4799 122A  E2 F3			                                    loo
					p        ReadPoint 
    4800				 
    4801 122C				                    confirmAdded: 
    4802 122C  5E			                            pop        
					 si 
    4803				 
    4804 122D  59			                            pop        
					 cx 
    4805				 
    4806 122E  C3			                            ret 
    4807 122F				CUST_DETAIL_INPUT   ENDP 
    4808				 
    4809 122F				PRINT_ALL_CUST      PROC               
					                         ;print custome
					r array in SI 
    4810 122F  56			                        push        si 
    4811				 
    4812 1230  53			                        push        bx 
    4813				                        ;;GET CURRENT C
					URSOR POS 
    4814 1231  B4 03			                        mov         ah,
					 03h 
    4815 1233  B3 00			                        mov         bl,
					 00h 
    4816 1235  CD 10			                        int         10h
					                 ;cursor pos will be st
					ored in dh dl 
    4817				 
    4818 1237  5B			                        pop         bx 
    4819 1238  52			                        push        dx 
    4820				 
    4821 1239  33 C9			                        xor         cx,
					 cx 
    4822 123B  B1 05			                        mov         cl,
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-116


					 maxCustNum 
    4823 123D				                        PRINT_ALL_CUST_
					LOOP: 
    4824 123D  80 C3 02			                                    add
					         bl  ,2 
    4825				                                    CUR
					SOR      bl  ,3 
    4826 1240  50                    1	                push    ax 
    4827 1241  53                    1	                push    bx 
    4828 1242  51                    1	                push    cx 
    4829 1243  52                    1	                push    dx 
    4830 1244  8A F3                 1	                mov dh, bl        ;row 
    4831 1246  B2 03                 1	                mov dl, 3       ;column
					 
    4832 1248  B7 00                 1	                mov bh, 0         ; 
    4833 124A  B4 02                 1	                mov ah, 02h       ; 
    4834 124C  CD 10                 1	                int 10h 
    4835 124E  5A                    1	                pop    dx 
    4836 124F  59                    1	                pop    cx 
    4837 1250  5B                    1	                pop    bx 
    4838 1251  58                    1	                pop    ax 
    4839				 
    4840 1252  E8 126F R		                                    cal
					l        PRINT_CUST 
    4841 1255  83 C6 30			                                    add
					         si  ,customerSize 
    4842				 
    4843 1258  E2 E3			                                    loo
					p        PRINT_ALL_CUST_LOOP 
    4844				 
    4845 125A  5A			                        pop         dx 
					                
    4846				                        CURSOR      dh,
					 dl 
    4847 125B  50                    1	                push    ax 
    4848 125C  53                    1	                push    bx 
    4849 125D  51                    1	                push    cx 
    4850 125E  52                    1	                push    dx 
    4851 125F  8A F6                 1	                mov dh, dh        ;row 
    4852 1261  8A D2                 1	                mov dl, dl       ;colum
					n 
    4853 1263  B7 00                 1	                mov bh, 0         ; 
    4854 1265  B4 02                 1	                mov ah, 02h       ; 
    4855 1267  CD 10                 1	                int 10h 
    4856 1269  5A                    1	                pop    dx 
    4857 126A  59                    1	                pop    cx 
    4858 126B  5B                    1	                pop    bx 
    4859 126C  58                    1	                pop    ax 
    4860				 
    4861 126D  5E			                        pop         si 
    4862 126E  C3			                        ret 
    4863 126F				PRINT_ALL_CUST      ENDP 
    4864				 
    4865 126F				PRINT_CUST          PROC 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-117


    4866 126F  50			                            push    ax 
    4867 1270  53			                            push    bx 
    4868 1271  51			                            push    cx 
    4869 1272  52			                            push    dx 
    4870 1273  56			                            push    si 
    4871				 
    4872 1274  33 C0			                            xor        
					 ax, ax 
    4873 1276  8D 14			                            lea        
					 dx, [si]            ;id 
    4874 1278  E8 173A R		                            call       
					 print_STR 
    4875				 
    4876				                            CURSOR     
					 bl, 10 
    4877 127B  50                    1	                push    ax 
    4878 127C  53                    1	                push    bx 
    4879 127D  51                    1	                push    cx 
    4880 127E  52                    1	                push    dx 
    4881 127F  8A F3                 1	                mov dh, bl        ;row 
    4882 1281  B2 0A                 1	                mov dl, 10       ;colum
					n 
    4883 1283  B7 00                 1	                mov bh, 0         ; 
    4884 1285  B4 02                 1	                mov ah, 02h       ; 
    4885 1287  CD 10                 1	                int 10h 
    4886 1289  5A                    1	                pop    dx 
    4887 128A  59                    1	                pop    cx 
    4888 128B  5B                    1	                pop    bx 
    4889 128C  58                    1	                pop    ax 
    4890 128D  8D 54 06			                            lea        
					 dx, [si + custName] 
    4891 1290  E8 173A R		                            call       
					 PRINT_STR 
    4892				 
    4893				                            CURSOR     
					 bl, 32 
    4894 1293  50                    1	                push    ax 
    4895 1294  53                    1	                push    bx 
    4896 1295  51                    1	                push    cx 
    4897 1296  52                    1	                push    dx 
    4898 1297  8A F3                 1	                mov dh, bl        ;row 
    4899 1299  B2 20                 1	                mov dl, 32       ;colum
					n 
    4900 129B  B7 00                 1	                mov bh, 0         ; 
    4901 129D  B4 02                 1	                mov ah, 02h       ; 
    4902 129F  CD 10                 1	                int 10h 
    4903 12A1  5A                    1	                pop    dx 
    4904 12A2  59                    1	                pop    cx 
    4905 12A3  5B                    1	                pop    bx 
    4906 12A4  58                    1	                pop    ax 
    4907 12A5  8D 54 1A			                            lea        
					 dx, [si + age] 
    4908 12A8  E8 173A R		                            call       
					 PRINT_STR 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-118


    4909				 
    4910				                            CURSOR     
					 bl, 37 
    4911 12AB  50                    1	                push    ax 
    4912 12AC  53                    1	                push    bx 
    4913 12AD  51                    1	                push    cx 
    4914 12AE  52                    1	                push    dx 
    4915 12AF  8A F3                 1	                mov dh, bl        ;row 
    4916 12B1  B2 25                 1	                mov dl, 37       ;colum
					n 
    4917 12B3  B7 00                 1	                mov bh, 0         ; 
    4918 12B5  B4 02                 1	                mov ah, 02h       ; 
    4919 12B7  CD 10                 1	                int 10h 
    4920 12B9  5A                    1	                pop    dx 
    4921 12BA  59                    1	                pop    cx 
    4922 12BB  5B                    1	                pop    bx 
    4923 12BC  58                    1	                pop    ax 
    4924 12BD  8D 54 1E			                            lea        
					 dx, [si + phone] 
    4925 12C0  E8 173A R		                            call       
					 print_STR 
    4926				 
    4927				                            CURSOR     
					 bl, 52 
    4928 12C3  50                    1	                push    ax 
    4929 12C4  53                    1	                push    bx 
    4930 12C5  51                    1	                push    cx 
    4931 12C6  52                    1	                push    dx 
    4932 12C7  8A F3                 1	                mov dh, bl        ;row 
    4933 12C9  B2 34                 1	                mov dl, 52       ;colum
					n 
    4934 12CB  B7 00                 1	                mov bh, 0         ; 
    4935 12CD  B4 02                 1	                mov ah, 02h       ; 
    4936 12CF  CD 10                 1	                int 10h 
    4937 12D1  5A                    1	                pop    dx 
    4938 12D2  59                    1	                pop    cx 
    4939 12D3  5B                    1	                pop    bx 
    4940 12D4  58                    1	                pop    ax 
    4941 12D5  8D 54 2A			                            lea        
					 dx, [si + bonusPoint] 
    4942 12D8  E8 173A R		                            call       
					 print_STR 
    4943				 
    4944				 
    4945 12DB  5E			                            pop     si 
    4946 12DC  5A			                            pop     dx 
    4947 12DD  59			                            pop     cx 
    4948 12DE  5B			                            pop     bx 
    4949 12DF  58			                            pop     ax 
    4950 12E0  C3			                            ret 
    4951 12E1				PRINT_CUST          ENDP 
    4952				 
    4953 12E1				CUSTOMER_NUMBERING  PROC     
    4954 12E1  B4 02			                        mov         ah,
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-119


					 2h 
    4955				                        CURSOR      5, 
					 60 
    4956 12E3  50                    1	                push    ax 
    4957 12E4  53                    1	                push    bx 
    4958 12E5  51                    1	                push    cx 
    4959 12E6  52                    1	                push    dx 
    4960 12E7  B6 05                 1	                mov dh, 5        ;row 
    4961 12E9  B2 3C                 1	                mov dl, 60       ;colum
					n 
    4962 12EB  B7 00                 1	                mov bh, 0         ; 
    4963 12ED  B4 02                 1	                mov ah, 02h       ; 
    4964 12EF  CD 10                 1	                int 10h 
    4965 12F1  5A                    1	                pop    dx 
    4966 12F2  59                    1	                pop    cx 
    4967 12F3  5B                    1	                pop    bx 
    4968 12F4  58                    1	                pop    ax 
    4969 12F5  8D 16 2296 R		                        lea         dx,
					 customerNumberLine 
    4970 12F9  E8 173A R		                        call        PRI
					NT_STR 
    4971				                        COLOUR_CHAR 0, 
					 00001100b, 1d 
    4972 12FC  50                    1	                push    ax 
    4973 12FD  53                    1	                push    bx 
    4974 12FE  51                    1	                push    cx 
    4975 12FF  52                    1	                push    dx 
    4976 1300  33 DB                 1	                xor     bx,bx 
    4977 1302  B9 0001               1	                mov cx, 1d 
    4978 1305  B0 00                 1	                mov al, 0 
    4979 1307  B3 0C                 1	                mov bl, 00001100b 
    4980 1309  B4 09                 1	                mov ah, 09h 
    4981 130B  CD 10                 1	                int 10h 
    4982 130D  5A                    1	                pop    dx 
    4983 130E  59                    1	                pop    cx 
    4984 130F  5B                    1	                pop    bx 
    4985 1310  58                    1	                pop    ax 
    4986 1311  B2 31			                        mov         dl,
					 "1" 
    4987 1313  CD 21			                        int         21h
					 
    4988				 
    4989				                        CURSOR      7, 
					 60 
    4990 1315  50                    1	                push    ax 
    4991 1316  53                    1	                push    bx 
    4992 1317  51                    1	                push    cx 
    4993 1318  52                    1	                push    dx 
    4994 1319  B6 07                 1	                mov dh, 7        ;row 
    4995 131B  B2 3C                 1	                mov dl, 60       ;colum
					n 
    4996 131D  B7 00                 1	                mov bh, 0         ; 
    4997 131F  B4 02                 1	                mov ah, 02h       ; 
    4998 1321  CD 10                 1	                int 10h 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-120


    4999 1323  5A                    1	                pop    dx 
    5000 1324  59                    1	                pop    cx 
    5001 1325  5B                    1	                pop    bx 
    5002 1326  58                    1	                pop    ax 
    5003 1327  8D 16 2296 R		                        lea         dx,
					 customerNumberLine 
    5004 132B  E8 173A R		                        call        PRI
					NT_STR 
    5005				                        COLOUR_CHAR 0, 
					 00001100b, 1d 
    5006 132E  50                    1	                push    ax 
    5007 132F  53                    1	                push    bx 
    5008 1330  51                    1	                push    cx 
    5009 1331  52                    1	                push    dx 
    5010 1332  33 DB                 1	                xor     bx,bx 
    5011 1334  B9 0001               1	                mov cx, 1d 
    5012 1337  B0 00                 1	                mov al, 0 
    5013 1339  B3 0C                 1	                mov bl, 00001100b 
    5014 133B  B4 09                 1	                mov ah, 09h 
    5015 133D  CD 10                 1	                int 10h 
    5016 133F  5A                    1	                pop    dx 
    5017 1340  59                    1	                pop    cx 
    5018 1341  5B                    1	                pop    bx 
    5019 1342  58                    1	                pop    ax 
    5020 1343  B2 32			                        mov         dl,
					 "2" 
    5021 1345  CD 21			                        int         21h
					 
    5022				 
    5023				                        CURSOR      9, 
					 60 
    5024 1347  50                    1	                push    ax 
    5025 1348  53                    1	                push    bx 
    5026 1349  51                    1	                push    cx 
    5027 134A  52                    1	                push    dx 
    5028 134B  B6 09                 1	                mov dh, 9        ;row 
    5029 134D  B2 3C                 1	                mov dl, 60       ;colum
					n 
    5030 134F  B7 00                 1	                mov bh, 0         ; 
    5031 1351  B4 02                 1	                mov ah, 02h       ; 
    5032 1353  CD 10                 1	                int 10h 
    5033 1355  5A                    1	                pop    dx 
    5034 1356  59                    1	                pop    cx 
    5035 1357  5B                    1	                pop    bx 
    5036 1358  58                    1	                pop    ax 
    5037 1359  8D 16 2296 R		                        lea         dx,
					 customerNumberLine 
    5038 135D  E8 173A R		                        call        PRI
					NT_STR 
    5039				                        COLOUR_CHAR 0, 
					 00001100b, 1d 
    5040 1360  50                    1	                push    ax 
    5041 1361  53                    1	                push    bx 
    5042 1362  51                    1	                push    cx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-121


    5043 1363  52                    1	                push    dx 
    5044 1364  33 DB                 1	                xor     bx,bx 
    5045 1366  B9 0001               1	                mov cx, 1d 
    5046 1369  B0 00                 1	                mov al, 0 
    5047 136B  B3 0C                 1	                mov bl, 00001100b 
    5048 136D  B4 09                 1	                mov ah, 09h 
    5049 136F  CD 10                 1	                int 10h 
    5050 1371  5A                    1	                pop    dx 
    5051 1372  59                    1	                pop    cx 
    5052 1373  5B                    1	                pop    bx 
    5053 1374  58                    1	                pop    ax 
    5054 1375  B2 33			                        mov         dl,
					 "3" 
    5055 1377  CD 21			                        int         21h
					 
    5056				 
    5057				                        CURSOR      11,
					  60 
    5058 1379  50                    1	                push    ax 
    5059 137A  53                    1	                push    bx 
    5060 137B  51                    1	                push    cx 
    5061 137C  52                    1	                push    dx 
    5062 137D  B6 0B                 1	                mov dh, 11        ;row 
    5063 137F  B2 3C                 1	                mov dl, 60       ;colum
					n 
    5064 1381  B7 00                 1	                mov bh, 0         ; 
    5065 1383  B4 02                 1	                mov ah, 02h       ; 
    5066 1385  CD 10                 1	                int 10h 
    5067 1387  5A                    1	                pop    dx 
    5068 1388  59                    1	                pop    cx 
    5069 1389  5B                    1	                pop    bx 
    5070 138A  58                    1	                pop    ax 
    5071 138B  8D 16 2296 R		                        lea         dx,
					 customerNumberLine 
    5072 138F  E8 173A R		                        call        PRI
					NT_STR 
    5073				                        COLOUR_CHAR 0, 
					 00001100b, 1d 
    5074 1392  50                    1	                push    ax 
    5075 1393  53                    1	                push    bx 
    5076 1394  51                    1	                push    cx 
    5077 1395  52                    1	                push    dx 
    5078 1396  33 DB                 1	                xor     bx,bx 
    5079 1398  B9 0001               1	                mov cx, 1d 
    5080 139B  B0 00                 1	                mov al, 0 
    5081 139D  B3 0C                 1	                mov bl, 00001100b 
    5082 139F  B4 09                 1	                mov ah, 09h 
    5083 13A1  CD 10                 1	                int 10h 
    5084 13A3  5A                    1	                pop    dx 
    5085 13A4  59                    1	                pop    cx 
    5086 13A5  5B                    1	                pop    bx 
    5087 13A6  58                    1	                pop    ax 
    5088 13A7  B2 34			                        mov         dl,
					 "4" 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-122


    5089 13A9  CD 21			                        int         21h
					 
    5090				 
    5091				                        CURSOR      13,
					  60 
    5092 13AB  50                    1	                push    ax 
    5093 13AC  53                    1	                push    bx 
    5094 13AD  51                    1	                push    cx 
    5095 13AE  52                    1	                push    dx 
    5096 13AF  B6 0D                 1	                mov dh, 13        ;row 
    5097 13B1  B2 3C                 1	                mov dl, 60       ;colum
					n 
    5098 13B3  B7 00                 1	                mov bh, 0         ; 
    5099 13B5  B4 02                 1	                mov ah, 02h       ; 
    5100 13B7  CD 10                 1	                int 10h 
    5101 13B9  5A                    1	                pop    dx 
    5102 13BA  59                    1	                pop    cx 
    5103 13BB  5B                    1	                pop    bx 
    5104 13BC  58                    1	                pop    ax 
    5105 13BD  8D 16 2296 R		                        lea         dx,
					 customerNumberLine 
    5106 13C1  E8 173A R		                        call        PRI
					NT_STR 
    5107				                        COLOUR_CHAR 0, 
					 00001100b, 1d 
    5108 13C4  50                    1	                push    ax 
    5109 13C5  53                    1	                push    bx 
    5110 13C6  51                    1	                push    cx 
    5111 13C7  52                    1	                push    dx 
    5112 13C8  33 DB                 1	                xor     bx,bx 
    5113 13CA  B9 0001               1	                mov cx, 1d 
    5114 13CD  B0 00                 1	                mov al, 0 
    5115 13CF  B3 0C                 1	                mov bl, 00001100b 
    5116 13D1  B4 09                 1	                mov ah, 09h 
    5117 13D3  CD 10                 1	                int 10h 
    5118 13D5  5A                    1	                pop    dx 
    5119 13D6  59                    1	                pop    cx 
    5120 13D7  5B                    1	                pop    bx 
    5121 13D8  58                    1	                pop    ax 
    5122 13D9  B2 35			                        mov         dl,
					 "5" 
    5123 13DB  CD 21			                        int         21h
					 
    5124				 
    5125 13DD  C3			                        ret 
    5126 13DE				CUSTOMER_NUMBERING  ENDP 
    5127				 
    5128 13DE				MOVE_CURSOR_QTY     PROC 
    5129 13DE  53			                            push       
					 bx 
    5130				 
    5131 13DF  8A 1E 1893 R		                            mov        
					 bl, [qtyDisplayBox+1]   ;use bl to sto
					re row number 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-123


    5132 13E3  8A 3E 1894 R		                            mov        
					 bh, [qtyDisplayBox+2]   ;use bh to sto
					re column number 
    5133 13E7  80 C3 01			                            add        
					 bl, 1 
    5134 13EA  80 C7 02			                            add        
					 bh, 2 
    5135				                            CURSOR     
					 bl, bh 
    5136 13ED  50                    1	                push    ax 
    5137 13EE  53                    1	                push    bx 
    5138 13EF  51                    1	                push    cx 
    5139 13F0  52                    1	                push    dx 
    5140 13F1  8A F3                 1	                mov dh, bl        ;row 
    5141 13F3  8A D7                 1	                mov dl, bh       ;colum
					n 
    5142 13F5  B7 00                 1	                mov bh, 0         ; 
    5143 13F7  B4 02                 1	                mov ah, 02h       ; 
    5144 13F9  CD 10                 1	                int 10h 
    5145 13FB  5A                    1	                pop    dx 
    5146 13FC  59                    1	                pop    cx 
    5147 13FD  5B                    1	                pop    bx 
    5148 13FE  58                    1	                pop    ax 
    5149				 
    5150 13FF  5B			                            pop        
					 bx 
    5151 1400  C3			                            ret 
    5152 1401				MOVE_CURSOR_QTY ENDP 
    5153				     
    5154 1401				DISPLAY_QTY_BOX     PROC 
    5155 1401  50			                            push       
					 ax 
    5156 1402  53			                            push       
					 bx 
    5157 1403  51			                            push       
					 cx 
    5158 1404  52			                            push       
					 dx 
    5159				 
    5160 1405  8D 36 1892 R		                            lea        
					 si, qtyDisplayBox   
    5161 1409  E8 16E9 R		                            call       
					 DISPLAY_BOX 
    5162				 
    5163 140C  8A 1E 1893 R		                            mov        
					 bl, [qtyDisplayBox+1]   ;use bl to sto
					re row number 
    5164				                            CURSOR     
					 bl, [qtyDisplayBox+2] 
    5165 1410  50                    1	                push    ax 
    5166 1411  53                    1	                push    bx 
    5167 1412  51                    1	                push    cx 
    5168 1413  52                    1	                push    dx 
    5169 1414  8A F3                 1	                mov dh, bl        ;row 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-124


    5170 1416  8A 16 1894 R          1	                mov dl, [qtyDisplayBox+
					2]       ;column 
    5171 141A  B7 00                 1	                mov bh, 0         ; 
    5172 141C  B4 02                 1	                mov ah, 02h       ; 
    5173 141E  CD 10                 1	                int 10h 
    5174 1420  5A                    1	                pop    dx 
    5175 1421  59                    1	                pop    cx 
    5176 1422  5B                    1	                pop    bx 
    5177 1423  58                    1	                pop    ax 
    5178 1424  8D 16 1897 R		                            lea        
					 dx, qtyBorder1 
    5179 1428  E8 173A R		                            call       
					 PRINT_STR 
    5180				 
    5181 142B  FE C3			                            inc        
					 bl                      ;next row 
    5182				                            CURSOR     
					 bl, [qtyDisplayBox+2] 
    5183 142D  50                    1	                push    ax 
    5184 142E  53                    1	                push    bx 
    5185 142F  51                    1	                push    cx 
    5186 1430  52                    1	                push    dx 
    5187 1431  8A F3                 1	                mov dh, bl        ;row 
    5188 1433  8A 16 1894 R          1	                mov dl, [qtyDisplayBox+
					2]       ;column 
    5189 1437  B7 00                 1	                mov bh, 0         ; 
    5190 1439  B4 02                 1	                mov ah, 02h       ; 
    5191 143B  CD 10                 1	                int 10h 
    5192 143D  5A                    1	                pop    dx 
    5193 143E  59                    1	                pop    cx 
    5194 143F  5B                    1	                pop    bx 
    5195 1440  58                    1	                pop    ax 
    5196 1441  8D 16 18AE R		                            lea        
					 dx, qtyBorder2 
    5197 1445  E8 173A R		                            call       
					 PRINT_STR 
    5198				 
    5199 1448  FE C3			                            inc        
					 bl                      ;next row 
    5200				                            CURSOR     
					 bl, [qtyDisplayBox+2] 
    5201 144A  50                    1	                push    ax 
    5202 144B  53                    1	                push    bx 
    5203 144C  51                    1	                push    cx 
    5204 144D  52                    1	                push    dx 
    5205 144E  8A F3                 1	                mov dh, bl        ;row 
    5206 1450  8A 16 1894 R          1	                mov dl, [qtyDisplayBox+
					2]       ;column 
    5207 1454  B7 00                 1	                mov bh, 0         ; 
    5208 1456  B4 02                 1	                mov ah, 02h       ; 
    5209 1458  CD 10                 1	                int 10h 
    5210 145A  5A                    1	                pop    dx 
    5211 145B  59                    1	                pop    cx 
    5212 145C  5B                    1	                pop    bx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-125


    5213 145D  58                    1	                pop    ax 
    5214 145E  8D 16 18C5 R		                            lea        
					 dx, qtyBorder3 
    5215 1462  E8 173A R		                            call       
					 PRINT_STR 
    5216				 
    5217 1465  5A			                            pop        
					 dx 
    5218 1466  59			                            pop        
					 cx 
    5219 1467  5B			                            pop        
					 bx 
    5220 1468  58			                            pop        
					 ax 
    5221 1469  C3			                            ret 
    5222 146A				DISPLAY_QTY_BOX ENDP 
    5223				     
    5224 146A				ITEM_SELECTION      PROC               
					                                       
					  ;modify itemSelectionChoice 
    5225 146A  B3 04			                            mov        
					 bl  ,4 
    5226				                            CURSOR     
					 bl  ,3 
    5227 146C  50                    1	                push    ax 
    5228 146D  53                    1	                push    bx 
    5229 146E  51                    1	                push    cx 
    5230 146F  52                    1	                push    dx 
    5231 1470  8A F3                 1	                mov dh, bl        ;row 
    5232 1472  B2 03                 1	                mov dl, 3       ;column
					 
    5233 1474  B7 00                 1	                mov bh, 0         ; 
    5234 1476  B4 02                 1	                mov ah, 02h       ; 
    5235 1478  CD 10                 1	                int 10h 
    5236 147A  5A                    1	                pop    dx 
    5237 147B  59                    1	                pop    cx 
    5238 147C  5B                    1	                pop    bx 
    5239 147D  58                    1	                pop    ax 
    5240				                            COLOUR_CHAR
					 0, 01001110b, 51d 
    5241 147E  50                    1	                push    ax 
    5242 147F  53                    1	                push    bx 
    5243 1480  51                    1	                push    cx 
    5244 1481  52                    1	                push    dx 
    5245 1482  33 DB                 1	                xor     bx,bx 
    5246 1484  B9 0033               1	                mov cx, 51d 
    5247 1487  B0 00                 1	                mov al, 0 
    5248 1489  B3 4E                 1	                mov bl, 01001110b 
    5249 148B  B4 09                 1	                mov ah, 09h 
    5250 148D  CD 10                 1	                int 10h 
    5251 148F  5A                    1	                pop    dx 
    5252 1490  59                    1	                pop    cx 
    5253 1491  5B                    1	                pop    bx 
    5254 1492  58                    1	                pop    ax 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-126


    5255				 
    5256 1493				                            itemSelecti
					onLoop: 
    5257 1493  E8 154F R		                                    cal
					l        PRINT_ALL_ITEMS 
    5258				 
    5259 1496  8A 16 1032 R		                                    mov
					         dl, [itemSelectionChoice] 
    5260				 
    5261 149A  B4 07			                                    mov
					         ah, 07h 
    5262 149C  CD 21			                                    int
					         21h 
    5263				 
    5264 149E  3C 77			                                    cmp
					         al, "w" 
    5265 14A0  74 0C			                                    je 
					         itemSelectionUp 
    5266				                                     
    5267 14A2  3C 73			                                    cmp
					         al, "s" 
    5268 14A4  74 59			                                    je 
					         itemSelectionDown 
    5269				 
    5270 14A6  3C 0D			                                    cmp
					         al, 13d 
    5271 14A8  74 52			                                    je 
					         itemSelectionConfirm_CP 
    5272 14AA  EB E7			                                    jmp
					         itemSelectionLoop 
    5273				 
    5274 14AC				                                    ite
					mSelectionLoop_CP: 
    5275 14AC  EB E5			                                       
					         jmp         itemSelectionLoop 
    5276				 
    5277 14AE				                                    ite
					mSelectionUp: 
    5278 14AE  80 3E 1032 R 01		                                       
					         cmp         [itemSelectionChoi
					ce],  1 
    5279 14B3  76 DE			                                       
					         jbe         itemSelectionLoop 
    5280				 
    5281				                                       
					         COLOUR_CHAR 0, 00001111b, 51d 
    5282 14B5  50                    1	                push    ax 
    5283 14B6  53                    1	                push    bx 
    5284 14B7  51                    1	                push    cx 
    5285 14B8  52                    1	                push    dx 
    5286 14B9  33 DB                 1	                xor     bx,bx 
    5287 14BB  B9 0033               1	                mov cx, 51d 
    5288 14BE  B0 00                 1	                mov al, 0 
    5289 14C0  B3 0F                 1	                mov bl, 00001111b 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-127


    5290 14C2  B4 09                 1	                mov ah, 09h 
    5291 14C4  CD 10                 1	                int 10h 
    5292 14C6  5A                    1	                pop    dx 
    5293 14C7  59                    1	                pop    cx 
    5294 14C8  5B                    1	                pop    bx 
    5295 14C9  58                    1	                pop    ax 
    5296				 
    5297 14CA  FE CA			                                       
					         dec         dl 
    5298 14CC  88 16 1032 R		                                       
					         mov         [itemSelectionChoi
					ce],  dl 
    5299				 
    5300 14D0  80 EB 02			                                       
					         sub         bl  ,2 
    5301				                                       
					         CURSOR      bl  ,3 
    5302 14D3  50                    1	                push    ax 
    5303 14D4  53                    1	                push    bx 
    5304 14D5  51                    1	                push    cx 
    5305 14D6  52                    1	                push    dx 
    5306 14D7  8A F3                 1	                mov dh, bl        ;row 
    5307 14D9  B2 03                 1	                mov dl, 3       ;column
					 
    5308 14DB  B7 00                 1	                mov bh, 0         ; 
    5309 14DD  B4 02                 1	                mov ah, 02h       ; 
    5310 14DF  CD 10                 1	                int 10h 
    5311 14E1  5A                    1	                pop    dx 
    5312 14E2  59                    1	                pop    cx 
    5313 14E3  5B                    1	                pop    bx 
    5314 14E4  58                    1	                pop    ax 
    5315				 
    5316				                                       
					         COLOUR_CHAR 0, selColour, 51d 
    5317 14E5  50                    1	                push    ax 
    5318 14E6  53                    1	                push    bx 
    5319 14E7  51                    1	                push    cx 
    5320 14E8  52                    1	                push    dx 
    5321 14E9  33 DB                 1	                xor     bx,bx 
    5322 14EB  B9 0033               1	                mov cx, 51d 
    5323 14EE  B0 00                 1	                mov al, 0 
    5324 14F0  B3 4E                 1	                mov bl, selColour 
    5325 14F2  B4 09                 1	                mov ah, 09h 
    5326 14F4  CD 10                 1	                int 10h 
    5327 14F6  5A                    1	                pop    dx 
    5328 14F7  59                    1	                pop    cx 
    5329 14F8  5B                    1	                pop    bx 
    5330 14F9  58                    1	                pop    ax 
    5331 14FA  EB 97			                                       
					         jmp         itemSelectionLoop 
    5332				 
    5333 14FC				                                    ite
					mSelectionConfirm_CP: 
    5334 14FC  EB 50 90			                                       
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-128


					         jmp         itemSelectionConfi
					rm 
    5335				 
    5336 14FF				                                    ite
					mSelectionDown:    
    5337 14FF  80 3E 1032 R 09		                                       
					         cmp         [itemSelectionChoi
					ce],  9 
    5338 1504  73 A6			                                       
					         jae         itemSelectionLoop_
					CP 
    5339				 
    5340				                                       
					         COLOUR_CHAR 0, 00001111b, 51d 
    5341 1506  50                    1	                push    ax 
    5342 1507  53                    1	                push    bx 
    5343 1508  51                    1	                push    cx 
    5344 1509  52                    1	                push    dx 
    5345 150A  33 DB                 1	                xor     bx,bx 
    5346 150C  B9 0033               1	                mov cx, 51d 
    5347 150F  B0 00                 1	                mov al, 0 
    5348 1511  B3 0F                 1	                mov bl, 00001111b 
    5349 1513  B4 09                 1	                mov ah, 09h 
    5350 1515  CD 10                 1	                int 10h 
    5351 1517  5A                    1	                pop    dx 
    5352 1518  59                    1	                pop    cx 
    5353 1519  5B                    1	                pop    bx 
    5354 151A  58                    1	                pop    ax 
    5355				 
    5356 151B  FE C2			                                       
					         inc         dl 
    5357 151D  88 16 1032 R		                                       
					         mov         [itemSelectionChoi
					ce],  dl 
    5358				 
    5359 1521  80 C3 02			                                       
					         add         bl  ,2 
    5360				                                       
					         CURSOR      bl  ,3 
    5361 1524  50                    1	                push    ax 
    5362 1525  53                    1	                push    bx 
    5363 1526  51                    1	                push    cx 
    5364 1527  52                    1	                push    dx 
    5365 1528  8A F3                 1	                mov dh, bl        ;row 
    5366 152A  B2 03                 1	                mov dl, 3       ;column
					 
    5367 152C  B7 00                 1	                mov bh, 0         ; 
    5368 152E  B4 02                 1	                mov ah, 02h       ; 
    5369 1530  CD 10                 1	                int 10h 
    5370 1532  5A                    1	                pop    dx 
    5371 1533  59                    1	                pop    cx 
    5372 1534  5B                    1	                pop    bx 
    5373 1535  58                    1	                pop    ax 
    5374				 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-129


    5375				                                       
					         COLOUR_CHAR 0, selColour, 51d 
    5376 1536  50                    1	                push    ax 
    5377 1537  53                    1	                push    bx 
    5378 1538  51                    1	                push    cx 
    5379 1539  52                    1	                push    dx 
    5380 153A  33 DB                 1	                xor     bx,bx 
    5381 153C  B9 0033               1	                mov cx, 51d 
    5382 153F  B0 00                 1	                mov al, 0 
    5383 1541  B3 4E                 1	                mov bl, selColour 
    5384 1543  B4 09                 1	                mov ah, 09h 
    5385 1545  CD 10                 1	                int 10h 
    5386 1547  5A                    1	                pop    dx 
    5387 1548  59                    1	                pop    cx 
    5388 1549  5B                    1	                pop    bx 
    5389 154A  58                    1	                pop    ax 
    5390 154B  E9 14AC R		                                       
					         jmp         itemSelectionLoop_
					CP 
    5391				 
    5392 154E				                            itemSelecti
					onConfirm: 
    5393				 
    5394 154E  C3			                            ret 
    5395 154F				ITEM_SELECTION  ENDP 
    5396				     
    5397 154F				PRINT_ALL_ITEMS     PROC 
    5398 154F  50			                            push       
					 ax 
    5399 1550  53			                            push       
					 bx 
    5400 1551  51			                            push       
					 cx 
    5401 1552  52			                            push       
					 dx 
    5402				 
    5403				                            ;;GET CURRE
					NT CURSOR POS 
    5404 1553  B4 03			                            mov        
					 ah, 03h 
    5405 1555  B3 00			                            mov        
					 bl, 00h 
    5406 1557  CD 10			                            int        
					 10h                 ;cursor pos will b
					e stored in dh dl 
    5407 1559  52			                            push       
					 dx 
    5408				 
    5409 155A  33 C9			                            xor        
					 cx  ,cx 
    5410 155C  8A 0E 1033 R		                            mov        
					 cl  ,[numberOfItems] 
    5411 1560  B3 02			                            mov        
					 bl  ,2 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-130


    5412 1562  8D 36 1034 R		                            lea        
					 si  ,items 
    5413 1566				                            print_item_
					loop: 
    5414 1566  80 C3 02			                                       
					 add         bl  ,2 
    5415				                                       
					 CURSOR      bl  ,3 
    5416 1569  50                    1	                push    ax 
    5417 156A  53                    1	                push    bx 
    5418 156B  51                    1	                push    cx 
    5419 156C  52                    1	                push    dx 
    5420 156D  8A F3                 1	                mov dh, bl        ;row 
    5421 156F  B2 03                 1	                mov dl, 3       ;column
					 
    5422 1571  B7 00                 1	                mov bh, 0         ; 
    5423 1573  B4 02                 1	                mov ah, 02h       ; 
    5424 1575  CD 10                 1	                int 10h 
    5425 1577  5A                    1	                pop    dx 
    5426 1578  59                    1	                pop    cx 
    5427 1579  5B                    1	                pop    bx 
    5428 157A  58                    1	                pop    ax 
    5429				 
    5430 157B  E8 15B7 R		                                       
					 call        PRINT_ITEM 
    5431 157E  83 C6 1E			                                       
					 add         si  ,itemSize 
    5432				 
    5433 1581  E2 E3			                                       
					 loop        print_item_loop 
    5434				 
    5435 1583  80 C3 02			                            add        
					 bl  ,2 
    5436				                            CURSOR     
					 bl  ,3 
    5437 1586  50                    1	                push    ax 
    5438 1587  53                    1	                push    bx 
    5439 1588  51                    1	                push    cx 
    5440 1589  52                    1	                push    dx 
    5441 158A  8A F3                 1	                mov dh, bl        ;row 
    5442 158C  B2 03                 1	                mov dl, 3       ;column
					 
    5443 158E  B7 00                 1	                mov bh, 0         ; 
    5444 1590  B4 02                 1	                mov ah, 02h       ; 
    5445 1592  CD 10                 1	                int 10h 
    5446 1594  5A                    1	                pop    dx 
    5447 1595  59                    1	                pop    cx 
    5448 1596  5B                    1	                pop    bx 
    5449 1597  58                    1	                pop    ax 
    5450 1598  8D 16 187A R		                            lea        
					 dx  ,itemExitString 
    5451 159C  E8 173A R		                            call       
					 PRINT_STR 
    5452				 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-131


    5453 159F  5A			                            pop        
					 dx 
    5454				                            CURSOR     
					 dh,dl       ;set cursor back to origin
					al position 
    5455 15A0  50                    1	                push    ax 
    5456 15A1  53                    1	                push    bx 
    5457 15A2  51                    1	                push    cx 
    5458 15A3  52                    1	                push    dx 
    5459 15A4  8A F6                 1	                mov dh, dh        ;row 
    5460 15A6  8A D2                 1	                mov dl, dl       ;colum
					n 
    5461 15A8  B7 00                 1	                mov bh, 0         ; 
    5462 15AA  B4 02                 1	                mov ah, 02h       ; 
    5463 15AC  CD 10                 1	                int 10h 
    5464 15AE  5A                    1	                pop    dx 
    5465 15AF  59                    1	                pop    cx 
    5466 15B0  5B                    1	                pop    bx 
    5467 15B1  58                    1	                pop    ax 
    5468				 
    5469 15B2  5A			                            pop        
					 dx 
    5470 15B3  59			                            pop        
					 cx 
    5471 15B4  5B			                            pop        
					 bx 
    5472 15B5  58			                            pop        
					 ax 
    5473 15B6  C3			                            ret 
    5474 15B7				PRINT_ALL_ITEMS ENDP 
    5475				     
    5476 15B7				PRINT_ITEM          PROC               
					                                       
					  ;print to row value in bl 
    5477 15B7  50			                            push    ax 
    5478 15B8  53			                            push    bx 
    5479 15B9  51			                            push    cx 
    5480 15BA  52			                            push    dx 
    5481 15BB  56			                            push    si 
    5482				 
    5483 15BC  33 C0			                            xor        
					 ax, ax 
    5484 15BE  8A 04			                            mov        
					 al, [si] 
    5485 15C0  E8 1676 R		                            call       
					 PRINT_NUM 
    5486				 
    5487				                            CURSOR     
					 bl, 15 
    5488 15C3  50                    1	                push    ax 
    5489 15C4  53                    1	                push    bx 
    5490 15C5  51                    1	                push    cx 
    5491 15C6  52                    1	                push    dx 
    5492 15C7  8A F3                 1	                mov dh, bl        ;row 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-132


    5493 15C9  B2 0F                 1	                mov dl, 15       ;colum
					n 
    5494 15CB  B7 00                 1	                mov bh, 0         ; 
    5495 15CD  B4 02                 1	                mov ah, 02h       ; 
    5496 15CF  CD 10                 1	                int 10h 
    5497 15D1  5A                    1	                pop    dx 
    5498 15D2  59                    1	                pop    cx 
    5499 15D3  5B                    1	                pop    bx 
    5500 15D4  58                    1	                pop    ax 
    5501 15D5  8D 54 01			                            lea        
					 dx, [si + itemName] 
    5502 15D8  E8 173A R		                            call       
					 PRINT_STR 
    5503				 
    5504				                            CURSOR     
					 bl, 39 
    5505 15DB  50                    1	                push    ax 
    5506 15DC  53                    1	                push    bx 
    5507 15DD  51                    1	                push    cx 
    5508 15DE  52                    1	                push    dx 
    5509 15DF  8A F3                 1	                mov dh, bl        ;row 
    5510 15E1  B2 27                 1	                mov dl, 39       ;colum
					n 
    5511 15E3  B7 00                 1	                mov bh, 0         ; 
    5512 15E5  B4 02                 1	                mov ah, 02h       ; 
    5513 15E7  CD 10                 1	                int 10h 
    5514 15E9  5A                    1	                pop    dx 
    5515 15EA  59                    1	                pop    cx 
    5516 15EB  5B                    1	                pop    bx 
    5517 15EC  58                    1	                pop    ax 
    5518 15ED  8D 54 15			                            lea        
					 dx, [si + itemPrice] 
    5519 15F0  E8 173A R		                            call       
					 PRINT_STR 
    5520				 
    5521				                            CURSOR     
					 bl, 52 
    5522 15F3  50                    1	                push    ax 
    5523 15F4  53                    1	                push    bx 
    5524 15F5  51                    1	                push    cx 
    5525 15F6  52                    1	                push    dx 
    5526 15F7  8A F3                 1	                mov dh, bl        ;row 
    5527 15F9  B2 34                 1	                mov dl, 52       ;colum
					n 
    5528 15FB  B7 00                 1	                mov bh, 0         ; 
    5529 15FD  B4 02                 1	                mov ah, 02h       ; 
    5530 15FF  CD 10                 1	                int 10h 
    5531 1601  5A                    1	                pop    dx 
    5532 1602  59                    1	                pop    cx 
    5533 1603  5B                    1	                pop    bx 
    5534 1604  58                    1	                pop    ax 
    5535 1605  8A 44 1D			                            mov        
					 al, [si + itemQty] 
    5536 1608  E8 1676 R		                            call       
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-133


					 print_Num 
    5537				 
    5538				                             
    5539				 
    5540 160B  5E			                            pop     si 
    5541 160C  5A			                            pop     dx 
    5542 160D  59			                            pop     cx 
    5543 160E  5B			                            pop     bx 
    5544 160F  58			                            pop     ax 
    5545 1610  C3			                            ret 
    5546 1611				PRINT_ITEM      ENDP 
    5547				 
    5548				 
    5549 1611				PRINT_PRICE_STR     PROC               
					                     ;do not print lead
					ing zero 
    5550 1611  50			                            push       
					 ax 
    5551 1612  53			                            push       
					 bx 
    5552 1613  51			                            push       
					 cx 
    5553 1614  52			                            push       
					 dx 
    5554 1615  56			                            push       
					 si 
    5555				 
    5556 1616  33 C9			                            xor        
					 cx, cx 
    5557 1618				                            PRINT_PRICE
					_STR_ZERO_CHECK:     ;exit loop when fo
					und non zero 
    5558 1618  8A 04			                                       
					 mov         al, [si] 
    5559 161A  41			                                       
					 inc         cx 
    5560 161B  46			                                       
					 inc         si 
    5561				 
    5562 161C  3C 24			                                       
					 cmp         al, "$" 
    5563 161E  74 10			                                       
					 je          PRINT_PRICE_STR_ZERO      
					              ;if entire string is "0" 
    5564				 
    5565 1620  3C 30			                                       
					 cmp         al, "0" 
    5566 1622  74 F4			                                       
					 je          PRINT_PRICE_STR_ZERO_CHECK
					 
    5567 1624				                            PRINT_PRICE
					_STR_ZERO_CHECK_END: 
    5568 1624  4E			                            dec        
					 si                  ;si is the address
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-134


					 of the first number 
    5569 1625  49			                            dec        
					 cx 
    5570				 
    5571 1626  B8 0008			                            mov        
					 ax, strNumLen 
    5572 1629  2B C1			                            sub        
					 ax, cx 
    5573 162B  8B C8			                            mov        
					 cx, ax 
    5574 162D  EB 07 90			                            jmp        
					 PRINT_PRICE_STR_ZERO_END 
    5575				 
    5576 1630				                            PRINT_PRICE
					_STR_ZERO: 
    5577 1630  B9 0004			                                       
					 mov         cx, 4 
    5578 1633  2B F1			                                       
					 sub         si, cx 
    5579 1635  49			                                       
					 dec         cx 
    5580 1636				                            PRINT_PRICE
					_STR_ZERO_END: 
    5581				                             
    5582 1636				                            PRINT_PRICE
					_PRINT_LOOP: 
    5583 1636  8A 14			                                       
					 mov         dl, [si] 
    5584 1638  46			                                       
					 inc         si 
    5585				 
    5586				                                       
					 ; cmp         dl, "$" 
    5587				                                       
					 ; je          PRINT_PRICE_PRINT_LOOP 
    5588 1639  E8 17CB R		                                       
					 call        PRINT_CHAR 
    5589				 
    5590 163C  83 F9 03			                                       
					 cmp         cx, 3 
    5591 163F  74 05			                                       
					 je          PRINT_PRICE_DECIMAL 
    5592 1641  E2 F3			                                       
					 loop        PRINT_PRICE_PRINT_LOOP 
    5593				 
    5594 1643  EB 08 90			                                       
					 jmp         PRINT_PRICE_STR_EXIT 
    5595 1646				                                       
					 PRINT_PRICE_DECIMAL: 
    5596 1646  B2 2E			                                       
					             MOV         dl, "." 
    5597 1648  E8 17CB R		                                       
					             call        PRINT_CHAR    
					                                       
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-135


					          
    5598 164B  E2 E9			                                       
					             loop        PRINT_PRICE_PR
					INT_LOOP 
    5599				                             
    5600 164D				                            PRINT_PRICE
					_STR_EXIT: 
    5601 164D  5E			                            pop        
					 si 
    5602 164E  5A			                            pop        
					 dx 
    5603 164F  59			                            pop        
					 cx 
    5604 1650  5B			                            pop        
					 bx 
    5605 1651  58			                            pop        
					 ax 
    5606 1652  C3			                            ret 
    5607 1653				PRINT_PRICE_STR     ENDP 
    5608				 
    5609 1653				NUM_TO_STR          PROC        ;value 
					in ax to si 
    5610 1653  50			                        push    ax 
    5611 1654  53			                        push    bx 
    5612 1655  51			                        push    cx 
    5613 1656  52			                        push    dx 
    5614 1657  56			                        push    si 
    5615				 
    5616 1658  83 C6 08			                        add     si, str
					NumLen           ;offset to last char o
					f string number 
    5617 165B  4E			                        dec     si 
    5618				 
    5619 165C  33 C9			                        xor     cx, cx 
    5620 165E  BB 000A			                        mov     bx, 10d
					                 ;/10 
    5621				 
    5622 1661				                        NUM_TO_STR_DIV_
					LOOP: 
    5623 1661  33 D2			                                xor    
					 dx, dx          ;clear remainder 
    5624				 
    5625 1663  F7 F3			                                div    
					 bx 
    5626				 
    5627 1665  80 C2 30			                                add    
					 dl, 48d 
    5628 1668  88 14			                                mov    
					 [si],   dl 
    5629 166A  4E			                                dec    
					 si 
    5630				                                 
    5631 166B  3D 0000			                                cmp    
					 ax, 0 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-136


    5632 166E  75 F1			                                jnz    
					 NUM_TO_STR_DIV_LOOP 
    5633				 
    5634 1670  5E			                        pop    si 
    5635 1671  5A			                        pop    dx 
    5636 1672  59			                        pop    cx 
    5637 1673  5B			                        pop    bx 
    5638 1674  58			                        pop    ax 
    5639				 
    5640 1675  C3			                        ret 
    5641 1676				NUM_TO_STR      ENDP 
    5642				 
    5643 1676				PRINT_NUM           PROC               
					         ;print ax 
    5644 1676  50			                            push    ax 
    5645 1677  53			                            push    bx 
    5646 1678  51			                            push    cx 
    5647 1679  52			                            push    dx 
    5648				 
    5649 167A  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
    5650 167D  B9 0000			                            mov     cx,
					0h 
    5651				                             
    5652 1680				                            divLoop:   
					  
    5653 1680  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
    5654 1682  F7 F3			                                       
					 div     bx 
    5655 1684  52			                                       
					 push    dx          ;save remainder 
    5656 1685  41			                                       
					 inc     cx          ;count looped numb
					er 
    5657 1686  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
    5658 1688  75 F6			                                       
					 jnz     divLoop 
    5659				 
    5660 168A  B4 02			                            mov     ah,
					02h 
    5661				 
    5662 168C				                            printLoop: 
					  
    5663 168C  5A			                                       
					 pop     dx          ;get remainder 
    5664 168D  80 C2 30			                                       
					 add     dl,"0" 
    5665 1690  CD 21			                                       
					 int     21h         ;print 
    5666 1692  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-137


					zero (the number of times divLoop) 
    5667				 
    5668 1694  5A			                            pop    dx 
    5669 1695  59			                            pop    cx 
    5670 1696  5B			                            pop    bx 
    5671 1697  58			                            pop    ax 
    5672				 
    5673 1698  C3			                            ret 
    5674 1699				PRINT_NUM       ENDP 
    5675				     
    5676 1699				BCD_INPUT           PROC               
					     ;output to al 
    5677 1699  56			                push        si 
    5678				 
    5679 169A  8D 36 0023 R		                lea         si, bcdInpu
					tBuffer 
    5680				 
    5681 169E  B9 0003			                mov         cx, 3d     
					 ;max number of times to loop 
    5682 16A1  33 D2			                xor         dx, dx     
					 ;dl as temp value counter 
    5683				 
    5684				                ;;get bcd input 
    5685 16A3				                BCD_INPUT_LOOP: 
    5686 16A3  B4 01			                            mov        
					 ah, 1h 
    5687 16A5  CD 21			                            int        
					 21h 
    5688				 
    5689 16A7  3C 0D			                            cmp        
					 al, 13d 
    5690 16A9  74 07			                            je         
					 BCD_INPUT_LOOP_END 
    5691				                             
    5692 16AB  2C 30			                            sub        
					 al, 48d 
    5693 16AD  88 04			                            mov        
					 [si],al 
    5694				 
    5695 16AF  46			                            inc        
					 si 
    5696 16B0  E2 F1			                            loop       
					 BCD_INPUT_LOOP   
    5697 16B2				                BCD_INPUT_LOOP_END: 
    5698				 
    5699 16B2  B8 0001			                mov         ax, 1      
					             ;ax tracks 位数 of numbe
					r, eg first number * 1, second number *
					 10, third numb
    5700 16B5  8D 36 0025 R		                lea         si, bcdInpu
					tBuffer+2 
    5701 16B9  B9 0003			                mov         cx, 3d     
					             ;number of times to loop 
    5702 16BC				                BCD_INPUT_CALC: 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-138


    5703 16BC  33 DB			                            xor        
					 bx, bx 
    5704				 
    5705 16BE  8A 1C			                            mov        
					 bl, [si] 
    5706 16C0  80 FB 24			                            cmp        
					 bl, "$"     ;if is not digit 
    5707 16C3  74 0F			                            je         
					 BCD_INPUT_CAL_NOT_DIGIT 
    5708				 
    5709 16C5  50			                            push       
					 ax               
    5710				 
    5711 16C6  52			                            push       
					 dx                  ;mul will effect d
					x 
    5712 16C7  F7 E3			                            mul        
					 bx 
    5713 16C9  5A			                            pop        
					 dx 
    5714				 
    5715 16CA  03 D0			                            add        
					 dx, ax 
    5716 16CC  58			                            pop        
					 ax 
    5717				 
    5718 16CD  52			                            push       
					 dx                  ;mul will effect d
					x 
    5719 16CE  BB 000A			                            mov        
					 bx, 10d 
    5720 16D1  F7 E3			                            mul        
					 bx 
    5721 16D3  5A			                            pop        
					 dx 
    5722				 
    5723 16D4				                            BCD_INPUT_C
					AL_NOT_DIGIT: 
    5724 16D4  4E			                            dec        
					 si 
    5725 16D5  E2 E5			                            loop       
					 BCD_INPUT_CALC 
    5726				 
    5727 16D7  B9 0003			                mov         cx, 3d 
    5728 16DA  8D 36 0023 R		                lea         si, bcdInpu
					tBuffer 
    5729 16DE				                BCD_INPUT_CLEAR_STR: 
    5730 16DE  B0 24			                            mov        
					 al  ,   "$" 
    5731 16E0  88 04			                            mov        
					 [si],   al 
    5732 16E2  46			                            inc        
					 si 
    5733 16E3  E2 F9			                            loop       
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-139


					 BCD_INPUT_CLEAR_STR 
    5734 16E5  8B C2			                mov         ax, dx 
    5735				                 
    5736 16E7  5E			                pop         si 
    5737 16E8  C3			                ret 
    5738 16E9				BCD_INPUT       ENDP 
    5739				     
    5740 16E9				DISPLAY_BOX         PROC               
					     ;display box from detials from si 
    5741 16E9  50			                            push    ax 
    5742 16EA  53			                            push    bx 
    5743 16EB  51			                            push    cx 
    5744 16EC  52			                            push    dx 
    5745				 
    5746 16ED  33 C0			                            xor     ax,
					 ax 
    5747 16EF  33 DB			                            xor     bx,
					 bx 
    5748 16F1  33 C9			                            xor     cx,
					 cx 
    5749 16F3  33 D2			                            xor     dx,
					 dx 
    5750				 
    5751 16F5  8A 64 02			                            mov     ah,
					 [si + 2] 
    5752 16F8  8A 44 04			                            mov     al,
					 [si + 4] 
    5753 16FB  2A C4			                            sub     al,
					 ah           ;calculate number of colu
					mns to print 
    5754 16FD  32 E4			                            xor     ah,
					 ah 
    5755				 
    5756 16FF  8A 6C 01			                            mov     ch,
					 [si + 1] 
    5757 1702  8A 4C 03			                            mov     cl,
					 [si + 3] 
    5758 1705  2A CD			                            sub     cl,
					 ch 
    5759 1707  32 ED			                            xor     ch,
					 ch 
    5760				 
    5761 1709  8A 5C 01			                            mov     bl,
					 [si + 1] 
    5762				 
    5763 170C				                            DISPLAY_BOX
					_LOOP: 
    5764				                                    CUR
					SOR  bl,[si+2] 
    5765 170C  50                    1	                push    ax 
    5766 170D  53                    1	                push    bx 
    5767 170E  51                    1	                push    cx 
    5768 170F  52                    1	                push    dx 
    5769 1710  8A F3                 1	                mov dh, bl        ;row 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-140


    5770 1712  8A 54 02              1	                mov dl, [si+2]       ;c
					olumn 
    5771 1715  B7 00                 1	                mov bh, 0         ; 
    5772 1717  B4 02                 1	                mov ah, 02h       ; 
    5773 1719  CD 10                 1	                int 10h 
    5774 171B  5A                    1	                pop    dx 
    5775 171C  59                    1	                pop    cx 
    5776 171D  5B                    1	                pop    bx 
    5777 171E  58                    1	                pop    ax 
    5778				 
    5779 171F  50			                                    pus
					h    ax 
    5780 1720  53			                                    pus
					h    bx 
    5781 1721  51			                                    pus
					h    cx 
    5782 1722  52			                                    pus
					h    dx 
    5783 1723  8B C8			                                    mov
					     cx, ax          ;number of chars t
					o print 
    5784 1725  B0 20			                                    mov
					     al, " "         ;char to print 
    5785 1727  8A 1C			                                    mov
					     bl, [si]        ;colour 
    5786 1729  B4 09			                                    mov
					     ah, 09h         ;ah 09 int 10h 
    5787 172B  CD 10			                                    int
					     10h 
    5788 172D  5A			                                    pop
					     dx 
    5789 172E  59			                                    pop
					     cx 
    5790 172F  5B			                                    pop
					     bx 
    5791 1730  58			                                    pop
					     ax 
    5792				                                     
    5793 1731  FE C3			                                    inc
					     bl 
    5794 1733  E2 D7			                                    loo
					p    DISPLAY_BOX_LOOP 
    5795				 
    5796 1735  5A			                            pop    dx 
    5797 1736  59			                            pop    cx 
    5798 1737  5B			                            pop    bx 
    5799 1738  58			                            pop    ax 
    5800 1739  C3			                            ret 
    5801 173A				DISPLAY_BOX     ENDP 
    5802				     
    5803 173A				PRINT_STR           PROC 
    5804 173A  50			                            push       
					 ax 
    5805 173B  B4 09			                            mov        
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-141


					 ah,09d 
    5806 173D  CD 21			                            int        
					 21h 
    5807 173F  58			                            pop        
					 ax 
    5808 1740  C3			                            ret 
    5809 1741				PRINT_STR       ENDP 
    5810				     
    5811 1741				CLS                 PROC 
    5812 1741  50			                            push    ax 
    5813 1742  53			                            push    bx 
    5814 1743  51			                            push    cx 
    5815 1744  52			                            push    dx 
    5816				 
    5817 1745  B4 06			                            mov ah, 06h
					       ; 
    5818 1747  B0 00			                            mov al, 00h
					       ; 
    5819 1749  B7 0F			                            mov bh, 0Fh
					       ; 
    5820 174B  B9 0000			                            mov cx, 0  
					       ; Clear Screen 
    5821 174E  B6 64			                            mov dh, 100
					       ; 
    5822 1750  B2 50			                            mov dl, 80 
					       ; 
    5823 1752  CD 10			                            int 10h    
					       ; 
    5824				 
    5825 1754  BA 0000			                            mov dx, 0  
					       ; 
    5826 1757  B7 00			                            mov bh, 0  
					       ; Set cursor to (0,0) 
    5827 1759  B4 02			                            mov ah, 02h
					       ;  
    5828 175B  CD 10			                            int 10h  
    5829				 
    5830 175D  5A			                            pop     dx 
    5831 175E  59			                            pop     cx 
    5832 175F  5B			                            pop     bx 
    5833 1760  58			                            pop     ax 
    5834				 
    5835 1761  C3			                            ret 
    5836 1762				CLS             ENDP 
    5837				     
    5838 1762				INPUT_STR           PROC               
					                         ;read input an
					d move to address in di 
    5839 1762  50			                            push       
					 ax 
    5840 1763  52			                            push       
					 dx 
    5841 1764  57			                            push       
					 di 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-142


    5842 1765  33 C0			                            xor        
					 ax,ax 
    5843 1767  33 C9			                            xor        
					 cx,cx 
    5844				 
    5845 1769  BA 0000 R		                            mov        
					 dx, offset buffer               ;input
					 string 
    5846 176C  B4 0A			                            mov        
					 ah,0Ah 
    5847 176E  CD 21			                            int        
					 21h 
    5848				 
    5849 1770  33 C9			                            xor        
					 cx,cx 
    5850 1772  8A 0E 0001 R		                            mov        
					 cl,[buffer+1]                   ;move 
					length of input to cl 
    5851				 
    5852 1776  B4 24			                            mov        
					 ah, "$" 
    5853 1778  8D 3E 0002 R		                            lea        
					 di, buffer+2                     ;offs
					et to start of string value 
    5854 177C  03 F9			                            add        
					 di, cx                           ;move
					 to after last character 
    5855 177E  88 25			                            mov        
					 [di],ah                         ;move 
					$ character to last place 
    5856				 
    5857 1780  5F			                            pop        
					 di 
    5858 1781  57			                            push       
					 di 
    5859				 
    5860 1782  8D 36 0002 R		                            lea        
					 si,buffer+2 
    5861 1786  32 ED			                            xor        
					 ch,ch 
    5862 1788  FE C1			                            inc        
					 cl 
    5863 178A				                            input_str_c
					py: 
    5864 178A  8A 24			                                       
					 mov         ah,[si] 
    5865 178C  88 25			                                       
					 mov         [di],ah 
    5866				 
    5867 178E  46			                                       
					 inc         si 
    5868 178F  47			                                       
					 inc         di 
    5869 1790  E2 F8			                                       
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-143


					 loop        input_str_cpy 
    5870				 
    5871 1792  5F			                            pop        
					 di 
    5872 1793  5A			                            pop        
					 dx 
    5873 1794  58			                            pop        
					 ax 
    5874 1795  C3			                            ret 
    5875 1796				INPUT_STR       ENDP 
    5876				     
    5877 1796				SECRET_INPUT        PROC 
    5878 1796  50			                            push       
					 ax 
    5879 1797  57			                            push       
					 di 
    5880				 
    5881 1798  33 C0			                            xor        
					 ax,ax 
    5882 179A  33 C9			                            xor        
					 cx,cx 
    5883				 
    5884 179C  B4 07			                            mov        
					 ah,07h 
    5885 179E				                            SECRET_INPU
					T_LOOP: 
    5886 179E  CD 21			                                       
					 int         21h 
    5887				                                       
					  
    5888 17A0  3C 0D			                                       
					 cmp         al, 13d 
    5889 17A2  74 24			                                       
					 je          SECRET_INPUT_LOOP_EXIT 
    5890				 
    5891 17A4  3C 08			                                       
					 cmp         al, 08d     ;if backspace 
    5892 17A6  74 0A			                                       
					 je          SECRET_INPUT_LOOP_BACKSPAC
					E 
    5893				 
    5894 17A8  B2 2A			                                       
					 mov         dl, "*" 
    5895 17AA  E8 17CB R		                                       
					 call        PRINT_CHAR 
    5896				 
    5897 17AD  88 05			                                       
					 mov         [di],al 
    5898 17AF  47			                                       
					 inc         di 
    5899				 
    5900 17B0  EB EC			                                       
					 jmp         SECRET_INPUT_LOOP 
    5901				 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-144


    5902 17B2				                                       
					 SECRET_INPUT_LOOP_BACKSPACE: 
    5903 17B2  4F			                                       
					             dec         di 
    5904 17B3  B2 24			                                       
					             mov         dl  ,"$" 
    5905 17B5  88 15			                                       
					             mov         [di],dl 
    5906				 
    5907 17B7  B2 08			                                       
					             mov         dl, 8d 
    5908 17B9  E8 17CB R		                                       
					             call        PRINT_CHAR 
    5909 17BC  B2 20			                                       
					             mov         dl, " " 
    5910 17BE  E8 17CB R		                                       
					             call        PRINT_CHAR 
    5911 17C1  B2 08			                                       
					             mov         dl, 8d 
    5912 17C3  E8 17CB R		                                       
					             call        PRINT_CHAR 
    5913 17C6  EB D6			                                       
					 jmp         SECRET_INPUT_LOOP 
    5914 17C8				                            SECRET_INPU
					T_LOOP_EXIT: 
    5915 17C8  5F			                            pop        
					 di 
    5916 17C9  58			                            pop        
					 ax 
    5917 17CA  C3			                            ret 
    5918 17CB				SECRET_INPUT    ENDP 
    5919				     
    5920 17CB				PRINT_CHAR          PROC               
					                         ;print cjaract
					er of value in dl 
    5921 17CB  50			                            push    ax 
    5922 17CC  B4 02			                            mov     ah,
					02h 
    5923 17CE  CD 21			                            int     21h
					 
    5924 17D0  58			                            pop     ax 
    5925 17D1  C3			                            ret 
    5926 17D2				PRINT_CHAR      ENDP 
    5927				     
    5928 17D2				NEWLINE             PROC 
    5929 17D2  52			                            push    dx 
    5930 17D3  B2 0A			                            mov     dl,
					0Ah 
    5931 17D5  E8 17CB R		                            call PRINT_
					CHAR 
    5932 17D8  5A			                            pop     dx 
    5933 17D9  C3			                            ret 
    5934 17DA				NEWLINE         ENDP 
    5935				     
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-145


    5936 17DA				ANYPAUSE            PROC 
    5937 17DA  50			                            push       
					 ax 
    5938 17DB  52			                            push       
					 dx 
    5939				 
    5940 17DC  8D 16 01F4 R		                            lea        
					 dx, anyKeyToCont 
    5941 17E0  E8 173A R		                            call       
					 PRINT_STR 
    5942 17E3  B4 01			                            mov        
					 ah, 01h 
    5943 17E5  CD 21			                            int        
					 21h 
    5944				 
    5945 17E7  5A			                            pop        
					 dx 
    5946 17E8  58			                            pop        
					 ax 
    5947 17E9  C3			                            ret 
    5948 17EA				ANYPAUSE        ENDP 
    5949				     
    5950 17EA				STRCMP              PROC               
					                         ;compares stri
					ng in si and di, if equal will return 0
					 in ax 
    5951 17EA  56			                            push       
					 si 
    5952 17EB  57			                            push       
					 di 
    5953				 
    5954 17EC  33 C0			                            xor        
					 ax,ax 
    5955 17EE				                            STRCMP_LOOP
					_START: 
    5956 17EE  8A 04			                                       
					 mov         al,[si] 
    5957 17F0  8A 25			                                       
					 mov         ah,[di] 
    5958				                                       
					  
    5959 17F2  46			                                       
					 inc         si 
    5960 17F3  47			                                       
					 inc         di 
    5961				 
    5962 17F4  3C 24			                                       
					 cmp         al,"$" 
    5963 17F6  74 04			                                       
					 je          STRCMP_LOOP_END 
    5964				 
    5965 17F8  3A C4			                                       
					 cmp         al,ah 
    5966 17FA  74 F2			                                       
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-146


					 je          STRCMP_LOOP_START 
    5967				 
    5968 17FC				                            STRCMP_LOOP
					_END: 
    5969 17FC  2A C4			                            sub        
					 al,ah               ;return sub of bot
					h strings 
    5970 17FE  32 E4			                            xor        
					 ah,ah 
    5971				 
    5972 1800  5F			                            pop        
					 di 
    5973 1801  5E			                            pop        
					 si 
    5974 1802  C3			                            ret 
    5975 1803				STRCMP          ENDP 
    5976				 
    5977				;;;;;;;;;;;;;STRNUM 
    5978				 
    5979 1803				STRNUM_ADD          PROC               
					             ;string si + string di 
    5980 1803  50			                        push    ax 
    5981 1804  53			                        push    bx 
    5982 1805  51			                        push    cx 
    5983 1806  52			                        push    dx 
    5984 1807  56			                        push    si 
    5985 1808  57			                        push    di 
    5986				 
    5987 1809  C6 06 251A R 00		                        mov     [remain
					der], 0 
    5988				 
    5989 180E  B9 0008			                        mov     cx, str
					NumLen 
    5990 1811  49			                        dec     cx 
    5991 1812  03 F1			                        add     si, cx 
					         ;offset to last char 
    5992 1814  03 F9			                        add     di, cx 
    5993				 
    5994 1816  B9 0008			                        mov     cx, str
					NumLen 
    5995				 
    5996 1819				                        STRNUM_ADD_LOOP
					: 
    5997 1819  8A 04			                                mov    
					 al, [si] 
    5998 181B  2C 30			                                sub    
					 al, 48d 
    5999				 
    6000 181D  8A 25			                                mov    
					 ah, [di] 
    6001 181F  80 EC 30			                                sub    
					 ah, 48d 
    6002				 
    6003 1822  02 C4			                                add    
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-147


					 al, ah 
    6004 1824  02 06 251A R		                                add    
					 al, [remainder] 
    6005 1828  32 E4			                                xor    
					 ah, ah 
    6006				 
    6007 182A  BB 000A			                                mov    
					 bx, 10d 
    6008 182D  F6 F3			                                div    
					 bl              ;remainder in ah, quot
					ient in al  
    6009				 
    6010 182F  A2 251A R		                                mov    
					 [remainder],al  ;save quotient 
    6011				 
    6012 1832  51			                                push   
					 cx 
    6013 1833  57			                                push   
					 di 
    6014				                                 
    6015 1834  49			                                dec    
					 cx 
    6016 1835  8D 3E 258D R		                                lea    
					 di,     result 
    6017 1839  03 F9			                                add    
					 di,     cx 
    6018				 
    6019 183B  80 C4 30			                                add    
					 ah,     48d 
    6020 183E  88 25			                                mov    
					 [di],   ah 
    6021				 
    6022 1840  5F			                                pop    
					 di 
    6023 1841  59			                                pop    
					 cx 
    6024				 
    6025 1842  4E			                                dec    
					 si 
    6026 1843  4F			                                dec    
					 di 
    6027 1844  E2 D3			                                loop   
					 STRNUM_ADD_LOOP 
    6028				 
    6029 1846  5F			                        pop     di 
    6030 1847  5E			                        pop     si 
    6031 1848  5A			                        pop     dx 
    6032 1849  59			                        pop     cx 
    6033 184A  5B			                        pop     bx 
    6034 184B  58			                        pop     ax 
    6035				 
    6036 184C  C3			                        ret 
    6037 184D				STRNUM_ADD          ENDP 
    6038				 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-148


    6039 184D				STRNUM_MUL          PROC               
					             ;multiply si, di strings, 
					assume string has 3 decimal places, thu
					s last 3 digits
    6040 184D  C6 06 251B R 00		                        mov     [carry]
					     ,0 
    6041 1852  C6 06 2533 R 00		                        mov     [mulI] 
					     ,0 
    6042 1857  C6 06 2534 R 00		                        mov     [mulJ] 
					     ,0 
    6043				 
    6044 185C  B9 0008			                        mov     cx, str
					NumLen 
    6045 185F  49			                        dec     cx 
    6046				 
    6047 1860  03 F1			                        add     si, cx 
					         ;offset to last char 
    6048 1862  03 F9			                        add     di, cx 
    6049				 
    6050 1864  B9 0008			                        mov     cx, str
					NumLen 
    6051				 
    6052 1867				                        STRNUM_MUL_L1: 
    6053 1867  8A 05			                                mov    
					 al, [di] 
    6054 1869  2C 30			                                sub    
					 al, 48d 
    6055 186B  A2 2532 R		                                mov    
					 [mulY],al 
    6056				 
    6057 186E  C6 06 2533 R 00		                                mov    
					 [mulI], 0 
    6058 1873  51			                                push   
					 cx 
    6059				 
    6060 1874  56			                                push   
					 si 
    6061 1875  B9 0008			                                mov    
					 cx, strNumLen 
    6062				                                 
    6063 1878				                                STRNUM_
					MUL_L2: 
    6064				                                     
    6065 1878  51			                                       
					 push    cx 
    6066 1879  33 C0			                                       
					 xor     ax, ax 
    6067 187B  8A 04			                                       
					 mov     al, [si] 
    6068 187D  2C 30			                                       
					 sub     al, 48d 
    6069				 
    6070 187F  33 DB			                                       
					 xor     bx, bx 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-149


    6071 1881  8A 1E 2532 R		                                       
					 mov     bl, [mulY] 
    6072 1885  F7 E3			                                       
					 mul     bx                  ;ax = ui +
					 vj 
    6073				 
    6074 1887  E8 0A34 R		                                       
					 call    GET_IJ 
    6075				 
    6076 188A  56			                                       
					 push    si 
    6077 188B  8D 36 251C R		                                       
					 lea     si, mulResult 
    6078 188F  03 F2			                                       
					 add     si, dx              ;OFFSET to
					 w(i+j) result. n-1, n-2, ..., 0 (rever
					se order, index
    6079				 
    6080 1891  33 DB			                                       
					 xor     bx, bx 
    6081 1893  8A 1C			                                       
					 mov     bl, [si]            ;w(i+j) 
    6082 1895  80 EB 30			                                       
					 sub     bl, 48d                       
					                  
    6083				 
    6084 1898  03 C3			                                       
					 add     ax, bx              ;ax = ui +
					 vj + w(i+j) 
    6085				 
    6086 189A  33 DB			                                       
					 xor     bx, bx 
    6087 189C  8A 1E 251B R		                                       
					 mov     bl, [carry] 
    6088 18A0  03 C3			                                       
					 add     ax, bx              ;ax = ui +
					 vj + w(i+j) + k 
    6089				 
    6090 18A2  33 D2			                                       
					 xor     dx, dx 
    6091 18A4  BB 000A			                                       
					 mov     bx, 10d 
    6092 18A7  F7 F3			                                       
					 div     bx                  ;dx = ax M
					od 10, ax = FLOOR(ax/b) 
    6093				 
    6094 18A9  80 C2 30			                                       
					 add     dl,     48d 
    6095 18AC  88 14			                                       
					 mov     [si],   dl          ;w(i+j) = 
					ax Mod 10 
    6096				 
    6097 18AE  A2 251B R		                                       
					 mov     [carry], al         ;k = FLOOR
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-150


					(ax/b) 
    6098 18B1  5E			                                       
					 pop     si 
    6099				 
    6100				                                       
					 ; call    DEBUG 
    6101				 
    6102 18B2  FE 06 2533 R		                                       
					 inc     [mulI] 
    6103				 
    6104 18B6  4E			                                       
					 dec     si 
    6105				 
    6106 18B7  59			                                       
					 pop     cx 
    6107 18B8  E2 BE			                                       
					 loop    STRNUM_MUL_L2 
    6108				 
    6109 18BA  5E			                                pop    
					 si 
    6110				 
    6111 18BB  E8 0A34 R		                                call   
					 GET_IJ 
    6112 18BE  56			                                push   
					 si 
    6113 18BF  8D 36 251C R		                                lea    
					 si, mulResult 
    6114 18C3  03 F2			                                add    
					 si, dx              ;OFFSET to w(i+j) 
					result. n-1, n-2, ..., 0 (reverse order
					, index ends wi
    6115				 
    6116 18C5  A0 251B R		                                mov    
					 al, [carry] 
    6117 18C8  04 30			                                add    
					 al, 48d 
    6118 18CA  88 04			                                mov    
					 [si],   al 
    6119				 
    6120 18CC  5E			                                pop    
					 si 
    6121				                                 
    6122 18CD  FE 06 2534 R		                                inc    
					 [mulJ] 
    6123 18D1  4F			                                dec    
					 di 
    6124				 
    6125 18D2  59			                                pop    
					 cx 
    6126 18D3  E2 92			                                loop   
					 STRNUM_MUL_L1 
    6127 18D5  C3			                        ret 
    6128 18D6				STRNUM_MUL          ENDP 
    6129				 
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Page     1-151


    6130 18D6				END MAIN 

Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Symbols-1


Macros:

		N a m e			Lines

BG_16_COLOUR . . . . . . . . . .  	  15
BG_8_COLOUR  . . . . . . . . . .  	  15
CLEAR_STRNUM . . . . . . . . . .  	  10
COLOUR_CHAR  . . . . . . . . . .  	  14
CURSOR . . . . . . . . . . . . .  	  14
CURSORPOS  . . . . . . . . . . .  	  10
NUM_TO_STR_M . . . . . . . . . .  	   7
STRCPY . . . . . . . . . . . . .  	   9
STRLEN . . . . . . . . . . . . .  	  10
STRSHL . . . . . . . . . . . . .  	  16

Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	29EA	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	18D6	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ABCLOGO  . . . . . . . . . . . .  	L BYTE	0026	_DATA
ACCOUNTSIZE  . . . . . . . . . .  	NUMBER	001E	
ADD_CUSTOMER . . . . . . . . . .  	N PROC	0C79	_TEXT	Length = 01C0
AFTER_LOGIN  . . . . . . . . . .  	L NEAR	0097	_TEXT
AGE  . . . . . . . . . . . . . .  	NUMBER	001A	
ANYKEYTOCONT . . . . . . . . . .  	L BYTE	01F4	_DATA
ANYPAUSE . . . . . . . . . . . .  	N PROC	17DA	_TEXT	Length = 0010

BCDINPUTBUFFER . . . . . . . . .  	L BYTE	0023	_DATA
BCD_INPUT  . . . . . . . . . . .  	N PROC	1699	_TEXT	Length = 0050
BCD_INPUT_CAL  . . . . . . . . .  	L NEAR	0AEE	_TEXT
BCD_INPUT_CALC . . . . . . . . .  	L NEAR	16BC	_TEXT
BCD_INPUT_CAL_NOT_DIGIT  . . . .  	L NEAR	16D4	_TEXT
BCD_INPUT_CAL_NOT_DIGIT_1  . . .  	L NEAR	0B14	_TEXT
BCD_INPUT_CAL_NOT_DIGIT_END_1  .  	L NEAR	0B17	_TEXT
BCD_INPUT_CLEAR_STR  . . . . . .  	L NEAR	16DE	_TEXT
BCD_INPUT_LOOP . . . . . . . . .  	L NEAR	16A3	_TEXT
BCD_INPUT_LOOP_END . . . . . . .  	L NEAR	16B2	_TEXT
BONUSPOINT . . . . . . . . . . .  	NUMBER	002A	
BUFFER . . . . . . . . . . . . .  	L BYTE	0000	_DATA

CALCULATESUBTOTALLOOP  . . . . .  	L NEAR	0A9C	_TEXT
CALC_SUBTOTAL  . . . . . . . . .  	N PROC	0A96	_TEXT	Length = 0038
CARRY  . . . . . . . . . . . . .  	L BYTE	251B	_DATA
CLEARLOGININPUT  . . . . . . . .  	L NEAR	06CC	_TEXT
CLEAR_CUST_INPUT . . . . . . . .  	N PROC	1019	_TEXT	Length = 00C4
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Symbols-2


CLS  . . . . . . . . . . . . . .  	N PROC	1741	_TEXT	Length = 0021
CONFIRMADDED . . . . . . . . . .  	L NEAR	122C	_TEXT
CONFIRMEXIT  . . . . . . . . . .  	L BYTE	0FF5	_DATA
CURRENTSEL . . . . . . . . . . .  	L BYTE	0FF4	_DATA
CUSTDISPLAYBORDER  . . . . . . .  	L BYTE	1F60	_DATA	Length = 0009
CUSTFULLBOX1 . . . . . . . . . .  	L BYTE	2287	_DATA
CUSTFULLBOX2 . . . . . . . . . .  	L BYTE	228C	_DATA
CUSTFULLBOX3 . . . . . . . . . .  	L BYTE	2291	_DATA
CUSTINPUTBORDER  . . . . . . . .  	L BYTE	1D6E	_DATA
CUSTNAME . . . . . . . . . . . .  	NUMBER	0006	
CUSTOMER . . . . . . . . . . . .  	N PROC	07C5	_TEXT	Length = 00AC
CUSTOMERAGEHEADER  . . . . . . .  	L BYTE	1F4F	_DATA
CUSTOMERARR  . . . . . . . . . .  	L BYTE	22C6	_DATA
CUSTOMERCOUNT  . . . . . . . . .  	L BYTE	22C5	_DATA
CUSTOMERENTER  . . . . . . . . .  	L NEAR	0DAF	_TEXT
CUSTOMERENTEREXIT  . . . . . . .  	L NEAR	0E38	_TEXT
CUSTOMERENTERINPUT . . . . . . .  	L NEAR	0DE4	_TEXT
CUSTOMERFULL . . . . . . . . . .  	L NEAR	0E23	_TEXT
CUSTOMERHEADER . . . . . . . . .  	L BYTE	1C0D	_DATA	Length = 0050
CUSTOMERIDHEADER . . . . . . . .  	L BYTE	1F47	_DATA
CUSTOMERINVALIDINPUT . . . . . .  	L BYTE	1BFA	_DATA
CUSTOMERMENU . . . . . . . . . .  	L BYTE	18ED	_DATA
CUSTOMERMENUADD  . . . . . . . .  	L BYTE	1BA1	_DATA
CUSTOMERMENUDISPLAY  . . . . . .  	L BYTE	1BB1	_DATA
CUSTOMERMENUEXIT . . . . . . . .  	L BYTE	1BD0	_DATA
CUSTOMERMENUINPUTPROMPT  . . . .  	L BYTE	1BE0	_DATA
CUSTOMERMENULOOP . . . . . . . .  	L NEAR	07C5	_TEXT
CUSTOMERMENUREMOVE . . . . . . .  	L BYTE	1BC1	_DATA
CUSTOMERMENUSTR1 . . . . . . . .  	L BYTE	1B6C	_DATA
CUSTOMERMENUSTR2 . . . . . . . .  	L BYTE	1B8D	_DATA
CUSTOMERMENU_ADD . . . . . . . .  	L NEAR	083D	_TEXT
CUSTOMERMENU_DISPLAY . . . . . .  	L NEAR	0846	_TEXT
CUSTOMERMENU_END . . . . . . . .  	L NEAR	0858	_TEXT
CUSTOMERMENU_EXIT  . . . . . . .  	L NEAR	0870	_TEXT
CUSTOMERMENU_REMOVE  . . . . . .  	L NEAR	084F	_TEXT
CUSTOMERNAMEHEADER . . . . . . .  	L BYTE	1F4A	_DATA
CUSTOMERNUMBERLINE . . . . . . .  	L BYTE	2296	_DATA
CUSTOMERPHONEHEADER  . . . . . .  	L BYTE	1F53	_DATA
CUSTOMERPOINTHEADER  . . . . . .  	L BYTE	1F59	_DATA
CUSTOMERREMOVEPROMPT . . . . . .  	L BYTE	22A3	_DATA
CUSTOMERSIZE . . . . . . . . . .  	NUMBER	0030	
CUSTOMER_MENU  . . . . . . . . .  	N PROC	0B1A	_TEXT	Length = 015F
CUSTOMER_NUMBERING . . . . . . .  	N PROC	12E1	_TEXT	Length = 00FD
CUST_DETAIL_INPUT  . . . . . . .  	N PROC	10DD	_TEXT	Length = 0152
CUST_FULL_BOX  . . . . . . . . .  	N PROC	0FD3	_TEXT	Length = 0046

DEBUG  . . . . . . . . . . . . .  	N PROC	09FA	_TEXT	Length = 003A
DISPLAY_ALL_CUST . . . . . . . .  	N PROC	0E92	_TEXT	Length = 0141
DISPLAY_BOX  . . . . . . . . . .  	N PROC	16E9	_TEXT	Length = 0051
DISPLAY_BOX_LOOP . . . . . . . .  	L NEAR	170C	_TEXT
DISPLAY_QTY_BOX  . . . . . . . .  	N PROC	1401	_TEXT	Length = 0069
DIVIDER  . . . . . . . . . . . .  	L BYTE	0AD1	_DATA	Length = 0028
DIVLOOP  . . . . . . . . . . . .  	L NEAR	1680	_TEXT

Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Symbols-3


EXIT . . . . . . . . . . . . . .  	N PROC	00F4	_TEXT	Length = 021C
EXITBOX  . . . . . . . . . . . .  	L BYTE	101A	_DATA
EXITBOX1 . . . . . . . . . . . .  	L BYTE	101F	_DATA
EXITBOX2 . . . . . . . . . . . .  	L BYTE	1024	_DATA
EXITBOX3 . . . . . . . . . . . .  	L BYTE	1029	_DATA
EXITSEL  . . . . . . . . . . . .  	L BYTE	1019	_DATA
EXITSELECTIONLEFT  . . . . . . .  	L NEAR	0238	_TEXT
EXITSELECTIONLOOP  . . . . . . .  	L NEAR	0225	_TEXT
EXITSELECTIONLOOPEXIT  . . . . .  	L NEAR	030F	_TEXT
EXITSELECTIONRIGHT . . . . . . .  	L NEAR	02A3	_TEXT
EXIT_LABLE . . . . . . . . . . .  	L NEAR	00DE	_TEXT

FAILEDLOGIN1 . . . . . . . . . .  	L BYTE	04E5	_DATA
FAILEDLOGIN2 . . . . . . . . . .  	L BYTE	04F3	_DATA
FINDEMPTYCUST  . . . . . . . . .  	L NEAR	0DBF	_TEXT
FINDEMPTYCUSTEND . . . . . . . .  	L NEAR	0DCE	_TEXT

GET_IJ . . . . . . . . . . . . .  	N PROC	0A34	_TEXT	Length = 0013
GET_ITEM_PRICE . . . . . . . . .  	N PROC	0ACE	_TEXT	Length = 004C

ID . . . . . . . . . . . . . . .  	NUMBER	0000	
INPUTPASSWORD  . . . . . . . . .  	L BYTE	0525	_DATA	Length = 0014
INPUTUSERNAME  . . . . . . . . .  	L BYTE	051B	_DATA	Length = 000A
INPUT_STR  . . . . . . . . . . .  	N PROC	1762	_TEXT	Length = 0034
INPUT_STR_CPY  . . . . . . . . .  	L NEAR	178A	_TEXT
ITEMEXITSTRING . . . . . . . . .  	L BYTE	187A	_DATA
ITEMHEADER . . . . . . . . . . .  	L BYTE	180E	_DATA
ITEMID . . . . . . . . . . . . .  	NUMBER	0000	
ITEMNAME . . . . . . . . . . . .  	NUMBER	0001	
ITEMPRICE  . . . . . . . . . . .  	NUMBER	0015	
ITEMQTY  . . . . . . . . . . . .  	NUMBER	001D	
ITEMS  . . . . . . . . . . . . .  	L BYTE	1034	_DATA
ITEMSALERECORD . . . . . . . . .  	L BYTE	1125	_DATA
ITEMSELBORDER  . . . . . . . . .  	L BYTE	1843	_DATA
ITEMSELECTIONCHOICE  . . . . . .  	L BYTE	1032	_DATA
ITEMSELECTIONCONFIRM . . . . . .  	L NEAR	154E	_TEXT
ITEMSELECTIONCONFIRM_CP  . . . .  	L NEAR	14FC	_TEXT
ITEMSELECTIONDOWN  . . . . . . .  	L NEAR	14FF	_TEXT
ITEMSELECTIONLOOP  . . . . . . .  	L NEAR	1493	_TEXT
ITEMSELECTIONLOOP_CP . . . . . .  	L NEAR	14AC	_TEXT
ITEMSELECTIONUP  . . . . . . . .  	L NEAR	14AE	_TEXT
ITEMSELHEADER  . . . . . . . . .  	L BYTE	112D	_DATA
ITEMSIZE . . . . . . . . . . . .  	NUMBER	001E	
ITEMSUBTOTALS  . . . . . . . . .  	L WORD	2535	_DATA
ITEMSUBTOTALSSTRING  . . . . . .  	L BYTE	2545	_DATA	Length = 0008
ITEMSUBTOTALS_TO_STRING  . . . .  	L NEAR	0A72	_TEXT
ITEM_SELECTION . . . . . . . . .  	N PROC	146A	_TEXT	Length = 00E5
ITEM_SELECTION_EXIT  . . . . . .  	L NEAR	07C4	_TEXT

LOGINBORDER  . . . . . . . . . .  	L BYTE	036D	_DATA
LOGINCHANCES . . . . . . . . . .  	L BYTE	0241	_DATA
LOGINHEADER  . . . . . . . . . .  	L BYTE	029E	_DATA	Length = 0050
LOGININFO  . . . . . . . . . . .  	L BYTE	0244	_DATA
LOGINSTATE . . . . . . . . . . .  	L BYTE	0242	_DATA
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Symbols-4


LOGIN_CHECK  . . . . . . . . . .  	N PROC	0588	_TEXT	Length = 014F
LOGIN_EXIT . . . . . . . . . . .  	L NEAR	06C2	_TEXT
LOGIN_FAIL . . . . . . . . . . .  	L NEAR	0619	_TEXT
LOGIN_INPUT  . . . . . . . . . .  	N PROC	04CB	_TEXT	Length = 00BD
LOGIN_NO_CHANCES . . . . . . . .  	L NEAR	006B	_TEXT
LOGIN_START  . . . . . . . . . .  	L NEAR	0007	_TEXT
LOGIN_SUCCESS  . . . . . . . . .  	L NEAR	067A	_TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 00F4
MAIN_MENU_CUSTOMER . . . . . . .  	L NEAR	00CD	_TEXT
MAIN_MENU_EXIT . . . . . . . . .  	L NEAR	00D2	_TEXT
MAIN_MENU_SALES  . . . . . . . .  	L NEAR	00C5	_TEXT
MATCH_PASSWORD . . . . . . . . .  	L NEAR	05EE	_TEXT
MATCH_USERNAME . . . . . . . . .  	L NEAR	05BA	_TEXT
MAXCUSTNUM . . . . . . . . . . .  	NUMBER	0005	
MAXSEL . . . . . . . . . . . . .  	NUMBER	0003	
MENU . . . . . . . . . . . . . .  	N PROC	0310	_TEXT	Length = 01BB
MENUBORDER . . . . . . . . . . .  	L BYTE	0B22	_DATA
MENUHEADER . . . . . . . . . . .  	L BYTE	0A26	_DATA
MENUINPUTTIP . . . . . . . . . .  	L BYTE	0FBB	_DATA	Length = 0018
MENUSELECTIONS . . . . . . . . .  	L BYTE	0F7F	_DATA
MENU_EXIT  . . . . . . . . . . .  	L NEAR	00DE	_TEXT
MENU_START . . . . . . . . . . .  	L NEAR	0097	_TEXT
MOVE_CURSOR_QTY  . . . . . . . .  	N PROC	13DE	_TEXT	Length = 0023
MULI . . . . . . . . . . . . . .  	L BYTE	2533	_DATA
MULJ . . . . . . . . . . . . . .  	L BYTE	2534	_DATA
MULRESULT  . . . . . . . . . . .  	L BYTE	251C	_DATA	Length = 0014
MULRESULTLEN . . . . . . . . . .  	NUMBER	0014	
MULX . . . . . . . . . . . . . .  	L BYTE	2531	_DATA
MULY . . . . . . . . . . . . . .  	L BYTE	2532	_DATA

NEWLINE  . . . . . . . . . . . .  	N PROC	17D2	_TEXT	Length = 0008
NOMORECHANCE . . . . . . . . . .  	L BYTE	0502	_DATA
NOPOS  . . . . . . . . . . . . .  	L BYTE	1030	_DATA
NOSTR  . . . . . . . . . . . . .  	L BYTE	1011	_DATA
NUMBEROFITEMS  . . . . . . . . .  	L BYTE	1033	_DATA
NUM_TO_STR . . . . . . . . . . .  	N PROC	1653	_TEXT	Length = 0023
NUM_TO_STR_DIV_LOOP  . . . . . .  	L NEAR	1661	_TEXT

PASSWORDOFFSET . . . . . . . . .  	NUMBER	000A	
PASSWRONG  . . . . . . . . . . .  	L BYTE	04C4	_DATA
PASS_NOT_FOUND . . . . . . . . .  	L NEAR	05FD	_TEXT
PHONE  . . . . . . . . . . . . .  	NUMBER	001E	
PRICE_BCD_CONV_CALC  . . . . . .  	L NEAR	0AEA	_TEXT
PRICE_BCD_CONV_LOOP  . . . . . .  	L NEAR	0ADC	_TEXT
PRINTLOOP  . . . . . . . . . . .  	L NEAR	168C	_TEXT
PRINT_ALL_CUST . . . . . . . . .  	N PROC	122F	_TEXT	Length = 0040
PRINT_ALL_CUST_LOOP  . . . . . .  	L NEAR	123D	_TEXT
PRINT_ALL_ITEMS  . . . . . . . .  	N PROC	154F	_TEXT	Length = 0068
PRINT_ALL_ITEM_NAME  . . . . . .  	N PROC	092C	_TEXT	Length = 0031
PRINT_ALL_ITEM_NAME_LOOP . . . .  	L NEAR	093D	_TEXT
PRINT_ALL_SOLD_QTY . . . . . . .  	N PROC	08C7	_TEXT	Length = 0031
PRINT_ALL_SOLD_QTY_LOOP  . . . .  	L NEAR	08D8	_TEXT
PRINT_ALL_SUBTOTAL . . . . . . .  	N PROC	08F8	_TEXT	Length = 0034
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Symbols-5


PRINT_ALL_SUBTOTAL_LOOP  . . . .  	L NEAR	0902	_TEXT
PRINT_CHAR . . . . . . . . . . .  	N PROC	17CB	_TEXT	Length = 0007
PRINT_CUST . . . . . . . . . . .  	N PROC	126F	_TEXT	Length = 0072
PRINT_ITEM . . . . . . . . . . .  	N PROC	15B7	_TEXT	Length = 005A
PRINT_ITEM_LOOP  . . . . . . . .  	L NEAR	1566	_TEXT
PRINT_NUM  . . . . . . . . . . .  	N PROC	1676	_TEXT	Length = 0023
PRINT_PRICE_DECIMAL  . . . . . .  	L NEAR	1646	_TEXT
PRINT_PRICE_PRINT_LOOP . . . . .  	L NEAR	1636	_TEXT
PRINT_PRICE_STR  . . . . . . . .  	N PROC	1611	_TEXT	Length = 0042
PRINT_PRICE_STR_EXIT . . . . . .  	L NEAR	164D	_TEXT
PRINT_PRICE_STR_ZERO . . . . . .  	L NEAR	1630	_TEXT
PRINT_PRICE_STR_ZERO_CHECK . . .  	L NEAR	1618	_TEXT
PRINT_PRICE_STR_ZERO_CHECK_END .  	L NEAR	1624	_TEXT
PRINT_PRICE_STR_ZERO_END . . . .  	L NEAR	1636	_TEXT
PRINT_STR  . . . . . . . . . . .  	N PROC	173A	_TEXT	Length = 0007
PROMPTCUSTCONTINUEADD  . . . . .  	L BYTE	1D3D	_DATA
PROMPTCUSTOMERAGE  . . . . . . .  	L BYTE	1CF8	_DATA
PROMPTCUSTOMERFULL . . . . . . .  	L BYTE	1D29	_DATA
PROMPTCUSTOMERID . . . . . . . .  	L BYTE	1CDA	_DATA
PROMPTCUSTOMERNAME . . . . . . .  	L BYTE	1CE8	_DATA
PROMPTCUSTOMERPHONE  . . . . . .  	L BYTE	1D07	_DATA
PROMPTCUSTOMERPOINTSEL . . . . .  	L BYTE	25C7	_DATA
PROMPTCUSTPOINT  . . . . . . . .  	L BYTE	1D18	_DATA
PROMPTPASSWORD . . . . . . . . .  	L BYTE	04A9	_DATA
PROMPTUSERNAME . . . . . . . . .  	L BYTE	049E	_DATA

QTYBORDER1 . . . . . . . . . . .  	L BYTE	1897	_DATA
QTYBORDER2 . . . . . . . . . . .  	L BYTE	18AE	_DATA
QTYBORDER3 . . . . . . . . . . .  	L BYTE	18C5	_DATA
QTYDISPLAYBOX  . . . . . . . . .  	L BYTE	1892	_DATA
QTYERROR . . . . . . . . . . . .  	L BYTE	18E1	_DATA
QTYPROMPT  . . . . . . . . . . .  	L BYTE	18DB	_DATA
QTY_CHECK  . . . . . . . . . . .  	L NEAR	077A	_TEXT
QTY_CHECK_END  . . . . . . . . .  	L NEAR	07AA	_TEXT
QTY_CHECK_ERROR  . . . . . . . .  	L NEAR	078C	_TEXT
QUANTITY . . . . . . . . . . . .  	L BYTE	25C6	_DATA

READAGE  . . . . . . . . . . . .  	L NEAR	1199	_TEXT
READID . . . . . . . . . . . . .  	L NEAR	1113	_TEXT
READNAME . . . . . . . . . . . .  	L NEAR	1156	_TEXT
READPHONE  . . . . . . . . . . .  	L NEAR	11DC	_TEXT
READPOINT  . . . . . . . . . . .  	L NEAR	121F	_TEXT
RECIEPTBORDER  . . . . . . . . .  	L BYTE	2632	_DATA
REMAINDER  . . . . . . . . . . .  	L BYTE	251A	_DATA
REMOVE_CUSTOMER  . . . . . . . .  	N PROC	0E39	_TEXT	Length = 0040
REMOVE_CUSTOMER_INPUT_LOOP . . .  	L NEAR	0E3F	_TEXT
REMOVE_SI_CUST . . . . . . . . .  	N PROC	0E79	_TEXT	Length = 0019
REMOVE_SI_CUST_EXIT  . . . . . .  	L NEAR	0E91	_TEXT
REMOVE_SI_CUST_LOOP  . . . . . .  	L NEAR	0E84	_TEXT
RESULT . . . . . . . . . . . . .  	L BYTE	258D	_DATA	Length = 0008

SALES  . . . . . . . . . . . . .  	N PROC	06D7	_TEXT	Length = 00EE
SALES_START  . . . . . . . . . .  	L NEAR	06DF	_TEXT
SALES_START_BREAK  . . . . . . .  	L NEAR	0735	_TEXT
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Symbols-6


SALES_START_CP . . . . . . . . .  	L NEAR	0733	_TEXT
SEC  . . . . . . . . . . . . . .  	L BYTE	021B	_DATA
SECRET_INPUT . . . . . . . . . .  	N PROC	1796	_TEXT	Length = 0035
SECRET_INPUT_LOOP  . . . . . . .  	L NEAR	179E	_TEXT
SECRET_INPUT_LOOP_BACKSPACE  . .  	L NEAR	17B2	_TEXT
SECRET_INPUT_LOOP_EXIT . . . . .  	L NEAR	17C8	_TEXT
SELCOLOUR  . . . . . . . . . . .  	NUMBER	004E	
SELECTIONDOWN  . . . . . . . . .  	L NEAR	04A4	_TEXT
SELECTIONLOOP  . . . . . . . . .  	L NEAR	0457	_TEXT
SELECTIONLOOPEXIT  . . . . . . .  	L NEAR	04CA	_TEXT
SELECTIONMOVEDOWN  . . . . . . .  	L NEAR	04BD	_TEXT
SELECTIONMOVEUP  . . . . . . . .  	L NEAR	04B0	_TEXT
SELECTIONUP  . . . . . . . . . .  	L NEAR	0498	_TEXT
SKULL  . . . . . . . . . . . . .  	L BYTE	0539	_DATA
SSTRATE  . . . . . . . . . . . .  	L BYTE	25BD	_DATA
STARTCUSTPOINT . . . . . . . . .  	L NEAR	11E9	_TEXT
STARTREADAGE . . . . . . . . . .  	L NEAR	1163	_TEXT
STARTREADID  . . . . . . . . . .  	L NEAR	10DE	_TEXT
STARTREADNAME  . . . . . . . . .  	L NEAR	1120	_TEXT
STARTREADPHONE . . . . . . . . .  	L NEAR	11A6	_TEXT
STRCMP . . . . . . . . . . . . .  	N PROC	17EA	_TEXT	Length = 0019
STRCMP_LOOP_END  . . . . . . . .  	L NEAR	17FC	_TEXT
STRCMP_LOOP_START  . . . . . . .  	L NEAR	17EE	_TEXT
STRCPY_L . . . . . . . . . . . .  	L NEAR	0885	_TEXT
STRNUMLEN  . . . . . . . . . . .  	NUMBER	0008	
STRNUM_ADD . . . . . . . . . . .  	N PROC	1803	_TEXT	Length = 004A
STRNUM_ADD_LOOP  . . . . . . . .  	L NEAR	1819	_TEXT
STRNUM_MUL . . . . . . . . . . .  	N PROC	184D	_TEXT	Length = 0089
STRNUM_MUL_L1  . . . . . . . . .  	L NEAR	1867	_TEXT
STRNUM_MUL_L2  . . . . . . . . .  	L NEAR	1878	_TEXT
SUBTOTAL . . . . . . . . . . . .  	L BYTE	2596	_DATA	Length = 0008
SUBTOTALS_TO_STR . . . . . . . .  	N PROC	0A68	_TEXT	Length = 002E
SUCCESSFULLOGIN  . . . . . . . .  	L BYTE	04D3	_DATA
SUMALLSUBTOTALS  . . . . . . . .  	L NEAR	0A4F	_TEXT
SUM_SUBTOTALS  . . . . . . . . .  	N PROC	0A47	_TEXT	Length = 0021

TESTSTR  . . . . . . . . . . . .  	L BYTE	020F	_DATA
TESTVAL  . . . . . . . . . . . .  	L BYTE	25B4	_DATA
TOTALCUSTOMERSSTR  . . . . . . .  	L BYTE	1D58	_DATA
TOTALPRICE . . . . . . . . . . .  	L BYTE	259F	_DATA	Length = 0014
TRANSACTION  . . . . . . . . . .  	N PROC	0871	_TEXT	Length = 0056
TRANSACTIONCUSTEMPTY . . . . . .  	L BYTE	2610	_DATA
TRANSACTIONCUSTINVALIDSEL  . . .  	L BYTE	25FC	_DATA
TRANSACTIONCUSTSELECTEDCUST  . .  	L BYTE	29E9	_DATA
TRANSACTION_CUST . . . . . . . .  	N PROC	095D	_TEXT	Length = 009D
TRANSACTION_CUST_SELECTION . . .  	L NEAR	0960	_TEXT
TRANSACTION_CUST_SELECTION_EMPT   	L NEAR	09DD	_TEXT
TRANSACTION_CUST_SELECTION_END .  	L NEAR	09F9	_TEXT
TRANSACTION_CUST_SELECTION_INIT   	L NEAR	0975	_TEXT
TRANSACTION_CUST_SELECTION_WRON   	L NEAR	09C2	_TEXT

USERNAMEOFFSET . . . . . . . . .  	NUMBER	0000	
USERNOTFOUND . . . . . . . . . .  	L BYTE	04B4	_DATA
USERNUMBER . . . . . . . . . . .  	L BYTE	0243	_DATA
Microsoft (R) Macro Assembler Version 5.00                  9/13/23 08:13:15
                                                             Symbols-7


USER_NOT_FOUND . . . . . . . . .  	L NEAR	05D2	_TEXT

YESPOS . . . . . . . . . . . . .  	L BYTE	102E	_DATA
YESSTR . . . . . . . . . . . . .  	L BYTE	1007	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  AMain		


   2729 Source  Lines
   5296 Total   Lines
    307 Symbols

  49692 + 393108 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
