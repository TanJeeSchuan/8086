Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:04:35
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  4D 49 4C 4B 24		data1       DB    "MILK",'$' 
       6 0005  0004[			data2       DB    4   dup ('*'),'$' 
       7	   2A			
       8			 ]	
       9       24			
      10				 
      11 000A  49 6E 69 74 69 61 6C	inital      DB    "Initial Content$" 
      12       20 43 6F 6E 74 65 6E	
      13       74 24			
      14 001A  41 66 74 65 72 20 52	after       DB    "After Replacement$" 
      15       65 70 6C 61 63 65 6D	
      16       65 6E 74 24		
      17 002C  41 66 74 65 72 20 52	reversed    DB    "After Reversed$" 
      18       65 76 65 72 73 65 64	
      19       24			
      20				 
      21 003B  64 61 74 61 31 3A 20	data1Name   DB    "data1: $" 
      22       24			
      23 0043  64 61 74 61 32 3A 20	data2Name   DB    "data2: $" 
      24       24			
      25				 
      26 0000				.code 
      27 0000				main proc 
      28				 
      29 0000  B8 ---- R		mov ax,@data 
      30 0003  8E D8			mov ds,ax 
      31 0005  8E C0			mov es,ax 
      32 0007  B8 4C00			mov ax,4c00h 
      33				 
      34				; start 
      35				 
      36 000A  E8 0098 R		call    NEWLINE 
      37				 
      38 000D  8D 16 000A R		lea     dx,inital 
      39 0011  E8 0091 R		call    PRINT_STR 
      40				 
      41 0014  E8 0098 R		call    NEWLINE 
      42				 
      43 0017  E8 005F R		call    PRINT_DATA  
      44				 
      45 001A  E8 0098 R		call    NEWLINE 
      46 001D  E8 0098 R		call    NEWLINE 
      47				 
      48 0020  8D 36 0000 R		lea     si,data1 
      49 0024  8D 3E 0005 R		lea     di,data2 
      50 0028  B9 0004			mov     cx,0004h                ;number
					 of times to repeat move byte (length o
					f string to move)        
      51 002B  F3/ A4			rep     movsb 
      52				 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:04:35
                                                             Page     1-2


      53 002D  8D 16 001A R		lea     dx,after 
      54 0031  E8 0091 R		call    PRINT_STR 
      55				 
      56 0034  E8 0098 R		call    NEWLINE 
      57				 
      58 0037  E8 005F R		call    PRINT_DATA  
      59				 
      60 003A  E8 0098 R		call    NEWLINE 
      61 003D  E8 0098 R		call    NEWLINE 
      62				 
      63 0040  8D 16 002C R		lea     dx,reversed 
      64 0044  E8 0091 R		call    PRINT_STR 
      65				 
      66 0047  E8 0098 R		call    NEWLINE 
      67				 
      68 004A  8D 36 0000 R		lea     si,data1 
      69 004E  8D 3E 0005 R		lea     di,data2 
      70 0052  B9 0004			mov     cx,4d               ;length of 
					string 
      71 0055  E8 007F R		call    REVERSE_STR 
      72				 
      73 0058  E8 005F R		call    PRINT_DATA    
      74				;end 
      75				 
      76 005B  B4 4C			mov ah,4ch 
      77 005D  CD 21			int 21h 
      78				 
      79 005F				main endp 
      80				 
      81 005F				PRINT_DATA      PROC 
      82 005F  8D 16 003B R		                        lea     dx,data
					1Name 
      83 0063  E8 0091 R		                        call    PRINT_S
					TR 
      84				 
      85 0066  8D 16 0000 R		                        lea     dx,data
					1 
      86 006A  E8 0091 R		                        call    PRINT_S
					TR 
      87				                         
      88 006D  E8 0098 R		                        call    NEWLINE
					 
      89				 
      90 0070  8D 16 0043 R		                        lea     dx,data
					2Name 
      91 0074  E8 0091 R		                        call    PRINT_S
					TR 
      92				 
      93 0077  8D 16 0005 R		                        lea     dx,data
					2 
      94 007B  E8 0091 R		                        call    PRINT_S
					TR 
      95				                         
      96 007E  C3			                        ret 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:04:35
                                                             Page     1-3


      97 007F				PRINT_DATA      ENDP 
      98				 
      99 007F				REVERSE_STR     PROC                   
					         ;reverse SI to DI, length in c
					x 
     100 007F  BB 0000			                        mov     bx  ,  
					 0d      ;BX to be loop counter 
     101 0082  03 F1			                        add     si  ,  
					 cx      ;move si to point to last elem
					ent 
     102 0084  4E			                        dec     si     
					         ;read until before seperator 
     103				 
     104 0085				                        revLoop: 
     105 0085  8A 14			                                mov    
					 dl  ,   [si]         ;move value in dx
					 to dl 
     106 0087  88 15			                                mov    
					 [di],   dl 
     107				 
     108 0089  4E			                                dec    
					 si              ;read backwards 
     109 008A  47			                                inc    
					 di              ;move forwards 
     110				 
     111 008B  43			                                inc    
					 bx              ;loop counter 
     112				 
     113 008C  3B D9			                                cmp    
					 bx,cx 
     114 008E  72 F5			                                jb     
					 revLoop         ;if =< string length  
					    
     115				 
     116 0090  C3			                        ret 
     117 0091				REVERSE_STR     ENDP 
     118				 
     119 0091				PRINT_STR       PROC 
     120 0091  50			                        push    ax 
     121 0092  B4 09			                        mov     ah,09h 
     122 0094  CD 21			                        int     21h 
     123 0096  58			                        pop    ax 
     124 0097  C3			                        ret 
     125 0098				PRINT_STR       ENDP 
     126				 
     127 0098				NEWLINE         PROC 
     128 0098  50			                        push    ax 
     129 0099  52			                        push    dx 
     130 009A  B2 0A			                        mov     dl,10d 
     131 009C  B4 02			                        mov     ah,02h 
     132 009E  CD 21			                        int     21h 
     133 00A0  5A			                        pop     dx 
     134 00A1  58			                        pop     ax 
     135 00A2  C3			                        ret 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:04:35
                                                             Page     1-4


     136 00A3				NEWLINE         ENDP 
     137				 
     138 00A3				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:04:35
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	004B	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	00A3	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

AFTER  . . . . . . . . . . . . .  	L BYTE	001A	_DATA

DATA1  . . . . . . . . . . . . .  	L BYTE	0000	_DATA
DATA1NAME  . . . . . . . . . . .  	L BYTE	003B	_DATA
DATA2  . . . . . . . . . . . . .  	L BYTE	0005	_DATA	Length = 0004
DATA2NAME  . . . . . . . . . . .  	L BYTE	0043	_DATA

INITAL . . . . . . . . . . . . .  	L BYTE	000A	_DATA

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 005F

NEWLINE  . . . . . . . . . . . .  	N PROC	0098	_TEXT	Length = 000B

PRINT_DATA . . . . . . . . . . .  	N PROC	005F	_TEXT	Length = 0020
PRINT_STR  . . . . . . . . . . .  	N PROC	0091	_TEXT	Length = 0007

REVERSED . . . . . . . . . . . .  	L BYTE	002C	_DATA
REVERSE_STR  . . . . . . . . . .  	N PROC	007F	_TEXT	Length = 0012
REVLOOP  . . . . . . . . . . . .  	L NEAR	0085	_TEXT

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P3Q2		


    127 Source  Lines
    127 Total   Lines
     27 Symbols

  50468 + 466076 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
