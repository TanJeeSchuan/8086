Microsoft (R) Macro Assembler Version 5.00                  8/15/23 21:45:21
                                                             Page     1-1


       1				.MODEL SMALL 
       2 0064				.STACK 100 
       3 0000				.DATA 
       4				 
       5 0000  34 30 32 35 37 35 37	strNum1             DB  "40257576" 
       6       36			
       7 0008  24			                    DB  "$" 
       8				 
       9 0009  32 32 38 33 32 35 32	strNum2             DB  "22832525" 
      10       35			
      11 0011  24			                    DB  "$" 
      12				 
      13 0012  0032[			normal1             DB  50  DUP("$") 
      14	   24			
      15			 ]	
      16				
      17				 
      18 0044  0032[			normal2             DB  50  DUP("$") 
      19	   24			
      20			 ]	
      21				
      22				 
      23 0076  0014[			result              DB  20  DUP("$") 
      24	   24			
      25			 ]	
      26				
      27				 
      28 0000				.CODE 
      29 0000				MAIN            PROC 
      30				 
      31 0000  B8 ---- R		mov ax,@data 
      32 0003  8E D8			mov ds,ax 
      33 0005  B8 4C00			mov ax,4c00h 
      34				 
      35				; start 
      36				 
      37 0008  8D 16 0000 R		lea         dx,strNum1 
      38 000C  E8 00C7 R		call        PRINT_STR 
      39 000F  E8 00FC R		call        NEWLINE 
      40				 
      41 0012  8D 16 0009 R		lea         dx,strNum2 
      42 0016  E8 00C7 R		call        PRINT_STR 
      43 0019  E8 00FC R		call        NEWLINE 
      44 001C  E8 00FC R		call        NEWLINE 
      45				 
      46 001F  8D 36 0000 R		lea         si,strNum1 
      47 0023  8D 3E 0009 R		lea         di,strNum2 
      48 0027  E8 0035 R		call        ADD_STRNUM 
      49				 
      50 002A  8D 16 0076 R		lea         dx,result 
      51 002E  E8 00C7 R		call        PRINT_STR 
      52				 
      53				;end 
      54				 
Microsoft (R) Macro Assembler Version 5.00                  8/15/23 21:45:21
                                                             Page     1-2


      55 0031  B4 4C			mov ah,4ch 
      56 0033  CD 21			int 21h 
      57				 
      58 0035				MAIN            ENDP 
      59				 
      60 0035				ADD_STRNUM      PROC                   
					                     ;output result to 
					result 
      61 0035  33 C0			                        xor         ax,
					ax 
      62				 
      63				                        ;remove decimal
					s from si, di strings 
      64 0037  57			                        push        di 
					                     ;normalise si stri
					ng 
      65 0038  8D 3E 0012 R		                        lea         di,
					normal1 
      66 003C  E8 00AA R		                        call        NOR
					MALISE_STR 
      67 003F  8B F7			                        mov         si,
					di 
      68 0041  5F			                        pop         di 
      69				 
      70 0042  56			                        push        si 
					                     ;normalise di stri
					ng 
      71 0043  8B F7			                        mov         si,
					di 
      72 0045  8D 3E 0044 R		                        lea         di,
					normal2 
      73 0049  E8 00AA R		                        call        NOR
					MALISE_STR 
      74 004C  5E			                        pop         si 
      75				 
      76				                        ;get the length
					 of the longer string 
      77 004D  E8 0096 R		                        call        STR
					LEN                  ;length of si 
      78 0050  50			                        push        ax 
					                   
      79				 
      80 0051  56			                        push        si 
					          
      81 0052  8B F7			                        mov         si,
					di 
      82 0054  E8 0096 R		                        call        STR
					LEN                  ;length of di 
      83 0057  5E			                        pop         si 
      84				 
      85 0058  5B			                        pop         bx 
      86 0059  E8 00F2 R		                        call        LAR
					GER_NUM              ;larger number in 
					ax,bx will be in ax 
Microsoft (R) Macro Assembler Version 5.00                  8/15/23 21:45:21
                                                             Page     1-3


      87 005C  8B C8			                        mov         cx,
					ax                   ;longest length of
					 si and di will be in CX 
      88				 
      89				                        ;offset si,di 
      90 005E  03 F1			                        add         si,
					cx                   ;move to last char
					acter 
      91 0060  4E			                        dec         si 
      92 0061  03 F9			                        add         di,
					cx 
      93 0063  4F			                        dec         di 
      94				                         
      95 0064  33 DB			                        xor         bx,
					bx                   ;prepare bx for us
					e as carry register 
      96 0066				                        add_loop: 
      97 0066  8A 04			                                    mov
					         al,[si]     ;get int value of 
					string 
      98 0068  2C 30			                                    sub
					         al,48d 
      99				                                       
					  
     100 006A  8A 25			                                    mov
					         ah,[di]     ;get int value of 
					string 
     101 006C  80 EC 30			                                    sub
					         ah,48d 
     102				 
     103 006F  02 C3			                                    add
					         al,bl       ;add carry 
     104 0071  02 C4			                                    add
					         al,ah 
     105				 
     106 0073  32 DB			                                    xor
					         bl,bl       ;reset carry flag 
     107				 
     108 0075  3C 09			                                    cmp
					         al,9d       ;if al larger than
					 9, overflow, carry register bl set 
     109 0077  77 03			                                    ja 
					         add_overflow 
     110 0079  EB 05 90			                                    jmp
					         add_no_overflow 
     111				 
     112 007C				                                    add
					_overflow: 
     113 007C  2C 0A			                                       
					         sub         al,10d 
     114 007E  B3 01			                                       
					         mov         bl,1d       ;set c
					arry register 
     115				                                     
Microsoft (R) Macro Assembler Version 5.00                  8/15/23 21:45:21
                                                             Page     1-4


     116 0080				                                    add
					_no_overflow: 
     117 0080  B4 00			                                    mov
					         ah,0 
     118 0082  04 30			                                    add
					         al, 48d 
     119				 
     120 0084  88 04			                                    mov
					         [si],al 
     121				 
     122 0086  4E			                                    dec
					         si 
     123 0087  4F			                                    dec
					         di 
     124				 
     125 0088  57			                                    pus
					h        di          ;load into result 
     126				 
     127 0089  8D 3E 0076 R		                                    lea
					         di,result   ;di is address of 
					result 
     128 008D  03 F9			                                    add
					         di,cx       ;offset to cx + 1 
     129 008F  4F			                                    dec
					         di 
     130 0090  88 05			                                    mov
					         [di],al     ;insert in di 
     131				 
     132 0092  5F			                                    pop
					         di 
     133				 
     134 0093  E2 D1			                                    loo
					p        add_loop 
     135 0095  C3			                        ret 
     136 0096				ADD_STRNUM      ENDP 
     137				 
     138 0096				STRLEN          PROC                   
					                     ;output length of 
					si in ax 
     139 0096  56			                        push        si 
     140 0097  33 D2			                        xor         dx,
					dx 
     141 0099  33 DB			                        xor         bx,
					bx 
     142 009B  33 C0			                        xor         ax,
					ax 
     143				 
     144 009D				                        strlenLoop: 
     145 009D  8A 1C			                                    mov
					     bl,[si] 
     146 009F  80 FB 24			                                    cmp
					     bl,"$" 
     147 00A2  74 04			                                    je 
					     strlenLoopEnd 
Microsoft (R) Macro Assembler Version 5.00                  8/15/23 21:45:21
                                                             Page     1-5


     148				 
     149 00A4  46			                                    inc
					     si 
     150 00A5  40			                                    inc
					     ax 
     151				 
     152 00A6  EB F5			                                    jmp
					     strlenLoop 
     153				 
     154 00A8				                        strlenLoopEnd: 
     155				 
     156 00A8  5E			                        pop         si 
     157 00A9  C3			                        ret 
     158 00AA				STRLEN          ENDP 
     159				 
     160 00AA				NORMALISE_STR   PROC                   
					                     ;output string num
					ber without decimal point from si to di
					 
     161 00AA  56			                        push        si 
     162 00AB  57			                        push        di 
     163 00AC  33 C0			                        xor         ax,
					ax       ;al contains character 
     164 00AE				                        normLoop: 
     165 00AE  8A 04			                                    mov
					     al  ,[si] 
     166				                                     
     167 00B0  3C 24			                                    cmp
					     al,"$"          ;if is string end 
     168 00B2  74 10			                                    je 
					     normLoopEnd 
     169				 
     170 00B4  3C 2E			                                    cmp
					     al,"." 
     171 00B6  74 03			                                    je 
					     normRemoveDec   ;if is decimal poi
					nt 
     172 00B8  EB 04 90			                                    jmp
					     normRemoveDecEnd 
     173				 
     174 00BB				                                    nor
					mRemoveDec: 
     175 00BB  46			                                       
					     inc         si 
     176 00BC  8A 04			                                       
					     mov         al,[si] 
     177 00BE				                                    nor
					mRemoveDecEnd: 
     178				 
     179 00BE  88 05			                                    mov
					     [di],al 
     180				 
     181 00C0  46			                                    inc
					     si 
Microsoft (R) Macro Assembler Version 5.00                  8/15/23 21:45:21
                                                             Page     1-6


     182 00C1  47			                                    inc
					     di 
     183				                                     
     184 00C2  EB EA			                                    jmp
					      normLoop 
     185 00C4				                        normLoopEnd: 
     186 00C4  5F			                        pop         di 
     187 00C5  5E			                        pop         si 
     188 00C6  C3			                        ret 
     189 00C7				NORMALISE_STR   ENDP 
     190				 
     191 00C7				PRINT_STR       PROC                   
					                     ;print value from 
					address in dx 
     192 00C7  50			                        push        ax 
     193 00C8  B4 09			                        mov         ah,
					09h       
     194 00CA  CD 21			                        int 21h 
     195 00CC  58			                        pop         ax 
     196 00CD  C3			                        ret 
     197 00CE				PRINT_STR       ENDP 
     198				 
     199 00CE				PRINT_NUM       PROC                   
					                     ;print from ax    
					           
     200 00CE  50			                        push    ax     
					                     ;preserves origina
					l register values 
     201 00CF  53			                        push    bx 
     202 00D0  51			                        push    cx 
     203 00D1  52			                        push    dx 
     204 00D2  BB 000A			                        mov     bx,000A
					h         
     205 00D5  B9 0000			                        mov     cx,0000
					h 
     206 00D8				            Divloop: 
     207 00D8  BA 0000			                        mov     dx,0000
					h 
     208 00DB  F7 F3			                        div     bx 
     209 00DD  52			                        push    dx 
     210 00DE  41			                        inc     cx 
     211 00DF  85 C0			                        test    ax,ax 
     212 00E1  75 F5			                        jnz     Divloop
					 
     213				 
     214 00E3  B4 02			                        mov ah,02h     
					                     ;setup for print 
     215				 
     216 00E5				            IntPrint:    
     217 00E5  5A			                        pop     dx 
     218 00E6  83 C2 30			                        add     dx,48d 
     219 00E9  CD 21			                        int     21h 
     220 00EB  E2 F8			                        loop    IntPrin
					t 
Microsoft (R) Macro Assembler Version 5.00                  8/15/23 21:45:21
                                                             Page     1-7


     221				 
     222 00ED  5A			                        pop dx         
					                     ;restore original 
					ax value 
     223 00EE  59			                        pop cx 
     224 00EF  5B			                        pop bx 
     225 00F0  58			                        pop ax 
     226 00F1  C3			                        ret 
     227 00F2				PRINT_NUM       ENDP 
     228				 
     229 00F2				LARGER_NUM      PROC                   
					                     ;compare ax,bx, la
					rge number will be AX 
     230 00F2  3B C3			                        cmp     ax,bx 
     231 00F4  72 03			                        jb      AX_SMAL
					LER                   ;if ax is smaller
					 than bx 
     232 00F6  EB 03 90			                        jmp     AX_SMAL
					LER_END                
     233				 
     234 00F9				                        AX_SMALLER: 
     235 00F9  8B C3			                                    mov
					     ax,bx 
     236				 
     237 00FB				                        AX_SMALLER_END:
					 
     238 00FB  C3			                        ret 
     239 00FC				LARGER_NUM      ENDP 
     240				 
     241 00FC				NEWLINE         PROC 
     242 00FC  52			                            push    dx 
     243 00FD  B2 0A			                            mov     dl,
					0Ah 
     244 00FF  E8 0104 R		                            call PRINT_
					CHAR 
     245 0102  5A			                            pop     dx 
     246 0103  C3			                            ret 
     247 0104				NEWLINE         ENDP 
     248				 
     249 0104				PRINT_CHAR      PROC                   
					                     ;print cjaracter o
					f value in dl 
     250 0104  50			                            push    ax 
     251 0105  B4 02			                            mov     ah,
					02h 
     252 0107  CD 21			                            int     21h
					 
     253 0109  58			                            pop     ax 
     254 010A  C3			                            ret 
     255 010B				PRINT_CHAR      ENDP 
     256				 
     257 010B				END MAIN 
Microsoft (R) Macro Assembler Version 5.00                  8/15/23 21:45:21
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	008A	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	010B	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ADD_LOOP . . . . . . . . . . . .  	L NEAR	0066	_TEXT
ADD_NO_OVERFLOW  . . . . . . . .  	L NEAR	0080	_TEXT
ADD_OVERFLOW . . . . . . . . . .  	L NEAR	007C	_TEXT
ADD_STRNUM . . . . . . . . . . .  	N PROC	0035	_TEXT	Length = 0061
AX_SMALLER . . . . . . . . . . .  	L NEAR	00F9	_TEXT
AX_SMALLER_END . . . . . . . . .  	L NEAR	00FB	_TEXT

DIVLOOP  . . . . . . . . . . . .  	L NEAR	00D8	_TEXT

INTPRINT . . . . . . . . . . . .  	L NEAR	00E5	_TEXT

LARGER_NUM . . . . . . . . . . .  	N PROC	00F2	_TEXT	Length = 000A

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 0035

NEWLINE  . . . . . . . . . . . .  	N PROC	00FC	_TEXT	Length = 0008
NORMAL1  . . . . . . . . . . . .  	L BYTE	0012	_DATA	Length = 0032
NORMAL2  . . . . . . . . . . . .  	L BYTE	0044	_DATA	Length = 0032
NORMALISE_STR  . . . . . . . . .  	N PROC	00AA	_TEXT	Length = 001D
NORMLOOP . . . . . . . . . . . .  	L NEAR	00AE	_TEXT
NORMLOOPEND  . . . . . . . . . .  	L NEAR	00C4	_TEXT
NORMREMOVEDEC  . . . . . . . . .  	L NEAR	00BB	_TEXT
NORMREMOVEDECEND . . . . . . . .  	L NEAR	00BE	_TEXT

PRINT_CHAR . . . . . . . . . . .  	N PROC	0104	_TEXT	Length = 0007
PRINT_NUM  . . . . . . . . . . .  	N PROC	00CE	_TEXT	Length = 0024
PRINT_STR  . . . . . . . . . . .  	N PROC	00C7	_TEXT	Length = 0007

RESULT . . . . . . . . . . . . .  	L BYTE	0076	_DATA	Length = 0014

STRLEN . . . . . . . . . . . . .  	N PROC	0096	_TEXT	Length = 0014
STRLENLOOP . . . . . . . . . . .  	L NEAR	009D	_TEXT
STRLENLOOPEND  . . . . . . . . .  	L NEAR	00A8	_TEXT
STRNUM1  . . . . . . . . . . . .  	L BYTE	0000	_DATA
STRNUM2  . . . . . . . . . . . .  	L BYTE	0009	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  STRNUM		

Microsoft (R) Macro Assembler Version 5.00                  8/15/23 21:45:21
                                                             Symbols-2



    246 Source  Lines
    246 Total   Lines
     41 Symbols

  50434 + 449726 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
