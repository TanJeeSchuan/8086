Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:18:17
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  45 6E 74 65 72 20 73	str1    DB      "Enter secret word: $" 
       6       65 63 72 65 74 20 77	
       7       6F 72 64 3A 20 24	
       8 0014  45 6E 74 65 72 20 65	str2    DB      "Enter encryption key (
					1-9): $" 
       9       6E 63 72 79 70 74 69	
      10       6F 6E 20 6B 65 79 20	
      11       28 31 2D 39 29 3A 20	
      12       24			
      13 0031  54 68 65 20 65 6E 63	str3    DB      "The encrypted key is $
					" 
      14       72 79 70 74 65 64 20	
      15       6B 65 79 20 69 73 20	
      16       24			
      17				 
      18 0047  0014[			secretWord DB   20 DUP("$") 
      19	   24			
      20			 ]	
      21				
      22				 
      23 005B  ??			key     DB      ? 
      24				 
      25 005C  0014[			encryptedWord   DB      20 DUP("$") 
      26	   24			
      27			 ]	
      28				
      29				 
      30 0070  14			buffer  DB  20 
      31 0071  ??			        DB  ? 
      32 0072  0014[			        DB  20 DUP("$") 
      33	   24			
      34			 ]	
      35				
      36				 
      37 0000				.code 
      38 0000				main proc 
      39				 
      40 0000  B8 ---- R		mov ax,@data 
      41 0003  8E D8			mov ds,ax 
      42 0005  B8 0000			mov ax,0h 
      43				 
      44				; start 
      45 0008  E8 0092 R		call    NEWLINE 
      46				 
      47 000B  8D 16 0000 R		lea     dx,str1 
      48 000F  E8 0061 R		call    PRINT_STR 
      49				 
      50 0012  8D 16 0070 R		lea     dx,buffer 
      51 0016  B4 0A			mov     ah,0Ah 
      52 0018  CD 21			int     21h 
Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:18:17
                                                             Page     1-2


      53				 
      54 001A  E8 0092 R		call    NEWLINE 
      55				 
      56 001D  8D 16 0014 R		lea     dx,str2 
      57 0021  E8 0061 R		call    PRINT_STR 
      58				 
      59 0024  B4 01			mov     ah,01h 
      60 0026  CD 21			int     21h 
      61 0028  2C 30			sub     al,48d 
      62 002A  A2 005B R		mov     [key], al 
      63				 
      64 002D  8D 36 0072 R		lea     si,buffer+2 
      65 0031  8D 3E 005C R		lea     di,encryptedWord 
      66 0035  8A 0E 0071 R		mov     cl,[buffer+1] 
      67 0039				encryptionLoop: 
      68 0039  8A 04			        mov     al,[si] 
      69				         
      70 003B  3C 24			        cmp     al,"$" 
      71 003D  74 0A			        je      encryptionLoopExit 
      72				 
      73 003F  02 06 005B R		        add     al,[key] 
      74				 
      75 0043  88 05			        mov     [di],al 
      76				 
      77 0045  46			        inc     si 
      78 0046  47			        inc     di 
      79 0047  E2 F0			        loop    encryptionLoop 
      80 0049				encryptionLoopExit: 
      81				 
      82 0049  E8 0092 R		call    NEWLINE 
      83				 
      84 004C  8D 16 0031 R		lea     dx,str3 
      85 0050  E8 0061 R		call    PRINT_STR 
      86				 
      87 0053  8D 16 005C R		lea     dx,encryptedWord 
      88 0057  E8 0061 R		call    PRINT_STR 
      89				 
      90 005A  E8 0092 R		call    NEWLINE 
      91				 
      92				;end 
      93				 
      94 005D  B4 4C			mov ah,4ch 
      95 005F  CD 21			int 21h 
      96				 
      97 0061				main endp 
      98				 
      99 0061				PRINT_STR       PROC 
     100 0061  50			                        push    ax 
     101 0062  B4 09			                        mov     ah,09h 
     102 0064  CD 21			                        int     21h 
     103 0066  58			                        pop    ax 
     104 0067  C3			                        ret 
     105 0068				PRINT_STR       ENDP 
     106				 
Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:18:17
                                                             Page     1-3


     107 0068				PRINT_NUM       PROC                   
					     ;print ax 
     108 0068  50			                            push    ax 
     109 0069  53			                            push    bx 
     110 006A  51			                            push    cx 
     111 006B  52			                            push    dx 
     112				 
     113 006C  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
     114 006F  B9 0000			                            mov     cx,
					0h 
     115				                             
     116 0072				                            divLoop:   
					  
     117 0072  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
     118 0074  F7 F3			                                       
					 div     bx 
     119 0076  52			                                       
					 push    dx          ;save remainder 
     120 0077  41			                                       
					 inc     cx          ;count looped numb
					er 
     121 0078  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
     122 007A  75 F6			                                       
					 jnz     divLoop 
     123				 
     124 007C  B4 02			                            mov     ah,
					02h 
     125				 
     126 007E				                            printLoop: 
					  
     127 007E  5A			                                       
					 pop     dx          ;get remainder 
     128 007F  80 C2 30			                                       
					 add     dl,"0" 
     129 0082  CD 21			                                       
					 int     21h         ;print 
     130 0084  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
     131				 
     132 0086  5A			                            pop    dx 
     133 0087  59			                            pop    cx 
     134 0088  5B			                            pop    bx 
     135 0089  58			                            pop    ax 
     136				 
     137 008A  C3			                            ret 
     138 008B				PRINT_NUM       ENDP 
     139				 
     140 008B				PRINT_CHAR      PROC                   
					                     ;print cjaracter o
Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:18:17
                                                             Page     1-4


					f value in dl 
     141 008B  50			                            push    ax 
     142 008C  B4 02			                            mov     ah,
					02h 
     143 008E  CD 21			                            int     21h
					 
     144 0090  58			                            pop     ax 
     145 0091  C3			                            ret 
     146 0092				PRINT_CHAR      ENDP 
     147				 
     148 0092				NEWLINE         PROC 
     149 0092  52			                            push    dx 
     150 0093  B2 0A			                            mov     dl,
					0Ah 
     151 0095  E8 008B R		                            call PRINT_
					CHAR 
     152 0098  5A			                            pop     dx 
     153 0099  C3			                            ret 
     154 009A				NEWLINE         ENDP 
     155				 
     156 009A				end main 
Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:18:17
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0086	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	009A	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

BUFFER . . . . . . . . . . . . .  	L BYTE	0070	_DATA

DIVLOOP  . . . . . . . . . . . .  	L NEAR	0072	_TEXT

ENCRYPTEDWORD  . . . . . . . . .  	L BYTE	005C	_DATA	Length = 0014
ENCRYPTIONLOOP . . . . . . . . .  	L NEAR	0039	_TEXT
ENCRYPTIONLOOPEXIT . . . . . . .  	L NEAR	0049	_TEXT

KEY  . . . . . . . . . . . . . .  	L BYTE	005B	_DATA

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 0061

NEWLINE  . . . . . . . . . . . .  	N PROC	0092	_TEXT	Length = 0008

PRINTLOOP  . . . . . . . . . . .  	L NEAR	007E	_TEXT
PRINT_CHAR . . . . . . . . . . .  	N PROC	008B	_TEXT	Length = 0007
PRINT_NUM  . . . . . . . . . . .  	N PROC	0068	_TEXT	Length = 0023
PRINT_STR  . . . . . . . . . . .  	N PROC	0061	_TEXT	Length = 0007

SECRETWORD . . . . . . . . . . .  	L BYTE	0047	_DATA	Length = 0014
STR1 . . . . . . . . . . . . . .  	L BYTE	0000	_DATA
STR2 . . . . . . . . . . . . . .  	L BYTE	0014	_DATA
STR3 . . . . . . . . . . . . . .  	L BYTE	0031	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P5Q2		


    138 Source  Lines
    138 Total   Lines
     30 Symbols

  50384 + 466160 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
