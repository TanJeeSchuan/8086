Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:12:53
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  49 6E 20 45 6E 67 6C	str1    DB "In English: $" 
       6       69 73 68 3A 20 24	
       7 000D  49 6E 20 45 67 67 6E	str2    DB "In Eggnglish: $" 
       8       67 6C 69 73 68 3A 20	
       9       24			
      10				 
      11 001C  59 6F 75 20 6C 69 6B	input   DB "You like english and espres
					so, excellent ! $" 
      12       65 20 65 6E 67 6C 69	
      13       73 68 20 61 6E 64 20	
      14       65 73 70 72 65 73 73	
      15       6F 2C 20 65 78 63 65	
      16       6C 6C 65 6E 74 20 21	
      17       20 24			
      18 0048  0032[			output  DB 50 DUP("0") 
      19	   30			
      20			 ]	
      21				
      22 007A  24			        DB "$" 
      23				 
      24 0000				.code 
      25 0000				main proc 
      26				 
      27 0000  B8 ---- R		mov ax,@data 
      28 0003  8E D8			mov ds,ax 
      29 0005  8E C0			mov es,ax 
      30 0007  B8 0000			mov ax,0h 
      31				 
      32				; start 
      33				 
      34 000A  8D 16 0000 R		lea         dx,str1 
      35 000E  E8 005F R		call        PRINT_STR 
      36				 
      37 0011  8D 16 001C R		lea         dx,input 
      38 0015  E8 005F R		call        PRINT_STR 
      39				 
      40 0018  8D 36 001C R		lea         si,input 
      41 001C  8D 3E 0048 R		lea         di,output 
      42 0020				strLoop: 
      43 0020  8A 04			            mov         al,[si] 
      44				 
      45 0022  3C 24			            cmp         al,"$" 
      46 0024  74 21			            je          strLoopEnd 
      47				 
      48 0026  3C 65			            cmp         al,"e" 
      49 0028  74 05			            je          addEgg? 
      50				 
      51 002A				            noAddEgg: 
      52 002A  88 05			            mov         [di],al 
      53				             
Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:12:53
                                                             Page     1-2


      54 002C  EB 15 90			            jmp         addEggEnd 
      55				 
      56 002F				            addEgg?: 
      57 002F  8A 64 FF			                        mov         ah,
					[si-1] 
      58 0032  80 FC 20			                        cmp         ah,
					" " 
      59 0035  75 F3			                        jne         noA
					ddEgg 
      60				 
      61 0037				            addEgg: 
      62 0037  B4 65			                        mov         ah,
					"e" 
      63 0039  88 25			                        mov         [di
					],ah 
      64 003B  47			                        inc         di 
      65				 
      66 003C  B4 67			                        mov         ah,
					"g" 
      67 003E  88 25			                        mov         [di
					],ah 
      68 0040  47			                        inc         di 
      69 0041  88 25			                        mov         [di
					],ah 
      70 0043				            addEggEnd: 
      71 0043  46			            inc         si 
      72 0044  47			            inc         di 
      73 0045  EB D9			            jmp         strLoop 
      74 0047				strLoopEnd: 
      75				 
      76 0047  E8 0090 R		call        NEWLINE 
      77				 
      78 004A  8D 16 000D R		lea         dx,str2 
      79 004E  E8 005F R		call        PRINT_STR 
      80				 
      81 0051  8D 16 0048 R		lea         dx,output 
      82 0055  E8 005F R		call        PRINT_STR 
      83				 
      84 0058  E8 0090 R		call        NEWLINE 
      85				 
      86				;end 
      87				 
      88 005B  B4 4C			mov ah,4ch 
      89 005D  CD 21			int 21h 
      90				 
      91 005F				main endp 
      92				 
      93 005F				PRINT_STR       PROC 
      94 005F  50			                        push    ax 
      95 0060  B4 09			                        mov     ah,09h 
      96 0062  CD 21			                        int     21h 
      97 0064  58			                        pop    ax 
      98 0065  C3			                        ret 
      99 0066				PRINT_STR       ENDP 
Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:12:53
                                                             Page     1-3


     100				 
     101 0066				PRINT_NUM       PROC                   
					     ;print ax 
     102 0066  50			                            push    ax 
     103 0067  53			                            push    bx 
     104 0068  51			                            push    cx 
     105 0069  52			                            push    dx 
     106				 
     107 006A  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
     108 006D  B9 0000			                            mov     cx,
					0h 
     109				                             
     110 0070				                            divLoop:   
					  
     111 0070  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
     112 0072  F7 F3			                                       
					 div     bx 
     113 0074  52			                                       
					 push    dx          ;save remainder 
     114 0075  41			                                       
					 inc     cx          ;count looped numb
					er 
     115 0076  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
     116 0078  75 F6			                                       
					 jnz     divLoop 
     117				 
     118 007A  B4 02			                            mov     ah,
					02h 
     119				 
     120 007C				                            printLoop: 
					  
     121 007C  5A			                                       
					 pop     dx          ;get remainder 
     122 007D  80 C2 30			                                       
					 add     dl,"0" 
     123 0080  CD 21			                                       
					 int     21h         ;print 
     124 0082  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
     125				 
     126 0084  58			                            pop    ax 
     127 0085  5B			                            pop    bx 
     128 0086  59			                            pop    cx 
     129 0087  5A			                            pop    dx 
     130				 
     131 0088  C3			                            ret 
     132 0089				PRINT_NUM       ENDP 
     133				 
     134 0089				PRINT_CHAR      PROC                   
Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:12:53
                                                             Page     1-4


					                     ;print cjaracter o
					f value in dl 
     135 0089  50			                            push    ax 
     136 008A  B4 02			                            mov     ah,
					02h 
     137 008C  CD 21			                            int     21h
					 
     138 008E  58			                            pop     ax 
     139 008F  C3			                            ret 
     140 0090				PRINT_CHAR      ENDP 
     141				 
     142 0090				NEWLINE         PROC 
     143 0090  52			                            push    dx 
     144 0091  B2 0A			                            mov     dl,
					0Ah 
     145 0093  E8 0089 R		                            call PRINT_
					CHAR 
     146 0096  5A			                            pop     dx 
     147 0097  C3			                            ret 
     148 0098				NEWLINE         ENDP 
     149				 
     150 0098				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:12:53
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	007B	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	0098	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ADDEGG . . . . . . . . . . . . .  	L NEAR	0037	_TEXT
ADDEGG?  . . . . . . . . . . . .  	L NEAR	002F	_TEXT
ADDEGGEND  . . . . . . . . . . .  	L NEAR	0043	_TEXT

DIVLOOP  . . . . . . . . . . . .  	L NEAR	0070	_TEXT

INPUT  . . . . . . . . . . . . .  	L BYTE	001C	_DATA

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 005F

NEWLINE  . . . . . . . . . . . .  	N PROC	0090	_TEXT	Length = 0008
NOADDEGG . . . . . . . . . . . .  	L NEAR	002A	_TEXT

OUTPUT . . . . . . . . . . . . .  	L BYTE	0048	_DATA	Length = 0032

PRINTLOOP  . . . . . . . . . . .  	L NEAR	007C	_TEXT
PRINT_CHAR . . . . . . . . . . .  	N PROC	0089	_TEXT	Length = 0007
PRINT_NUM  . . . . . . . . . . .  	N PROC	0066	_TEXT	Length = 0023
PRINT_STR  . . . . . . . . . . .  	N PROC	005F	_TEXT	Length = 0007

STR1 . . . . . . . . . . . . . .  	L BYTE	0000	_DATA
STR2 . . . . . . . . . . . . . .  	L BYTE	000D	_DATA
STRLOOP  . . . . . . . . . . . .  	L NEAR	0020	_TEXT
STRLOOPEND . . . . . . . . . . .  	L NEAR	0047	_TEXT

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P4Q2		

Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:12:53
                                                             Symbols-2



    138 Source  Lines
    138 Total   Lines
     31 Symbols

  50384 + 466160 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
