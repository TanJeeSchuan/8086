Microsoft (R) Macro Assembler Version 5.00                  8/26/23 12:43:57
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  4D 49 4C 4B 24		data1       DB    "MILK",'$' 
       6 0005  0004[			data2       DB    4   dup ('*'),'$' 
       7	   2A			
       8			 ]	
       9       24			
      10				 
      11 000A  49 6E 69 74 69 61 6C	inital      DB    "Initial Content$" 
      12       20 43 6F 6E 74 65 6E	
      13       74 24			
      14 001A  41 66 74 65 72 20 52	after       DB    "After Replacement$" 
      15       65 70 6C 61 63 65 6D	
      16       65 6E 74 24		
      17 002C  41 66 74 65 72 20 52	reversed    DB    "After Reversed$" 
      18       65 76 65 72 73 65 64	
      19       24			
      20 003B  41 66 74 65 72 20 43	lowerCase   DB    "After Changed Case$"
					 
      21       68 61 6E 67 65 64 20	
      22       43 61 73 65 24		
      23				 
      24 004E  64 61 74 61 31 3A 20	data1Name   DB    "data1: $" 
      25       24			
      26 0056  64 61 74 61 32 3A 20	data2Name   DB    "data2: $" 
      27       24			
      28				 
      29 0000				.code 
      30 0000				main proc 
      31				 
      32 0000  B8 ---- R		mov ax,@data 
      33 0003  8E D8			mov ds,ax 
      34 0005  B8 4C00			mov ax,4c00h 
      35				 
      36				; start 
      37				 
      38 0008  E8 00CC R		call    NEWLINE 
      39				 
      40 000B  8D 16 000A R		lea     dx,inital 
      41 000F  E8 00C5 R		call    PRINT_STR 
      42				 
      43 0012  E8 00CC R		call    NEWLINE 
      44				 
      45 0015  E8 0082 R		call    PRINT_DATA  
      46				 
      47 0018  E8 00CC R		call    NEWLINE 
      48 001B  E8 00CC R		call    NEWLINE 
      49				 
      50 001E  8D 36 0000 R		lea     si,data1 
      51 0022  8D 3E 0005 R		lea     di,data2 
      52 0026				replacementLoop1: 
      53 0026  8A 04			        mov         al,[si] 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 12:43:57
                                                             Page     1-2


      54				 
      55 0028  3C 24			        cmp         al,"$"      ;read u
					ntil $ 
      56 002A  74 06			        je          replacementLoop1exi
					t 
      57				 
      58 002C  88 05			        mov         [di],al 
      59 002E  46			        inc         si 
      60 002F  47			        inc         di 
      61 0030  EB F4			        jmp         replacementLoop1 
      62 0032				replacementLoop1exit: 
      63				 
      64 0032  8D 16 001A R		lea     dx,after 
      65 0036  E8 00C5 R		call    PRINT_STR 
      66				 
      67 0039  E8 00CC R		call    NEWLINE 
      68				 
      69 003C  E8 0082 R		call    PRINT_DATA  
      70				 
      71 003F  E8 00CC R		call    NEWLINE 
      72 0042  E8 00CC R		call    NEWLINE 
      73				 
      74 0045  8D 16 002C R		lea     dx,reversed 
      75 0049  E8 00C5 R		call    PRINT_STR 
      76				 
      77 004C  E8 00CC R		call    NEWLINE 
      78				 
      79 004F  8D 36 0000 R		lea     si,data1 
      80 0053  8D 3E 0005 R		lea     di,data2 
      81 0057  B9 0004			mov     cx,4d               ;length of 
					string 
      82 005A  E8 00B3 R		call    REVERSE_STR 
      83				 
      84 005D  E8 0082 R		call    PRINT_DATA 
      85				 
      86 0060  E8 00CC R		call    NEWLINE 
      87 0063  E8 00CC R		call    NEWLINE 
      88				 
      89 0066  8D 16 003B R		lea     dx,lowerCase 
      90 006A  E8 00C5 R		call    PRINT_STR 
      91				 
      92 006D  E8 00CC R		call    NEWLINE 
      93				 
      94 0070  8D 36 0000 R		lea     si,data1 
      95 0074  8D 3E 0005 R		lea     di,data2 
      96 0078  E8 00A2 R		call    LOWER_CASE 
      97				 
      98 007B  E8 0082 R		call    PRINT_DATA   
      99				;end 
     100				 
     101 007E  B4 4C			mov ah,4ch 
     102 0080  CD 21			int 21h 
     103				 
     104				 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 12:43:57
                                                             Page     1-3


     105				 
     106 0082				main endp 
     107				 
     108 0082				PRINT_DATA      PROC                   
					         ;print comparision of data1 an
					d data2 
     109 0082  8D 16 004E R		                        lea     dx,data
					1Name 
     110 0086  E8 00C5 R		                        call    PRINT_S
					TR 
     111				 
     112 0089  8D 16 0000 R		                        lea     dx,data
					1 
     113 008D  E8 00C5 R		                        call    PRINT_S
					TR 
     114				                         
     115 0090  E8 00CC R		                        call    NEWLINE
					 
     116				 
     117 0093  8D 16 0056 R		                        lea     dx,data
					2Name 
     118 0097  E8 00C5 R		                        call    PRINT_S
					TR 
     119				 
     120 009A  8D 16 0005 R		                        lea     dx,data
					2 
     121 009E  E8 00C5 R		                        call    PRINT_S
					TR 
     122				                         
     123 00A1  C3			                        ret 
     124 00A2				PRINT_DATA      ENDP 
     125				 
     126 00A2				LOWER_CASE      PROC                   
					          
     127 00A2				                        lCaseLoop: 
     128 00A2  8A 14			                                mov    
					 dl  ,   [si] 
     129				 
     130 00A4  80 FA 24			                                cmp    
					 dl,"$" 
     131 00A7  74 09			                                je     
					 lCaseLoopExit 
     132				 
     133 00A9  80 C2 20			                                add    
					 dl  ,   32d     ;turn to lower case 
     134				 
     135 00AC  88 15			                                mov    
					 [di],   dl 
     136				 
     137 00AE  46			                                inc    
					 si              ;move backwards 
     138 00AF  47			                                inc    
					 di              ;move forwards 
     139				 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 12:43:57
                                                             Page     1-4


     140 00B0  EB F0			                                jmp    
					 lCaseLoop 
     141				 
     142 00B2				                        lCaseLoopExit: 
     143 00B2  C3			                        ret 
     144 00B3				LOWER_CASE      ENDP 
     145				 
     146 00B3				REVERSE_STR     PROC                   
					         ;reverse SI to DI, length in c
					x 
     147 00B3  BB 0000			                        mov     bx  ,  
					 0d      ;BX to be loop counter 
     148 00B6  03 F1			                        add     si  ,  
					 cx      ;move si to point to last elem
					ent 
     149 00B8  4E			                        dec     si     
					         ;read until before seperator 
     150				 
     151 00B9				                        revLoop: 
     152 00B9  8A 14			                                mov    
					 dl  ,   [si]         ;move value in dx
					 to dl 
     153 00BB  88 15			                                mov    
					 [di],   dl 
     154				 
     155 00BD  4E			                                dec    
					 si              ;read backwards 
     156 00BE  47			                                inc    
					 di              ;move forwards 
     157				 
     158 00BF  43			                                inc    
					 bx              ;loop counter 
     159				 
     160 00C0  3B D9			                                cmp    
					 bx,cx 
     161 00C2  72 F5			                                jb     
					 revLoop         ;if =< string length  
					    
     162				 
     163 00C4  C3			                        ret 
     164 00C5				REVERSE_STR     ENDP 
     165				 
     166 00C5				PRINT_STR       PROC 
     167 00C5  50			                        push    ax 
     168 00C6  B4 09			                        mov     ah,09h 
     169 00C8  CD 21			                        int     21h 
     170 00CA  58			                        pop    ax 
     171 00CB  C3			                        ret 
     172 00CC				PRINT_STR       ENDP 
     173				 
     174 00CC				NEWLINE         PROC 
     175 00CC  50			                        push    ax 
     176 00CD  52			                        push    dx 
     177 00CE  B2 0A			                        mov     dl,10d 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 12:43:57
                                                             Page     1-5


     178 00D0  B4 02			                        mov     ah,02h 
     179 00D2  CD 21			                        int     21h 
     180 00D4  5A			                        pop     dx 
     181 00D5  58			                        pop     ax 
     182 00D6  C3			                        ret 
     183 00D7				NEWLINE         ENDP 
     184				 
     185 00D7				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 12:43:57
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	005E	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	00D7	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

AFTER  . . . . . . . . . . . . .  	L BYTE	001A	_DATA

DATA1  . . . . . . . . . . . . .  	L BYTE	0000	_DATA
DATA1NAME  . . . . . . . . . . .  	L BYTE	004E	_DATA
DATA2  . . . . . . . . . . . . .  	L BYTE	0005	_DATA	Length = 0004
DATA2NAME  . . . . . . . . . . .  	L BYTE	0056	_DATA

INITAL . . . . . . . . . . . . .  	L BYTE	000A	_DATA

LCASELOOP  . . . . . . . . . . .  	L NEAR	00A2	_TEXT
LCASELOOPEXIT  . . . . . . . . .  	L NEAR	00B2	_TEXT
LOWERCASE  . . . . . . . . . . .  	L BYTE	003B	_DATA
LOWER_CASE . . . . . . . . . . .  	N PROC	00A2	_TEXT	Length = 0011

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 0082

NEWLINE  . . . . . . . . . . . .  	N PROC	00CC	_TEXT	Length = 000B

PRINT_DATA . . . . . . . . . . .  	N PROC	0082	_TEXT	Length = 0020
PRINT_STR  . . . . . . . . . . .  	N PROC	00C5	_TEXT	Length = 0007

REPLACEMENTLOOP1 . . . . . . . .  	L NEAR	0026	_TEXT
REPLACEMENTLOOP1EXIT . . . . . .  	L NEAR	0032	_TEXT
REVERSED . . . . . . . . . . . .  	L BYTE	002C	_DATA
REVERSE_STR  . . . . . . . . . .  	N PROC	00B3	_TEXT	Length = 0012
REVLOOP  . . . . . . . . . . . .  	L NEAR	00B9	_TEXT

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P3Q3		

Microsoft (R) Macro Assembler Version 5.00                  8/26/23 12:43:57
                                                             Symbols-2



    172 Source  Lines
    172 Total   Lines
     33 Symbols

  50460 + 449700 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
