Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:13:22
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  4D 49 4C 4B 24		data1       DB    "MILK",'$' 
       6 0005  0004[			data2       DB    4   dup ('*'),'$' 
       7	   2A			
       8			 ]	
       9       24			
      10				 
      11 000A  49 6E 69 74 69 61 6C	inital      DB    "Initial Content$" 
      12       20 43 6F 6E 74 65 6E	
      13       74 24			
      14 001A  41 66 74 65 72 20 52	after       DB    "After Replacement$" 
      15       65 70 6C 61 63 65 6D	
      16       65 6E 74 24		
      17 002C  41 66 74 65 72 20 52	reversed    DB    "After Reversed$" 
      18       65 76 65 72 73 65 64	
      19       24			
      20 003B  41 66 74 65 72 20 43	lowerCase   DB    "After Changed Case$"
					 
      21       68 61 6E 67 65 64 20	
      22       43 61 73 65 24		
      23				 
      24 004E  64 61 74 61 31 3A 20	data1Name   DB    "data1: $" 
      25       24			
      26 0056  64 61 74 61 32 3A 20	data2Name   DB    "data2: $" 
      27       24			
      28				 
      29 0000				.code 
      30 0000				main proc 
      31				 
      32 0000  B8 ---- R		mov ax,@data 
      33 0003  8E D8			mov ds,ax 
      34 0005  8E C0			mov es,ax 
      35 0007  B8 4C00			mov ax,4c00h 
      36				 
      37				; start 
      38				 
      39 000A  E8 00CB R		call    NEWLINE 
      40				 
      41 000D  8D 16 000A R		lea     dx,inital 
      42 0011  E8 00C4 R		call    PRINT_STR 
      43				 
      44 0014  E8 00CB R		call    NEWLINE 
      45				 
      46 0017  E8 0080 R		call    PRINT_DATA  
      47				 
      48 001A  E8 00CB R		call    NEWLINE 
      49 001D  E8 00CB R		call    NEWLINE 
      50				 
      51 0020  8D 36 0000 R		lea     si,data1 
      52 0024  8D 3E 0005 R		lea     di,data2 
      53 0028  B9 0004			mov     cx,0004h                ;number
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:13:22
                                                             Page     1-2


					 of times to repeat move byte (length o
					f string to move)        
      54 002B  F3/ A4			rep     movsb 
      55				 
      56 002D  8D 16 001A R		lea     dx,after 
      57 0031  E8 00C4 R		call    PRINT_STR 
      58				 
      59 0034  E8 00CB R		call    NEWLINE 
      60				 
      61 0037  E8 0080 R		call    PRINT_DATA  
      62				 
      63 003A  E8 00CB R		call    NEWLINE 
      64 003D  E8 00CB R		call    NEWLINE 
      65				 
      66 0040  8D 16 002C R		lea     dx,reversed 
      67 0044  E8 00C4 R		call    PRINT_STR 
      68				 
      69 0047  E8 00CB R		call    NEWLINE 
      70				 
      71 004A  8D 36 0000 R		lea     si,data1 
      72 004E  8D 3E 0005 R		lea     di,data2 
      73 0052  B9 0004			mov     cx,4d               ;length of 
					string 
      74 0055  E8 00B2 R		call    REVERSE_STR 
      75				 
      76 0058  E8 0080 R		call    PRINT_DATA 
      77				 
      78 005B  E8 00CB R		call    NEWLINE 
      79 005E  E8 00CB R		call    NEWLINE 
      80				 
      81 0061  8D 16 003B R		lea     dx,lowerCase 
      82 0065  E8 00C4 R		call    PRINT_STR 
      83				 
      84 0068  E8 00CB R		call    NEWLINE 
      85				 
      86 006B  8D 36 0000 R		lea     si,data1 
      87 006F  8D 3E 0005 R		lea     di,data2 
      88 0073  B9 0004			mov     cx,4d               ;length of 
					string 
      89 0076  E8 00A0 R		call    LOWER_CASE 
      90				 
      91 0079  E8 0080 R		call    PRINT_DATA   
      92				;end 
      93				 
      94 007C  B4 4C			mov ah,4ch 
      95 007E  CD 21			int 21h 
      96				 
      97 0080				main endp 
      98				 
      99 0080				PRINT_DATA      PROC 
     100 0080  8D 16 004E R		                        lea     dx,data
					1Name 
     101 0084  E8 00C4 R		                        call    PRINT_S
					TR 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:13:22
                                                             Page     1-3


     102				 
     103 0087  8D 16 0000 R		                        lea     dx,data
					1 
     104 008B  E8 00C4 R		                        call    PRINT_S
					TR 
     105				                         
     106 008E  E8 00CB R		                        call    NEWLINE
					 
     107				 
     108 0091  8D 16 0056 R		                        lea     dx,data
					2Name 
     109 0095  E8 00C4 R		                        call    PRINT_S
					TR 
     110				 
     111 0098  8D 16 0005 R		                        lea     dx,data
					2 
     112 009C  E8 00C4 R		                        call    PRINT_S
					TR 
     113				                         
     114 009F  C3			                        ret 
     115 00A0				PRINT_DATA      ENDP 
     116				 
     117 00A0				LOWER_CASE      PROC                   
					         ;reverse SI to DI, length in c
					x 
     118 00A0  BB 0000			                        mov     bx  ,  
					 0d      ;prepare for bx to be loop cou
					nter 
     119				 
     120 00A3				                        lCaseLoop: 
     121 00A3  8A 14			                                mov    
					 dl  ,   [si] 
     122				 
     123 00A5  80 C2 20			                                add    
					 dl  ,   32d 
     124				 
     125 00A8  88 15			                                mov    
					 [di],   dl 
     126				 
     127 00AA  46			                                inc    
					 si              ;move backwards 
     128 00AB  47			                                inc    
					 di              ;move forwards 
     129				 
     130 00AC  43			                                inc    
					 bx              ;loop counter 
     131				 
     132 00AD  3B D9			                                cmp    
					 bx,cx 
     133 00AF  72 F2			                                jb     
					 lCaseLoop       ;if =< string length 
     134				 
     135 00B1  C3			                        ret 
     136 00B2				LOWER_CASE      ENDP 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:13:22
                                                             Page     1-4


     137				 
     138 00B2				REVERSE_STR     PROC                   
					         ;reverse SI to DI, length in c
					x 
     139 00B2  BB 0000			                        mov     bx  ,  
					 0d      ;BX to be loop counter 
     140 00B5  03 F1			                        add     si  ,  
					 cx      ;move si to point to last elem
					ent 
     141 00B7  4E			                        dec     si     
					         ;read until before seperator 
     142				 
     143 00B8				                        revLoop: 
     144 00B8  8A 14			                                mov    
					 dl  ,   [si]         ;move value in dx
					 to dl 
     145 00BA  88 15			                                mov    
					 [di],   dl 
     146				 
     147 00BC  4E			                                dec    
					 si              ;read backwards 
     148 00BD  47			                                inc    
					 di              ;move forwards 
     149				 
     150 00BE  43			                                inc    
					 bx              ;loop counter 
     151				 
     152 00BF  3B D9			                                cmp    
					 bx,cx 
     153 00C1  72 F5			                                jb     
					 revLoop         ;if =< string length  
					    
     154				 
     155 00C3  C3			                        ret 
     156 00C4				REVERSE_STR     ENDP 
     157				 
     158 00C4				PRINT_STR       PROC 
     159 00C4  50			                        push    ax 
     160 00C5  B4 09			                        mov     ah,09h 
     161 00C7  CD 21			                        int     21h 
     162 00C9  58			                        pop    ax 
     163 00CA  C3			                        ret 
     164 00CB				PRINT_STR       ENDP 
     165				 
     166 00CB				NEWLINE         PROC 
     167 00CB  50			                        push    ax 
     168 00CC  52			                        push    dx 
     169 00CD  B2 0A			                        mov     dl,10d 
     170 00CF  B4 02			                        mov     ah,02h 
     171 00D1  CD 21			                        int     21h 
     172 00D3  5A			                        pop     dx 
     173 00D4  58			                        pop     ax 
     174 00D5  C3			                        ret 
     175 00D6				NEWLINE         ENDP 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:13:22
                                                             Page     1-5


     176				 
     177 00D6				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 18:13:22
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	005E	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	00D6	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

AFTER  . . . . . . . . . . . . .  	L BYTE	001A	_DATA

DATA1  . . . . . . . . . . . . .  	L BYTE	0000	_DATA
DATA1NAME  . . . . . . . . . . .  	L BYTE	004E	_DATA
DATA2  . . . . . . . . . . . . .  	L BYTE	0005	_DATA	Length = 0004
DATA2NAME  . . . . . . . . . . .  	L BYTE	0056	_DATA

INITAL . . . . . . . . . . . . .  	L BYTE	000A	_DATA

LCASELOOP  . . . . . . . . . . .  	L NEAR	00A3	_TEXT
LOWERCASE  . . . . . . . . . . .  	L BYTE	003B	_DATA
LOWER_CASE . . . . . . . . . . .  	N PROC	00A0	_TEXT	Length = 0012

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 0080

NEWLINE  . . . . . . . . . . . .  	N PROC	00CB	_TEXT	Length = 000B

PRINT_DATA . . . . . . . . . . .  	N PROC	0080	_TEXT	Length = 0020
PRINT_STR  . . . . . . . . . . .  	N PROC	00C4	_TEXT	Length = 0007

REVERSED . . . . . . . . . . . .  	L BYTE	002C	_DATA
REVERSE_STR  . . . . . . . . . .  	N PROC	00B2	_TEXT	Length = 0012
REVLOOP  . . . . . . . . . . . .  	L NEAR	00B8	_TEXT

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P3Q3		


    164 Source  Lines
    164 Total   Lines
     30 Symbols

  50468 + 466076 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
