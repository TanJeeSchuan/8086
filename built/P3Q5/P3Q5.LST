Microsoft (R) Macro Assembler Version 5.00                  8/26/23 13:20:26
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  01 01			fibonacciArr    DB  1,1 
       6 0002  0032[			                DB  50  DUP(0)  
       7	   00			
       8			 ]	
       9				
      10				 
      11 0000				.code 
      12 0000				main proc 
      13				 
      14 0000  B8 ---- R		mov ax,@data 
      15 0003  8E D8			mov ds,ax 
      16 0005  B8 4C00			mov ax,4c00h 
      17				 
      18				; start 
      19				 
      20 0008  33 C0			xor     ax,ax 
      21 000A  33 DB			xor     bx,bx 
      22 000C  33 C9			xor     cx,cx 
      23 000E  33 D2			xor     dx,dx 
      24				 
      25 0010  B9 0008			mov     cx,8d    ;print how many values
					 
      26				 
      27 0013  8D 36 0000 R		lea     si,fibonacciArr 
      28				 
      29 0017  83 C6 03			add     si,3d   ;start from the third e
					lement of array 
      30				 
      31 001A				fiboLoop:        
      32 001A  33 DB			                xor     bx,bx 
      33 001C  8A 44 FE			                mov     al,[si - 2] 
      34 001F  8A 64 FF			                mov     ah,[si - 1] 
      35				 
      36 0022  02 D8			                add     bl,al 
      37 0024  02 DC			                add     bl,ah 
      38				 
      39 0026  88 1C			                mov     [si],bl 
      40				 
      41 0028  46			                inc     si 
      42				 
      43 0029  33 C0			                xor     ax,ax 
      44 002B  8A C3			                mov     al,bl 
      45 002D  E8 003C R		                call    PRINT_NUM 
      46				 
      47 0030  B2 2C			                mov     dl,"," 
      48 0032  B4 02			                mov     ah,02h 
      49 0034  CD 21			                int     21h 
      50				 
      51 0036  E2 E2			                loop    fiboLoop 
      52				                 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 13:20:26
                                                             Page     1-2


      53				 
      54				;end 
      55				 
      56 0038  B4 4C			mov ah,4ch 
      57 003A  CD 21			int 21h 
      58				 
      59 003C				main endp 
      60				 
      61 003C				PRINT_NUM           PROC               
					         ;print ax 
      62 003C  50			                            push    ax 
      63 003D  53			                            push    bx 
      64 003E  51			                            push    cx 
      65 003F  52			                            push    dx 
      66				 
      67 0040  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
      68 0043  B9 0000			                            mov     cx,
					0h 
      69				                             
      70 0046				                            divLoop:   
					  
      71 0046  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
      72 0048  F7 F3			                                       
					 div     bx 
      73 004A  52			                                       
					 push    dx          ;save remainder 
      74 004B  41			                                       
					 inc     cx          ;count looped numb
					er 
      75 004C  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
      76 004E  75 F6			                                       
					 jnz     divLoop 
      77				 
      78 0050  B4 02			                            mov     ah,
					02h 
      79				 
      80 0052				                            printLoop: 
					  
      81 0052  5A			                                       
					 pop     dx          ;get remainder 
      82 0053  80 C2 30			                                       
					 add     dl,"0" 
      83 0056  CD 21			                                       
					 int     21h         ;print 
      84 0058  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
      85				 
      86 005A  5A			                            pop    dx 
      87 005B  59			                            pop    cx 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 13:20:26
                                                             Page     1-3


      88 005C  5B			                            pop    bx 
      89 005D  58			                            pop    ax 
      90				 
      91 005E  C3			                            ret 
      92				 
      93 005F				PRINT_NUM           ENDP 
      94				 
      95 005F				NEWLINE             PROC 
      96 005F  50			                            push    ax 
      97 0060  52			                            push    dx 
      98 0061  B2 0A			                            mov     dl,
					10d 
      99 0063  B4 02			                            mov     ah,
					02h 
     100 0065  CD 21			                            int     21h
					 
     101 0067  5A			                            pop     dx 
     102 0068  58			                            pop     ax 
     103 0069  C3			                            ret 
     104 006A				NEWLINE             ENDP 
     105				 
     106 006A				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 13:20:26
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0034	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	006A	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

DIVLOOP  . . . . . . . . . . . .  	L NEAR	0046	_TEXT

FIBOLOOP . . . . . . . . . . . .  	L NEAR	001A	_TEXT
FIBONACCIARR . . . . . . . . . .  	L BYTE	0000	_DATA

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 003C

NEWLINE  . . . . . . . . . . . .  	N PROC	005F	_TEXT	Length = 000B

PRINTLOOP  . . . . . . . . . . .  	L NEAR	0052	_TEXT
PRINT_NUM  . . . . . . . . . . .  	N PROC	003C	_TEXT	Length = 0023

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P3Q5		


    103 Source  Lines
    103 Total   Lines
     21 Symbols

  50384 + 466160 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
