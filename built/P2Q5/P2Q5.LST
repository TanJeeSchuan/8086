Microsoft (R) Macro Assembler Version 5.00                  8/19/23 13:28:33
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  50 6C 65 61 73 65 20	str1 DB "Please enter a digit: $" 
       6       65 6E 74 65 72 20 61	
       7       20 64 69 67 69 74 3A	
       8       20 24			
       9 0017  20 74 69 6D 65 73 20	str2 DB " times $" 
      10       24			
      11 001F  20 72 65 74 75 72 6E	str3 DB " returns: $" 
      12       73 3A 20 24		
      13				 
      14 0000				.code 
      15 0000				main proc 
      16				 
      17 0000  B8 ---- R		mov ax,@data 
      18 0003  8E D8			mov ds,ax 
      19 0005  B8 4C00			mov ax,4c00h 
      20				 
      21				; start 
      22				 
      23 0008  8D 16 0000 R		lea dx,str1 
      24 000C  B4 09			mov ah,09h 
      25 000E  CD 21			int 21h 
      26				 
      27 0010  B4 01			mov ah,0001h    ;input 
      28 0012  CD 21			int 21h 
      29 0014  8A D8			mov bl,al 
      30				 
      31 0016  B4 02			mov ah,02h      ;print \n 
      32 0018  B2 0A			mov dl, 10d 
      33 001A  CD 21			int 21h 
      34				 
      35 001C  8A D3			mov dl,bl       ;print input 
      36 001E  CD 21			int 21h 
      37				 
      38 0020  8D 16 0017 R		lea dx,str2     ;print times 
      39 0024  B4 09			mov ah,09h   
      40 0026  CD 21			int 21h 
      41				 
      42 0028  B4 02			mov ah,02h      ;print input 
      43 002A  8A D3			mov dl,bl 
      44 002C  CD 21			int 21h 
      45				 
      46 002E  B4 09			mov ah,09h      ;print returns: 
      47 0030  8D 16 001F R		lea dx,str3 
      48 0034  CD 21			int 21h 
      49				 
      50 0036  80 EB 30			sub bl,48d      ;multiply 
      51 0039  8A C3			mov al,bl 
      52 003B  F6 E3			mul bl 
      53				 
      54				; mov ah,02h      ;print result (single
Microsoft (R) Macro Assembler Version 5.00                  8/19/23 13:28:33
                                                             Page     1-2


					 digit only) 
      55				; mov dl,al 
      56				; add dl,48d 
      57				; int 21h 
      58				 
      59 003D  BB 000A			mov     bx,10d 
      60 0040  F6 F3			div     bl 
      61				 
      62 0042  50			push    ax 
      63 0043  8A D0			mov     dl,al 
      64 0045  80 C2 30			add     dl,48d 
      65 0048  B4 02			mov     ah,02h 
      66 004A  CD 21			int     21h 
      67 004C  58			pop     ax 
      68				 
      69 004D  8A D4			mov     dl,ah 
      70 004F  80 C2 30			add     dl,48d 
      71 0052  B4 02			mov     ah,02h 
      72 0054  CD 21			int     21h 
      73				 
      74				 
      75				;end 
      76				 
      77 0056  B4 4C			mov ah,4ch 
      78 0058  CD 21			int 21h 
      79				 
      80 005A				main endp 
      81				 
      82 005A				PRINT_NUM           PROC               
					         ;print ax 
      83 005A  50			                            push    ax 
      84 005B  53			                            push    bx 
      85 005C  51			                            push    cx 
      86 005D  52			                            push    dx 
      87				 
      88 005E  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
      89 0061  B9 0000			                            mov     cx,
					0h 
      90				                             
      91 0064				                            divLoop:   
					  
      92 0064  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
      93 0066  F7 F3			                                       
					 div     bx 
      94 0068  52			                                       
					 push    dx          ;save remainder 
      95 0069  41			                                       
					 inc     cx          ;count looped numb
					er 
      96 006A  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
Microsoft (R) Macro Assembler Version 5.00                  8/19/23 13:28:33
                                                             Page     1-3


      97 006C  75 F6			                                       
					 jnz     divLoop 
      98				 
      99 006E  B4 02			                            mov     ah,
					02h 
     100				 
     101 0070				                            printLoop: 
					  
     102 0070  5A			                                       
					 pop     dx          ;get remainder 
     103 0071  80 C2 30			                                       
					 add     dl,"0" 
     104 0074  CD 21			                                       
					 int     21h         ;print 
     105 0076  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
     106				 
     107 0078  58			                            pop    ax 
     108 0079  5B			                            pop    bx 
     109 007A  59			                            pop    cx 
     110 007B  5A			                            pop    dx 
     111				 
     112 007C  C3			                            ret 
     113				 
     114 007D				PRINT_NUM           ENDP 
     115 007D				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/19/23 13:28:33
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	002A	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	007D	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

DIVLOOP  . . . . . . . . . . . .  	L NEAR	0064	_TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 005A

PRINTLOOP  . . . . . . . . . . .  	L NEAR	0070	_TEXT
PRINT_NUM  . . . . . . . . . . .  	N PROC	005A	_TEXT	Length = 0023

STR1 . . . . . . . . . . . . . .  	L BYTE	0000	_DATA
STR2 . . . . . . . . . . . . . .  	L BYTE	0017	_DATA
STR3 . . . . . . . . . . . . . .  	L BYTE	001F	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P2Q5		


    110 Source  Lines
    110 Total   Lines
     21 Symbols

  50538 + 466006 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
