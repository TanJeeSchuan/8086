Microsoft (R) Macro Assembler Version 5.00                  8/13/23 20:13:53
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  50 6C 65 61 73 65 20	str1 DB "Please enter a digit: $" 
       6       65 6E 74 65 72 20 61	
       7       20 64 69 67 69 74 3A	
       8       20 24			
       9 0017  20 74 69 6D 65 73 20	str2 DB " times $" 
      10       24			
      11 001F  20 72 65 74 75 72 6E	str3 DB " returns: $" 
      12       73 3A 20 24		
      13				 
      14 0000				.code 
      15 0000				main proc 
      16				 
      17 0000  B8 ---- R		mov ax,@data 
      18 0003  8E D8			mov ds,ax 
      19 0005  B8 4C00			mov ax,4c00h 
      20				 
      21				; start 
      22				 
      23 0008  8D 16 0000 R		lea dx,str1 
      24 000C  B4 09			mov ah,09h 
      25 000E  CD 21			int 21h 
      26				 
      27 0010  B4 01			mov ah,0001h    ;input 
      28 0012  CD 21			int 21h 
      29 0014  8A D8			mov bl,al 
      30				 
      31 0016  B4 02			mov ah,02h      ;print \n 
      32 0018  B2 0A			mov dl, 10d 
      33 001A  CD 21			int 21h 
      34				 
      35 001C  8A D3			mov dl,bl       ;print input 
      36 001E  CD 21			int 21h 
      37				 
      38 0020  8D 16 0017 R		lea dx,str2     ;print times 
      39 0024  B4 09			mov ah,09h   
      40 0026  CD 21			int 21h 
      41				 
      42 0028  B4 02			mov ah,02h      ;print input 
      43 002A  8A D3			mov dl,bl 
      44 002C  CD 21			int 21h 
      45				 
      46 002E  B4 09			mov ah,09h      ;print returns: 
      47 0030  8D 16 001F R		lea dx,str3 
      48 0034  CD 21			int 21h 
      49				 
      50 0036  80 EB 30			sub bl,48d      ;multiply 
      51 0039  8A C3			mov al,bl 
      52 003B  F6 E3			mul bl 
      53				 
      54				; mov ah,02h      ;print result (single
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 20:13:53
                                                             Page     1-2


					 digit only) 
      55				; mov dl,al 
      56				; add dl,48d 
      57				; int 21h 
      58				 
      59				;;METHOD 1 
      60				; mov bl,0Ah 
      61				; div bl          ;divide ax by bl, al 
					will be quotient, ah is remainder 
      62				 
      63				; mov cl,ah       ;save AH because rema
					inder is last 
      64				 
      65				; mov ah,02h      ;print quotient 
      66				; mov dl,al 
      67				; add dl,"0" 
      68				; int 21h 
      69				 
      70				; mov dl,cl       ;print remainder 
      71				; add dl,"0" 
      72				; int 21h 
      73				 
      74				; mov     bx,000Ah 
      75				 
      76				; div     bx 
      77				; push    dx 
      78				 
      79				; div     bx 
      80				; push    dx 
      81				 
      82				; mov     ah,02h 
      83				 
      84				; pop     dx 
      85				; int     21h 
      86				 
      87				; pop     dx 
      88				; int     21h 
      89				 
      90				 
      91 003D  E8 0044 R		call    PRINT_NUM 
      92				;end 
      93				 
      94 0040  B4 4C			mov ah,4ch 
      95 0042  CD 21			int 21h 
      96				 
      97 0044				main endp 
      98				 
      99 0044				PRINT_NUM           PROC               
					         ;print ax 
     100 0044  50			                            push    ax 
     101 0045  53			                            push    bx 
     102 0046  51			                            push    cx 
     103 0047  52			                            push    dx 
     104				 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 20:13:53
                                                             Page     1-3


     105 0048  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
     106 004B  B9 0000			                            mov     cx,
					0h 
     107				                             
     108 004E				                            divLoop:   
					  
     109 004E  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
     110 0050  F7 F3			                                       
					 div     bx 
     111 0052  52			                                       
					 push    dx          ;save remainder 
     112 0053  41			                                       
					 inc     cx          ;count looped numb
					er 
     113 0054  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
     114 0056  75 F6			                                       
					 jnz     divLoop 
     115				 
     116 0058  B4 02			                            mov     ah,
					02h 
     117				 
     118 005A				                            printLoop: 
					  
     119 005A  5A			                                       
					 pop     dx          ;get remainder 
     120 005B  80 C2 30			                                       
					 add     dl,"0" 
     121 005E  CD 21			                                       
					 int     21h         ;print 
     122 0060  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
     123				 
     124 0062  58			                            pop    ax 
     125 0063  5B			                            pop    bx 
     126 0064  59			                            pop    cx 
     127 0065  5A			                            pop    dx 
     128				 
     129 0066  C3			                            ret 
     130				 
     131 0067				PRINT_NUM           ENDP 
     132 0067				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/13/23 20:13:53
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	002A	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	0067	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

DIVLOOP  . . . . . . . . . . . .  	L NEAR	004E	_TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 0044

PRINTLOOP  . . . . . . . . . . .  	L NEAR	005A	_TEXT
PRINT_NUM  . . . . . . . . . . .  	N PROC	0044	_TEXT	Length = 0023

STR1 . . . . . . . . . . . . . .  	L BYTE	0000	_DATA
STR2 . . . . . . . . . . . . . .  	L BYTE	0017	_DATA
STR3 . . . . . . . . . . . . . .  	L BYTE	001F	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P2Q5		


    127 Source  Lines
    127 Total   Lines
     21 Symbols

  50538 + 466006 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
