Microsoft (R) Macro Assembler Version 5.00                  8/19/23 13:30:44
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  02 04 06 08 0A 0C	byteList DB 2, 4, 6, 8, 10, 12 
       6				 
       7 0000				.code 
       8 0000				main proc 
       9				 
      10 0000  B8 ---- R		mov ax,@data 
      11 0003  8E D8			mov ds,ax 
      12 0005  8E C0			mov es,ax 
      13 0007  B8 4C00			mov ax,4c00h 
      14				 
      15				; start 
      16				 
      17 000A  B8 0000			mov     ax,0h 
      18 000D  BA 0000			mov     dx,0000h                       
					         ;use DX as accumulator 
      19 0010  B9 0006			mov     cx,6h                          
					         ;number of elements is array 
      20 0013  BB 0000			mov     bx,0000h                       
					         ;bx as tracker 
      21				 
      22 0016  8D 36 0000 R		lea     si,byteList 
      23				 
      24 001A				loopStart:   
      25 001A  8A 04			                    mov     al,[si]    
					         ;move si value to al 
      26 001C  02 D0			                    add     dl,al      
					         ;add to dl 
      27				 
      28 001E  46			                    inc     si         
					       ;to next element 
      29 001F  43			                    inc     bx         
					         ;bx++ 
      30				 
      31				                    ; cmp     bx,cx    
					           ;if loopnumber < elementNumb
					er, jmp 
      32				                    ; jb      loopStart
					 
      33 0020  E2 F8			                    loop    loopStart 
      34				 
      35 0022  8B C2			mov     ax,dx 
      36				 
      37 0024  E8 002B R		call    PRINT_NUM 
      38				;end 
      39				 
      40 0027  B4 4C			mov ah,4ch 
      41 0029  CD 21			int 21h 
      42				 
      43 002B				main endp 
      44				 
Microsoft (R) Macro Assembler Version 5.00                  8/19/23 13:30:44
                                                             Page     1-2


      45 002B				PRINT_NUM           PROC               
					         ;print ax 
      46 002B  50			                            push    ax 
      47 002C  53			                            push    bx 
      48 002D  51			                            push    cx 
      49 002E  52			                            push    dx 
      50				 
      51 002F  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
      52 0032  B9 0000			                            mov     cx,
					0h 
      53				                             
      54 0035				                            divLoop:   
					  
      55 0035  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
      56 0037  F7 F3			                                       
					 div     bx 
      57 0039  52			                                       
					 push    dx          ;save remainder 
      58 003A  41			                                       
					 inc     cx          ;count looped numb
					er 
      59 003B  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
      60 003D  75 F6			                                       
					 jnz     divLoop 
      61				 
      62 003F  B4 02			                            mov     ah,
					02h 
      63				 
      64 0041				                            printLoop: 
					  
      65 0041  5A			                                       
					 pop     dx          ;get remainder 
      66 0042  80 C2 30			                                       
					 add     dl,"0" 
      67 0045  CD 21			                                       
					 int     21h         ;print 
      68 0047  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
      69				 
      70 0049  58			                            pop    ax 
      71 004A  5B			                            pop    bx 
      72 004B  59			                            pop    cx 
      73 004C  5A			                            pop    dx 
      74				 
      75 004D  C3			                            ret 
      76				 
      77 004E				PRINT_NUM           ENDP 
      78				 
      79 004E				NEWLINE         PROC 
Microsoft (R) Macro Assembler Version 5.00                  8/19/23 13:30:44
                                                             Page     1-3


      80 004E  50			                        push    ax 
      81 004F  52			                        push    dx 
      82 0050  B2 0A			                        mov     dl,10d 
      83 0052  B4 02			                        mov     ah,02h 
      84 0054  CD 21			                        int     21h 
      85 0056  5A			                        pop     dx 
      86 0057  58			                        pop     ax 
      87 0058  C3			                        ret 
      88 0059				NEWLINE         ENDP 
      89				 
      90 0059				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/19/23 13:30:44
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0006	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	0059	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

BYTELIST . . . . . . . . . . . .  	L BYTE	0000	_DATA

DIVLOOP  . . . . . . . . . . . .  	L NEAR	0035	_TEXT

LOOPSTART  . . . . . . . . . . .  	L NEAR	001A	_TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 002B

NEWLINE  . . . . . . . . . . . .  	N PROC	004E	_TEXT	Length = 000B

PRINTLOOP  . . . . . . . . . . .  	L NEAR	0041	_TEXT
PRINT_NUM  . . . . . . . . . . .  	N PROC	002B	_TEXT	Length = 0023

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P3Q4		


     90 Source  Lines
     90 Total   Lines
     21 Symbols

  50462 + 466082 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
