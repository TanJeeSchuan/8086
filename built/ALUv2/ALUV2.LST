Microsoft (R) Macro Assembler Version 5.00                  8/10/23 20:50:09
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  04			num1                DB  4              
					                 ;decimal location from
					 end of number 
       6 0001  8F379900			                    DD  10041231d      
					                 ;1004.1231 
       7				 
       8 0005  0014[			buffer              DB 20 DUP(?) 
       9	    ??			
      10			 ]	
      11				
      12 0019  24			                    DB "$" 
      13				 
      14 0000				.code 
      15 0000				main proc 
      16				 
      17 0000  B8 ---- R		mov ax,@data 
      18 0003  8E D8			mov ds,ax 
      19 0005  B8 4C00			mov ax,4c00h 
      20				 
      21				; start 
      22				 
      23				; mov ax,[num1 + 3] 
      24				; call print_num 
      25				 
      26 0008  B8 000A			mov ax,0010d 
      27				 
      28				;print BCD char to buffer 
      29				 
      30 000B  33 C9			xor cx,cx 
      31 000D  BB 000A			mov bx,000Ah 
      32				 
      33 0010				main_print_num_div_loop:  
      34 0010  33 D2			xor dx,dx                   ;set dx to 
					zero 
      35 0012  F7 F3			div bx 
      36 0014  52			push dx 
      37 0015  41			inc cx 
      38 0016  85 C0			test ax,ax 
      39 0018  75 F6			jnz main_print_num_div_loop 
      40				 
      41 001A  B4 02			mov ah, 02h 
      42				 
      43 001C				main_print_num_print_lp:  
      44 001C  5A			pop dx 
      45 001D  83 C2 30			add dx,"0" 
      46				 
      47 0020  8B C1			mov ax,cx 
      48 0022  BB 0013			mov bx,19d 
      49 0025  2B D8			sub bx,ax 
      50				 
Microsoft (R) Macro Assembler Version 5.00                  8/10/23 20:50:09
                                                             Page     1-2


      51 0027  89 97 0005 R		mov [buffer + bx],dx 
ASMFiles\A\ALUv2.asm(48): warning A4031: Operand types must match
      52 002B  E2 EF			loop main_print_num_print_lp 
      53				 
      54 002D  8D 16 0005 R		lea dx,buffer 
      55 0031  B4 09			mov ah,09h 
      56 0033  CD 21			int 21h 
      57				 
      58				;end 
      59				 
      60 0035  B4 4C			mov ah,4ch 
      61 0037  CD 21			int 21h 
      62				 
      63 0039				print_dec:                             
					             ;print number in di 
      64 0039  8B 0D			                        mov  cx,[di]   
					             ;load location of decimal 
					point in number 
      65				                         
      66				 
      67				 
      68 003B				print_lnum:                            
					              ;print large number in si
					 in decimal format 
      69 003B  50			                        push ax 
      70 003C  53			                        push bx 
      71 003D  51			                        push cx 
      72 003E  52			                        push dx 
      73				 
      74 003F  33 C9			                        xor cx,cx 
      75 0041  BB 000A			                        mov bx,000Ah 
      76				                         
      77 0044				    print_lnum_div_loop:  
      78 0044  33 D2			                        xor dx,dx      
					             ;set dx to zero 
      79 0046  F7 F3			                        div bx 
      80 0048  52			                        push dx 
      81 0049  41			                        inc cx 
      82 004A  85 C0			                        test ax,ax 
      83 004C  75 18			                        jnz print_num_d
					iv_loop 
      84				 
      85 004E  B4 02			                        mov ah, 02h 
      86				 
      87 0050				    print_lnum_print_lp:  
      88 0050  5A			                        pop dx 
      89 0051  83 C2 30			                        add dx,"0" 
      90 0054  CD 21			                        int 21h 
      91 0056  E2 1A			                        loop print_num_
					print_lp 
      92				 
      93 0058  58			                        pop ax 
      94 0059  5B			                        pop bx 
      95 005A  59			                        pop cx 
Microsoft (R) Macro Assembler Version 5.00                  8/10/23 20:50:09
                                                             Page     1-3


      96 005B  5A			                        pop dx 
      97				 
      98 005C  C3			                        ret 
      99				 
     100 005D				print_num:                             
					             ;print number in ax in dec
					imal format 
     101 005D  50			                        push ax 
     102 005E  53			                        push bx 
     103 005F  51			                        push cx 
     104 0060  52			                        push dx 
     105				 
     106 0061  33 C9			                        xor cx,cx 
     107 0063  BB 000A			                        mov bx,000Ah 
     108				                         
     109 0066				    print_num_div_loop:  
     110 0066  33 D2			                        xor dx,dx      
					             ;set dx to zero 
     111 0068  F7 F3			                        div bx 
     112 006A  52			                        push dx 
     113 006B  41			                        inc cx 
     114 006C  85 C0			                        test ax,ax 
     115 006E  75 F6			                        jnz print_num_d
					iv_loop 
     116				 
     117 0070  B4 02			                        mov ah, 02h 
     118				 
     119 0072				    print_num_print_lp:  
     120 0072  5A			                        pop dx 
     121 0073  83 C2 30			                        add dx,"0" 
     122 0076  CD 21			                        int 21h 
     123 0078  E2 F8			                        loop print_num_
					print_lp 
     124				 
     125 007A  58			                        pop ax 
     126 007B  5B			                        pop bx 
     127 007C  59			                        pop cx 
     128 007D  5A			                        pop dx 
     129				 
     130 007E  C3			                        ret 
     131				 
     132 007F				main endp 
     133 007F				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/10/23 20:50:09
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	001A	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	007F	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

BUFFER . . . . . . . . . . . . .  	L BYTE	0005	_DATA	Length = 0014

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 007F
MAIN_PRINT_NUM_DIV_LOOP  . . . .  	L NEAR	0010	_TEXT
MAIN_PRINT_NUM_PRINT_LP  . . . .  	L NEAR	001C	_TEXT

NUM1 . . . . . . . . . . . . . .  	L BYTE	0000	_DATA

PRINT_DEC  . . . . . . . . . . .  	L NEAR	0039	_TEXT
PRINT_LNUM . . . . . . . . . . .  	L NEAR	003B	_TEXT
PRINT_LNUM_DIV_LOOP  . . . . . .  	L NEAR	0044	_TEXT
PRINT_LNUM_PRINT_LP  . . . . . .  	L NEAR	0050	_TEXT
PRINT_NUM  . . . . . . . . . . .  	L NEAR	005D	_TEXT
PRINT_NUM_DIV_LOOP . . . . . . .  	L NEAR	0066	_TEXT
PRINT_NUM_PRINT_LP . . . . . . .  	L NEAR	0072	_TEXT

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  ALUv2		


    130 Source  Lines
    130 Total   Lines
     26 Symbols

  50410 + 466134 Bytes symbol space free

      1 Warning Errors
      0 Severe  Errors
