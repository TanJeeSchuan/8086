Microsoft (R) Macro Assembler Version 5.00                  8/14/23 14:27:14
                                                             Page     1-1


       1				.MODEL SMALL 
       2 0064				.STACK 100 
       3 0000				.DATA 
       4				 
       5 0000  FFFFFFFF			num1                DD  0FFFFFFFFh     
					                          ;double type 
					varoab;e 
       6				 
       7 0004  06			strNum1             DB  6 
       8 0005  33 33 35 2E 32 35	                    DB  "335.25" 
       9 000B  24			                    DB  "$" 
      10				 
      11 000C  06			strNum2             DB  6 
      12 000D  32 34 33 33 2E 36 35	                    DB  "2433.65" 
      13 0014  24			                    DB  "$" 
      14				 
      15 0015  0014[			result              DB  20 DUP(?) 
      16	    ??			
      17			 ]	
      18				
      19				 
      20 0029  0032[			output              DB  50 DUP("$") 
      21	   24			
      22			 ]	
      23				
      24				 
      25 005B  0014[			buffer              DB  20 DUP(?) 
      26	    ??			
      27			 ]	
      28				
      29 006F  24			                    DB  "$" 
      30				 
      31 0000				.CODE 
      32 0000				MAIN            PROC 
      33				 
      34 0000  B8 ---- R		mov ax,@data 
      35 0003  8E D8			mov ds,ax 
      36 0005  B8 4C00			mov ax,4c00h 
      37				 
      38				; start 
      39				 
      40 0008  8D 36 0004 R		lea     si,strNum1 
      41 000C  8D 3E 000C R		lea     di,strNum2 
      42 0010  E8 002B R		call    STRNUM_ADD 
      43				 
      44 0013  8D 36 0015 R		lea     si,result 
      45 0017  E8 0024 R		call    PRINT_STR 
      46				 
      47				;end 
      48				 
      49 001A  B4 4C			mov ah,4ch 
      50 001C  CD 21			int 21h 
      51				 
      52 001E				MAIN            ENDP 
Microsoft (R) Macro Assembler Version 5.00                  8/14/23 14:27:14
                                                             Page     1-2


      53				 
      54 001E				PRINT_DOUBLE    PROC 
      55 001E  8B 14			                        mov         dx,
					[si] 
      56 0020  8B 44 02			                        mov ax,[si + 2]
					 
      57 0023  C3			                        ret 
      58 0024				PRINT_DOUBLE    ENDP 
      59				 
      60 0024				PRINT_STR       PROC                   
					         ;print value from address in d
					x 
      61 0024  50			                        push        ax 
      62 0025  B4 09			                        mov         ah,
					09h       
      63 0027  CD 21			                        int 21h 
      64 0029  58			                        pop         ax 
      65 002A  C3			                        ret 
      66 002B				PRINT_STR       ENDP 
      67				 
      68 002B				STRNUM_ADD      PROC 
      69 002B  8A 0C			                        mov         cl,
					[si]     ;number of chars 
      70 002D  8D 16 0015 R		                        lea         dx,
					result 
      71				 
      72 0031  03 F1			                        add         si,
					cx 
      73 0033  03 F9			                        add         di,
					cx 
      74 0035  03 D1			                        add         dx,
					cx 
      75				 
      76 0037  F8			                        CLC 
      77				 
      78 0038				                        add_loop: 
      79				                                     
      80 0038  8A 04			                                    mov
					     al,[si] 
      81 003A  3C 2E			                                    cmp
					     al,"."      
      82 003C  74 1D			                                    je 
					     point 
      83 003E  2C 30			                                    sub
					     al,48d 
      84				 
      85 0040  8A 25			                                    mov
					     ah,[di] 
      86 0042  80 FC 2E			                                    cmp
					     ah,"." 
      87 0045  74 14			                                    je 
					     point 
      88 0047  80 EC 30			                                    sub
					     ah,48d 
Microsoft (R) Macro Assembler Version 5.00                  8/14/23 14:27:14
                                                             Page     1-3


      89				 
      90 004A  02 C4			                                    add
					     al,ah 
      91 004C  02 C3			                                    add
					     al,bl 
      92				 
      93 004E  3C 09			                                    cmp
					     al,9d 
      94 0050  77 03			                                    ja 
					     add_OF      ;if al is more than 9,
					 overflow 
      95				 
      96 0052  EB 05 90			                                    jmp
					     no_OF       ;no overflow 
      97				 
      98 0055				                                    add
					_OF: 
      99 0055  2C 0A			                                       
					     sub     al,10d 
     100 0057  B3 01			                                       
					     mov     bl,1d                     
					;set carry 
     101				 
     102 0059				                                    no_
					OF: 
     103				 
     104 0059  04 30			                                    add
					     al,"0" 
     105				 
     106 005B  57			                        point:      pus
					h    di 
     107 005C  8B FA			                                    mov
					     di,dx 
     108				 
     109 005E  88 05			                                    mov
					     [di],al 
     110 0060  5F			                                    pop
					     di 
     111				 
     112 0061  4E			                                    dec
					     si 
     113 0062  4F			                                    dec
					     di 
     114 0063  4A			                                    dec
					     dx 
     115				 
     116 0064  E2 D2			                                    loo
					p    add_loop 
     117				 
     118 0066  C3			                        ret 
     119				 
     120				                         
     121				                                     
     122				 
Microsoft (R) Macro Assembler Version 5.00                  8/14/23 14:27:14
                                                             Page     1-4


     123 0067				STRNUM_ADD      ENDP 
     124				 
     125 0067				PRINT_NUM       PROC                   
					                     ;print from ax    
					           
     126 0067  50			                        push    ax     
					                     ;preserves origina
					l register values 
     127 0068  53			                        push    bx 
     128 0069  51			                        push    cx 
     129 006A  52			                        push    dx 
     130 006B  BB 000A			                        mov     bx,000A
					h         
     131 006E  B9 0000			                        mov     cx,0000
					h 
     132 0071				            Divloop: 
     133 0071  BA 0000			                        mov     dx,0000
					h 
     134 0074  F7 F3			                        div     bx 
     135 0076  52			                        push    dx 
     136 0077  41			                        inc     cx 
     137 0078  85 C0			                        test    ax,ax 
     138 007A  75 F5			                        jnz     Divloop
					 
     139				 
     140 007C  B4 02			                        mov ah,02h     
					                     ;setup for print 
     141				 
     142 007E				            IntPrint:    
     143 007E  5A			                        pop     dx 
     144 007F  83 C2 30			                        add     dx,48d 
     145 0082  CD 21			                        int     21h 
     146 0084  E2 F8			                        loop    IntPrin
					t 
     147				 
     148 0086  5A			                        pop dx         
					                     ;restore original 
					ax value 
     149 0087  59			                        pop cx 
     150 0088  5B			                        pop bx 
     151 0089  58			                        pop ax 
     152 008A  C3			                        ret 
     153 008B				PRINT_NUM       ENDP 
     154				 
     155 008B				END MAIN 
Microsoft (R) Macro Assembler Version 5.00                  8/14/23 14:27:14
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0070	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	008B	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ADD_LOOP . . . . . . . . . . . .  	L NEAR	0038	_TEXT
ADD_OF . . . . . . . . . . . . .  	L NEAR	0055	_TEXT

BUFFER . . . . . . . . . . . . .  	L BYTE	005B	_DATA	Length = 0014

DIVLOOP  . . . . . . . . . . . .  	L NEAR	0071	_TEXT

INTPRINT . . . . . . . . . . . .  	L NEAR	007E	_TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 001E

NO_OF  . . . . . . . . . . . . .  	L NEAR	0059	_TEXT
NUM1 . . . . . . . . . . . . . .  	L DWORD	0000	_DATA

OUTPUT . . . . . . . . . . . . .  	L BYTE	0029	_DATA	Length = 0032

POINT  . . . . . . . . . . . . .  	L NEAR	005B	_TEXT
PRINT_DOUBLE . . . . . . . . . .  	N PROC	001E	_TEXT	Length = 0006
PRINT_NUM  . . . . . . . . . . .  	N PROC	0067	_TEXT	Length = 0024
PRINT_STR  . . . . . . . . . . .  	N PROC	0024	_TEXT	Length = 0007

RESULT . . . . . . . . . . . . .  	L BYTE	0015	_DATA	Length = 0014

STRNUM1  . . . . . . . . . . . .  	L BYTE	0004	_DATA
STRNUM2  . . . . . . . . . . . .  	L BYTE	000C	_DATA
STRNUM_ADD . . . . . . . . . . .  	N PROC	002B	_TEXT	Length = 003C

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  ALUv2		

Microsoft (R) Macro Assembler Version 5.00                  8/14/23 14:27:14
                                                             Symbols-2



    146 Source  Lines
    146 Total   Lines
     31 Symbols

  50372 + 449788 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
