Microsoft (R) Macro Assembler Version 5.00                  8/26/23 14:12:12
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  54 68 65 72 65 20 61	str1    DB  "There are $" 
       6       72 65 20 24		
       7 000B  20 70 6F 73 69 74 69	str2    DB  " positive and $" 
       8       76 65 20 61 6E 64 20	
       9       24			
      10 001A  20 6E 65 67 61 74 69	str3    DB  " negative values in the li
					st.$" 
      11       76 65 20 76 61 6C 75	
      12       65 73 20 69 6E 20 74	
      13       68 65 20 6C 69 73 74	
      14       2E 24			
      15				 
      16 0038  0C 1D F7 05 D0 14 00	list    DB  12, 29, -9, 5, -48, 20, 0 
      17				 
      18 003F  00			posInt  DB  0 
      19 0040  00			negInt  DB  0 
      20				 
      21 0000				.code 
      22 0000				main proc 
      23				 
      24 0000  B8 ---- R		mov ax,@data 
      25 0003  8E D8			mov ds,ax 
      26 0005  8E C0			mov es,ax 
      27 0007  B8 0000			mov ax,0h 
      28				 
      29				; start 
      30				 
      31				 
      32 000A  8D 36 0038 R		lea     si,list 
      33				 
      34 000E				loopStart:       
      35 000E  8A 04			                mov     al,[si] 
      36				 
      37 0010  46			                inc     si 
      38				 
      39 0011  3C 00			                CMP     al,0 
      40				 
      41 0013  7C 05			                jl      negative       
					     ;if signed flag is set, al is nega
					tive 
      42				                 
      43 0015  7F 0F			                jg      positive 
      44				 
      45 0017  EB 19 90			                jmp     exitLoop 
      46 001A				                negative: 
      47 001A  8A 1E 0040 R		                            mov     bl,
					[negInt] 
      48 001E  FE C3			                            inc     bl 
      49 0020  88 1E 0040 R		                            mov     [ne
					gInt],bl 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 14:12:12
                                                             Page     1-2


      50 0024  EB E8			                            jmp     loo
					pStart 
      51				 
      52 0026				                positive: 
      53 0026  8A 1E 003F R		                            mov     bl,
					[posInt] 
      54 002A  FE C3			                            inc     bl 
      55 002C  88 1E 003F R		                            mov     [po
					sInt],bl 
      56 0030  EB DC			                            jmp     loo
					pStart     
      57				 
      58 0032				exitLoop: 
      59				 
      60 0032  8D 16 0000 R		lea     dx,str1 
      61 0036  E8 005B R		call    PRINT_STR 
      62				 
      63 0039  33 C0			xor     ax,ax 
      64 003B  A0 003F R		mov     al,[posInt] 
      65 003E  E8 0062 R		call    PRINT_NUM 
      66				 
      67 0041  8D 16 000B R		lea     dx,str2 
      68 0045  E8 005B R		call    PRINT_STR 
      69				 
      70 0048  33 C0			xor     ax,ax 
      71 004A  A0 0040 R		mov     al,[negInt] 
      72 004D  E8 0062 R		call    PRINT_NUM 
      73				 
      74 0050  8D 16 001A R		lea     dx,str3 
      75 0054  E8 005B R		call    PRINT_STR 
      76				;end 
      77				 
      78 0057  B4 4C			mov ah,4ch 
      79 0059  CD 21			int 21h 
      80				 
      81 005B				main endp 
      82				 
      83 005B				PRINT_STR       PROC 
      84 005B  50			                        push    ax 
      85 005C  B4 09			                        mov     ah,09h 
      86 005E  CD 21			                        int     21h 
      87 0060  58			                        pop    ax 
      88 0061  C3			                        ret 
      89 0062				PRINT_STR       ENDP 
      90				 
      91 0062				PRINT_NUM       PROC                   
					     ;print ax 
      92 0062  50			                            push    ax 
      93 0063  53			                            push    bx 
      94 0064  51			                            push    cx 
      95 0065  52			                            push    dx 
      96				 
      97 0066  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 14:12:12
                                                             Page     1-3


      98 0069  B9 0000			                            mov     cx,
					0h 
      99				                             
     100 006C				                            divLoop:   
					  
     101 006C  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
     102 006E  F7 F3			                                       
					 div     bx 
     103 0070  52			                                       
					 push    dx          ;save remainder 
     104 0071  41			                                       
					 inc     cx          ;count looped numb
					er 
     105 0072  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
     106 0074  75 F6			                                       
					 jnz     divLoop 
     107				 
     108 0076  B4 02			                            mov     ah,
					02h 
     109				 
     110 0078				                            printLoop: 
					  
     111 0078  5A			                                       
					 pop     dx          ;get remainder 
     112 0079  80 C2 30			                                       
					 add     dl,"0" 
     113 007C  CD 21			                                       
					 int     21h         ;print 
     114 007E  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
     115				 
     116 0080  58			                            pop    ax 
     117 0081  5B			                            pop    bx 
     118 0082  59			                            pop    cx 
     119 0083  5A			                            pop    dx 
     120				 
     121 0084  C3			                            ret 
     122 0085				PRINT_NUM       ENDP 
     123				 
     124 0085				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/26/23 14:12:12
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0041	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	0085	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

DIVLOOP  . . . . . . . . . . . .  	L NEAR	006C	_TEXT

EXITLOOP . . . . . . . . . . . .  	L NEAR	0032	_TEXT

LIST . . . . . . . . . . . . . .  	L BYTE	0038	_DATA
LOOPSTART  . . . . . . . . . . .  	L NEAR	000E	_TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 005B

NEGATIVE . . . . . . . . . . . .  	L NEAR	001A	_TEXT
NEGINT . . . . . . . . . . . . .  	L BYTE	0040	_DATA

POSINT . . . . . . . . . . . . .  	L BYTE	003F	_DATA
POSITIVE . . . . . . . . . . . .  	L NEAR	0026	_TEXT
PRINTLOOP  . . . . . . . . . . .  	L NEAR	0078	_TEXT
PRINT_NUM  . . . . . . . . . . .  	N PROC	0062	_TEXT	Length = 0023
PRINT_STR  . . . . . . . . . . .  	N PROC	005B	_TEXT	Length = 0007

STR1 . . . . . . . . . . . . . .  	L BYTE	0000	_DATA
STR2 . . . . . . . . . . . . . .  	L BYTE	000B	_DATA
STR3 . . . . . . . . . . . . . .  	L BYTE	001A	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P4Q1		


    117 Source  Lines
    117 Total   Lines
     29 Symbols

  50460 + 466084 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
