Microsoft (R) Macro Assembler Version 5.00                  9/7/23 08:52:48
                                                             Page     1-1


       1				.MODEL SMALL 
       2 0064				.STACK 100 
       3 0000				.DATA 
       4				 
       5 0000  00BC			long1       DW  00BCh 
       6 0002  614F			            DW  614Fh 
       7				 
       8 0004  0002[			result      DW  2   DUP(?) 
       9	   ????			
      10			 ]	
      11				
      12 0008  24			            DB  "$" 
      13				 
      14 0000				.CODE 
      15 0000				MAIN        PROC 
      16 0000  B8 ---- R		mov         ax, @DATA 
      17 0003  8E D8			mov         ds, ax 
      18 0005  33 C0			xor         ax, ax 
      19				 
      20				 
      21 0007  8D 36 0000 R		lea         si, long1 
      22 000B  BB 000A			mov         bx, 10d 
      23				 
      24 000E  33 C9			xor         cx, cx 
      25 0010				PRINT_LONG_LOOP: 
      26 0010  E8 0022 R		            call        DIV_LONG 
      27				            ; inc         cx 
      28				 
      29				            ; add         dx, 48d 
      30				            ; call        PRINT_CHAR 
      31				 
      32				            ; mov         ax, [si+2] 
      33				            ; test        ax, ax 
      34				            ; jnz         PRINT_LONG_LO
					OP 
      35				 
      36				            ; mov         ax, [si] 
      37				            ; test        ax, ax 
      38				            ; jnz         PRINT_LONG_LO
					OP 
      39				 
      40 0013  33 C0			xor         ax,ax 
      41 0015  E8 0077 R		call        NEWLINE 
      42 0018  A0 0003 R		mov         al, [long1+3] 
ASMFiles\A\32bit.asm(39): warning A4031: Operand types must match
      43 001B  E8 004D R		call        PRINT_NUM 
      44				 
      45				 
      46 001E  B4 4C			mov         ah, 4ch 
      47 0020  CD 21			int         21h 
      48 0022				MAIN        ENDP 
      49				 
      50 0022				DIV_LONG        PROC                   
					                 ;si 的doubleword / bx
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 08:52:48
                                                             Page     1-2


					， remainder 在 dx 
      51 0022  56			                            push    si 
      52 0023  50			                            push    ax 
      53 0024  53			                            push    bx 
      54 0025  51			                            push    cx 
      55				 
      56 0026  BB 000A			                            mov     bx,
					 10d 
      57 0029  B9 0004			                            mov     cx,
					 4d 
      58 002C  33 D2			                            xor     dx,
					 dx 
      59				 
      60 002E				                            DIV_LONG_LO
					OP: 
      61 002E  53			                                    pus
					h    bx 
      62 002F  BB 0100			                                    mov
					     bx, 100h 
      63 0032  8B C2			                                    mov
					     ax, dx           
      64 0034  F7 E3			                                    mul
					     bx              ;remainder (dx) * 
					100h 
      65 0036  03 04			                                    add
					     ax, [si]        ;+ divWord[i] 
      66 0038  5B			                                    pop
					     bx 
      67				 
      68 0039  33 D2			                                    xor
					     dx, dx 
      69 003B  F7 F3			                                    div
					     bx 
      70				 
      71 003D  88 04			                                    mov
					     [si],al 
      72 003F  46			                                    inc
					     si 
      73				 
      74 0040  E8 0077 R		                                    cal
					l    NEWLINE 
      75 0043  E8 004D R		                                    cal
					l    PRINT_NUM 
      76				 
      77 0046  E2 E6			                                    loo
					p    DIV_LONG_LOOP 
      78				 
      79 0048  59			                            pop     cx 
      80 0049  5B			                            pop     bx 
      81 004A  58			                            pop     ax 
      82 004B  5E			                            pop     si 
      83 004C  C3			                            ret 
      84 004D				DIV_LONG        ENDP 
      85				 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 08:52:48
                                                             Page     1-3


      86 004D				PRINT_NUM       PROC                   
					     ;print ax 
      87 004D  50			                            push    ax 
      88 004E  53			                            push    bx 
      89 004F  51			                            push    cx 
      90 0050  52			                            push    dx 
      91				 
      92 0051  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
      93 0054  B9 0000			                            mov     cx,
					0h 
      94				                             
      95 0057				                            divLoop:   
					  
      96 0057  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
      97 0059  F7 F3			                                       
					 div     bx 
      98 005B  52			                                       
					 push    dx          ;save remainder 
      99 005C  41			                                       
					 inc     cx          ;count looped numb
					er 
     100 005D  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
     101 005F  75 F6			                                       
					 jnz     divLoop 
     102				 
     103 0061  B4 02			                            mov     ah,
					02h 
     104				 
     105 0063				                            printLoop: 
					  
     106 0063  5A			                                       
					 pop     dx          ;get remainder 
     107 0064  80 C2 30			                                       
					 add     dl,"0" 
     108 0067  CD 21			                                       
					 int     21h         ;print 
     109 0069  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
     110				 
     111 006B  5A			                            pop    dx 
     112 006C  59			                            pop    cx 
     113 006D  5B			                            pop    bx 
     114 006E  58			                            pop    ax 
     115				 
     116 006F  C3			                            ret 
     117 0070				PRINT_NUM       ENDP 
     118				 
     119 0070				PRINT_CHAR      PROC                   
					                     ;print cjaracter o
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 08:52:48
                                                             Page     1-4


					f value in dl 
     120 0070  50			                            push    ax 
     121 0071  B4 02			                            mov     ah,
					02h 
     122 0073  CD 21			                            int     21h
					 
     123 0075  58			                            pop     ax 
     124 0076  C3			                            ret 
     125 0077				PRINT_CHAR      ENDP 
     126				 
     127 0077				NEWLINE         PROC 
     128 0077  52			                            push    dx 
     129 0078  B2 0A			                            mov     dl,
					0Ah 
     130 007A  E8 0070 R		                            call PRINT_
					CHAR 
     131 007D  5A			                            pop     dx 
     132 007E  C3			                            ret 
     133 007F				NEWLINE         ENDP 
     134				 
     135 007F				END         MAIN 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 08:52:48
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0009	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	007F	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

DIVLOOP  . . . . . . . . . . . .  	L NEAR	0057	_TEXT
DIV_LONG . . . . . . . . . . . .  	N PROC	0022	_TEXT	Length = 002B
DIV_LONG_LOOP  . . . . . . . . .  	L NEAR	002E	_TEXT

LONG1  . . . . . . . . . . . . .  	L WORD	0000	_DATA

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 0022

NEWLINE  . . . . . . . . . . . .  	N PROC	0077	_TEXT	Length = 0008

PRINTLOOP  . . . . . . . . . . .  	L NEAR	0063	_TEXT
PRINT_CHAR . . . . . . . . . . .  	N PROC	0070	_TEXT	Length = 0007
PRINT_LONG_LOOP  . . . . . . . .  	L NEAR	0010	_TEXT
PRINT_NUM  . . . . . . . . . . .  	N PROC	004D	_TEXT	Length = 0023

RESULT . . . . . . . . . . . . .  	L WORD	0004	_DATA	Length = 0002

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  32bit		


    132 Source  Lines
    132 Total   Lines
     25 Symbols

  50372 + 449788 Bytes symbol space free

      1 Warning Errors
      0 Severe  Errors
