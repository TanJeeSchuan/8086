Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:35:18
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  45 6E 74 65 72 20 65	str1    DB      "Enter encrypted word: 
					$" 
       6       6E 63 72 79 70 74 65	
       7       64 20 77 6F 72 64 3A	
       8       20 24			
       9 0017  45 6E 74 65 72 20 64	str2    DB      "Enter decryption key (
					1-9): $" 
      10       65 63 72 79 70 74 69	
      11       6F 6E 20 6B 65 79 20	
      12       28 31 2D 39 29 3A 20	
      13       24			
      14 0034  54 68 65 20 64 65 63	str3    DB      "The decrypted word is 
					$" 
      15       72 79 70 74 65 64 20	
      16       77 6F 72 64 20 69 73	
      17       20 24			
      18				 
      19 004B  0014[			secretWord DB   20 DUP("$") 
      20	   24			
      21			 ]	
      22				
      23				 
      24 005F  ??			key     DB      ? 
      25				 
      26 0060  0014[			decryptedWord   DB      20 DUP("$") 
      27	   24			
      28			 ]	
      29				
      30				 
      31 0074  14			buffer  DB  20 
      32 0075  ??			        DB  ? 
      33 0076  0014[			        DB  20 DUP("$") 
      34	   24			
      35			 ]	
      36				
      37				 
      38 0000				.code 
      39 0000				main proc 
      40				 
      41 0000  B8 ---- R		mov ax,@data 
      42 0003  8E D8			mov ds,ax 
      43 0005  B8 0000			mov ax,0h 
      44				 
      45				; start 
      46 0008  E8 0092 R		call    NEWLINE 
      47				 
      48 000B  8D 16 0000 R		lea     dx,str1 
      49 000F  E8 0061 R		call    PRINT_STR 
      50				 
      51 0012  8D 16 0074 R		lea     dx,buffer 
Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:35:18
                                                             Page     1-2


      52 0016  B4 0A			mov     ah,0Ah 
      53 0018  CD 21			int     21h 
      54				 
      55 001A  E8 0092 R		call    NEWLINE 
      56				 
      57 001D  8D 16 0017 R		lea     dx,str2 
      58 0021  E8 0061 R		call    PRINT_STR 
      59				 
      60 0024  B4 01			mov     ah,01h 
      61 0026  CD 21			int     21h 
      62 0028  2C 30			sub     al,48d 
      63 002A  A2 005F R		mov     [key], al 
      64				 
      65 002D  8D 36 0076 R		lea     si,buffer+2 
      66 0031  8D 3E 0060 R		lea     di,decryptedWord 
      67 0035  8A 0E 0075 R		mov     cl,[buffer+1] 
      68 0039				decryptionLoop: 
      69 0039  8A 04			        mov     al,[si] 
      70				         
      71 003B  3C 24			        cmp     al,"$" 
      72 003D  74 0A			        je      decryptionLoopExit 
      73				 
      74 003F  2A 06 005F R		        sub     al,[key] 
      75				 
      76 0043  88 05			        mov     [di],al 
      77				 
      78 0045  46			        inc     si 
      79 0046  47			        inc     di 
      80 0047  E2 F0			        loop    decryptionLoop 
      81 0049				decryptionLoopExit: 
      82				 
      83 0049  E8 0092 R		call    NEWLINE 
      84				 
      85 004C  8D 16 0034 R		lea     dx,str3 
      86 0050  E8 0061 R		call    PRINT_STR 
      87				 
      88 0053  8D 16 0060 R		lea     dx,decryptedWord 
      89 0057  E8 0061 R		call    PRINT_STR 
      90				 
      91 005A  E8 0092 R		call    NEWLINE 
      92				 
      93				;end 
      94				 
      95 005D  B4 4C			mov ah,4ch 
      96 005F  CD 21			int 21h 
      97				 
      98 0061				main endp 
      99				 
     100 0061				PRINT_STR       PROC 
     101 0061  50			                        push    ax 
     102 0062  B4 09			                        mov     ah,09h 
     103 0064  CD 21			                        int     21h 
     104 0066  58			                        pop    ax 
     105 0067  C3			                        ret 
Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:35:18
                                                             Page     1-3


     106 0068				PRINT_STR       ENDP 
     107				 
     108 0068				PRINT_NUM       PROC                   
					     ;print ax 
     109 0068  50			                            push    ax 
     110 0069  53			                            push    bx 
     111 006A  51			                            push    cx 
     112 006B  52			                            push    dx 
     113				 
     114 006C  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
     115 006F  B9 0000			                            mov     cx,
					0h 
     116				                             
     117 0072				                            divLoop:   
					  
     118 0072  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
     119 0074  F7 F3			                                       
					 div     bx 
     120 0076  52			                                       
					 push    dx          ;save remainder 
     121 0077  41			                                       
					 inc     cx          ;count looped numb
					er 
     122 0078  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
     123 007A  75 F6			                                       
					 jnz     divLoop 
     124				 
     125 007C  B4 02			                            mov     ah,
					02h 
     126				 
     127 007E				                            printLoop: 
					  
     128 007E  5A			                                       
					 pop     dx          ;get remainder 
     129 007F  80 C2 30			                                       
					 add     dl,"0" 
     130 0082  CD 21			                                       
					 int     21h         ;print 
     131 0084  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
     132				 
     133 0086  5A			                            pop    dx 
     134 0087  59			                            pop    cx 
     135 0088  5B			                            pop    bx 
     136 0089  58			                            pop    ax 
     137				 
     138 008A  C3			                            ret 
     139 008B				PRINT_NUM       ENDP 
     140				 
Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:35:18
                                                             Page     1-4


     141 008B				PRINT_CHAR      PROC                   
					                     ;print cjaracter o
					f value in dl 
     142 008B  50			                            push    ax 
     143 008C  B4 02			                            mov     ah,
					02h 
     144 008E  CD 21			                            int     21h
					 
     145 0090  58			                            pop     ax 
     146 0091  C3			                            ret 
     147 0092				PRINT_CHAR      ENDP 
     148				 
     149 0092				NEWLINE         PROC 
     150 0092  52			                            push    dx 
     151 0093  B2 0A			                            mov     dl,
					0Ah 
     152 0095  E8 008B R		                            call PRINT_
					CHAR 
     153 0098  5A			                            pop     dx 
     154 0099  C3			                            ret 
     155 009A				NEWLINE         ENDP 
     156				 
     157 009A				end main 
Microsoft (R) Macro Assembler Version 5.00                  9/2/23 13:35:18
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	008A	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	009A	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

BUFFER . . . . . . . . . . . . .  	L BYTE	0074	_DATA

DECRYPTEDWORD  . . . . . . . . .  	L BYTE	0060	_DATA	Length = 0014
DECRYPTIONLOOP . . . . . . . . .  	L NEAR	0039	_TEXT
DECRYPTIONLOOPEXIT . . . . . . .  	L NEAR	0049	_TEXT
DIVLOOP  . . . . . . . . . . . .  	L NEAR	0072	_TEXT

KEY  . . . . . . . . . . . . . .  	L BYTE	005F	_DATA

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 0061

NEWLINE  . . . . . . . . . . . .  	N PROC	0092	_TEXT	Length = 0008

PRINTLOOP  . . . . . . . . . . .  	L NEAR	007E	_TEXT
PRINT_CHAR . . . . . . . . . . .  	N PROC	008B	_TEXT	Length = 0007
PRINT_NUM  . . . . . . . . . . .  	N PROC	0068	_TEXT	Length = 0023
PRINT_STR  . . . . . . . . . . .  	N PROC	0061	_TEXT	Length = 0007

SECRETWORD . . . . . . . . . . .  	L BYTE	004B	_DATA	Length = 0014
STR1 . . . . . . . . . . . . . .  	L BYTE	0000	_DATA
STR2 . . . . . . . . . . . . . .  	L BYTE	0017	_DATA
STR3 . . . . . . . . . . . . . .  	L BYTE	0034	_DATA

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P5Q3		


    138 Source  Lines
    138 Total   Lines
     30 Symbols

  50384 + 466160 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
