Microsoft (R) Macro Assembler Version 5.00                  8/10/23 11:03:24
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  0033			num1    DW  0051d           ;51.5278d  
       6 0002  2318			        DW  8984d 
       7				 
       8 0004  002D			num2    DW  0045d           ;45.8984d 
       9 0006  149E			        DW  5278d            
      10				 
      11 0008  ????			Rnum    DW  ? 
      12 000A  ????			        DW  ? 
      13				 
      14 = 000A				newline EQU 10 
      15 = 002E				decimal EQU 46d 
      16				 
      17 0000				.code 
      18 0000				main proc 
      19				 
      20 0000  B8 ---- R		mov ax,@data 
      21 0003  8E D8			mov ds,ax 
      22 0005  B8 4C00			mov ax,4c00h 
      23				 
      24				; start 
      25				 
      26 0008  E8 00CC R		call print_n 
      27				 
      28 000B  8D 36 0000 R		lea si,num1 
      29 000F  E8 008D R		call print_dec 
      30				 
      31 0012  E8 00CC R		call print_n 
      32 0015  E8 00CC R		call print_n 
      33				 
      34 0018  8D 36 0004 R		lea si,num2 
      35 001C  E8 008D R		call print_dec 
      36				 
      37 001F  E8 00CC R		call print_n 
      38 0022  E8 00CC R		call print_n 
      39				 
      40				;load addresses 
      41 0025  8D 36 0000 R		lea si,num1 
      42 0029  8D 3E 0004 R		lea di,num2 
      43				 
      44				; call dec_add 
      45 002D  E8 006A R		call dec_sub 
      46				 
      47				 
      48 0030  8D 36 0000 R		lea si,num1 
      49 0034  E8 008D R		call print_dec 
      50				 
      51				 
      52				;end 
      53				 
      54 0037  B4 4C			mov ah,4ch 
Microsoft (R) Macro Assembler Version 5.00                  8/10/23 11:03:24
                                                             Page     1-2


      55 0039  CD 21			int 21h 
      56				 
      57 003B				endProgram: 
      58 003B  B2 54			mov dl,"T" 
      59 003D  E8 00C5 R		call print_char 
      60 0040  B4 4C			mov ah,4ch 
      61 0042  CD 21			int 21h 
      62				 
      63 0044				dec_add   :                            
					             ;performs decimal addition
					 from si and di, modifies value in si 
      64				 
      65				 
      66				                        ;load mantissa 
      67 0044  8B 44 02			                        mov ax, [si + 2
					]                  ;‰∏Ä‰∏™word 2 byteÔº
					å+2 Êù•ÊãøÁ¨¨‰∫å‰∏™word 
      68 0047  8B 5D 02			                        mov bx, [di + 2
					] 
      69				 
      70 004A  03 C3			                        add ax,bx      
					                     ;add mantissa 
      71				 
      72 004C  3D 2710			                        cmp ax,2710h   
					                     ;check if mantissa
					 exceeds 10000 
      73 004F  73 03			                        jae over_10000 
					                     ;if mantissa >= 10
					000 
      74				 
      75 0051  EB 05 90			                        jmp no_overflow
					                     ;if not exceed 100
					00 jump over over_10000: function 
      76				 
      77 0054				                        over_10000: 
      78 0054  2D 2710			                        sub ax,2710h   
					                     ;subtract 10000 fr
					om mantissa 
      79 0057  F9			                        STC            
					                     ;set carry flag fo
					r whole number addition 
      80				 
      81 0058				                        no_overflow: 
      82 0058  B9 0000			                        mov cx,0000h   
					                     ; 
      83 005B  89 4C 02			                        mov [si + 2],cx
					                     ;set [si + 2] to z
					ero 
      84				 
      85 005E  89 44 02			                        mov [si + 2],ax
					                   ;load calculated man
					tissa 
      86				 
      87				                        ;load whole num
Microsoft (R) Macro Assembler Version 5.00                  8/10/23 11:03:24
                                                             Page     1-3


					ber 
      88 0061  8B 04			                        mov ax, [si] 
      89 0063  8B 1D			                        mov bx, [di] 
      90				 
      91 0065  13 C3			                        adc ax,bx      
					                     ;add with carry 
      92 0067  89 04			                        mov [si],ax    
					                   ;load into si 
      93				 
      94 0069  C3			                        ret 
      95				 
      96 006A				dec_sub   : 
      97 006A  8B 44 02			                        mov ax,[si + 2]
					                                 ;load 
					mantissa values in address 
      98 006D  8B 5D 02			                        mov bx,[di + 2]
					 
      99				 
     100 0070  2B C3			                        sub ax,bx      
					                                 ;subtr
					act mantissa 
     101				 
     102 0072  72 03			                        jc sub_overflow
					                                 ;if ca
					rry flag set (ÊúâËøõ‰Ωç) (eng???) jump 
					to sub_overflow
     103				 
     104 0074  EB 0B 90			                        jmp sub_no_over
					flow 
     105 0077				                        sub_overflow: 
     106 0077  F7 D8			                                neg ax 
					                                 ;negat
					e ax, reverse two's complement 
     107 0079  B9 2710			                                mov cx,
					10000d                            
     108 007C  2B C8			                                sub cx,
					ax                               ;10000
					 subtract ax, to find the value of the 
					ax in the limit
     109 007E  8B C1			                                mov ax,
					cx 
     110 0080  F9			                                STC    
					                                 ;set c
					arry flag for whole number subtraction 
     111				 
     112 0081				                        sub_no_overflow
					: 
     113 0081  89 44 02			                        mov [si+2],ax  
					                                 ;load 
					mantisssa result in ax to si mantissa p
					art 
     114				 
     115 0084  8B 04			                        mov ax,[si]    
					                                 ;load 
Microsoft (R) Macro Assembler Version 5.00                  8/10/23 11:03:24
                                                             Page     1-4


					whole numbers in memory to addresses 
     116 0086  8B 1D			                        mov bx,[di] 
     117				 
     118 0088  1B C3			                        sbb ax,bx      
					                                 ;subtr
					act with carry 
     119				 
     120 008A  89 04			                        mov [si],ax    
					                                 ;load 
					whole number result in ax to si whole n
					umber part 
     121				 
     122 008C  C3			                        ret 
     123				 
     124 008D				print_dec :                            
					             ;print decimal from si 
     125 008D  B8 0000			                            mov     ax,
					 0000h 
     126 0090  8B 04			                            mov     ax,
					 [si] 
     127 0092  E8 00D4 R		                            call    pri
					nt_num_leading_zero 
     128				 
     129 0095  B2 2E			                            mov     dl,
					 decimal 
     130 0097  E8 00C5 R		                            call    pri
					nt_char 
     131				 
     132 009A  8B 44 02			                            mov     ax,
					 [si + 2] 
     133 009D  E8 00D4 R		                            call    pri
					nt_num_leading_zero 
     134 00A0  C3			            ret 
     135				 
     136 00A1				print_num :                            
					             ;print from ax  
     137 00A1  50			                            push    ax 
					            ;preserves original registe
					r values 
     138 00A2  53			                            push    bx 
     139 00A3  51			                            push    cx 
     140 00A4  52			                            push    dx 
     141 00A5  BB 000A			                            mov     bx,
					000Ah         
     142 00A8  B9 0000			                            mov     cx,
					0000h 
     143 00AB				            Divloop: 
     144 00AB  BA 0000			                            mov     dx,
					0000h 
     145 00AE  F7 F3			                            div     bx 
     146 00B0  52			                            push    dx 
     147 00B1  41			                            inc     cx 
     148 00B2  85 C0			                            test    ax,
					ax 
Microsoft (R) Macro Assembler Version 5.00                  8/10/23 11:03:24
                                                             Page     1-5


     149 00B4  75 F5			                            jnz     Div
					loop 
     150 00B6  B4 02			            mov ah,02h                 
					         ;setup for print 
     151 00B8  5A			            IntPrint:       pop     dx 
     152 00B9  83 C2 30			                            add     dx,
					48d 
     153 00BC  CD 21			                            int     21h
					 
     154 00BE  E2 F8			                            loop    Int
					Print 
     155				 
     156 00C0  5A			            pop dx                     
					         ;restore original ax value 
     157 00C1  59			            pop cx 
     158 00C2  5B			            pop bx 
     159 00C3  58			            pop ax 
     160 00C4  C3			            ret 
     161				 
     162 00C5				print_char:                            
					             ;print from dl 
     163 00C5  50			            push ax                    
					          
     164 00C6  B4 02			            mov ah,02h 
     165 00C8  CD 21			            int 21h 
     166 00CA  58			            pop ax 
     167 00CB  C3			            ret 
     168				 
     169 00CC				print_n   :                            
					             ;print newline 
     170 00CC  52			            push dx 
     171 00CD  B2 0A			            mov dl, newline 
     172 00CF  E8 00C5 R		            call print_char 
     173 00D2  5A			            pop dx 
     174 00D3  C3			            ret 
     175				 
     176 00D4				print_num_leading_zero :               
					             ;print from ax with 4 plac
					es leading zeros. (eg. if ax=0021d, fun
					ction will prin
     177 00D4  50			                            push    ax 
					             ;preserves original regist
					er values 
     178 00D5  53			                            push    bx 
     179 00D6  51			                            push    cx 
     180 00D7  52			                            push    dx 
     181 00D8  BB 000A			                            mov     bx,
					000Ah         
     182 00DB  B9 0000			                            mov     cx,
					0000h 
     183 00DE				            Divloop_leading_zero: 
     184 00DE  BA 0000			                            mov     dx,
					0000h 
     185 00E1  F7 F3			                            div     bx 
Microsoft (R) Macro Assembler Version 5.00                  8/10/23 11:03:24
                                                             Page     1-6


     186 00E3  52			                            push    dx 
     187 00E4  41			                            inc     cx 
     188 00E5  85 C0			                            test    ax,
					ax 
     189 00E7  75 F5			                            jnz     Div
					loop_leading_zero 
     190				             
     191 00E9				            startCheck_leading_zero: 
     192 00E9  83 F9 04			                            cmp cx,0004
					h                        ;if cx ]is bel
					ow  
     193 00EC  7C 0F			                            jl push_zer
					o_leading_zero 
     194				 
     195 00EE  B4 02			            mov ah,02h                 
					         ;setup for print 
     196 00F0				            IntPrint_leading_zero:     
					   
     197 00F0  5A			                            pop     dx 
     198 00F1  83 C2 30			                            add     dx,
					"0" 
     199 00F4  CD 21			                            int     21h
					 
     200 00F6  E2 C0			                            loop    Int
					Print 
     201				 
     202 00F8  5A			            pop dx                     
					         ;restore original ax value 
     203 00F9  59			            pop cx 
     204 00FA  5B			            pop bx 
     205 00FB  58			            pop ax 
     206 00FC  C3			            ret 
     207				 
     208 00FD				            push_zero_leading_zero: 
     209 00FD  B8 0000			                            mov ax,0h 
     210 0100  50			                            push ax 
     211 0101  41			                            inc cx 
     212				 
     213				                            ; mov dl,"T
					" 
     214				                            ; call prin
					t_char 
     215 0102  EB E5			                            jmp startCh
					eck_leading_zero 
     216				 
     217				 
     218				 
     219 0104				main endp 
     220 0104				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/10/23 11:03:24
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	000C	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	0104	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

DECIMAL  . . . . . . . . . . . .  	NUMBER	002E	
DEC_ADD  . . . . . . . . . . . .  	L NEAR	0044	_TEXT
DEC_SUB  . . . . . . . . . . . .  	L NEAR	006A	_TEXT
DIVLOOP  . . . . . . . . . . . .  	L NEAR	00AB	_TEXT
DIVLOOP_LEADING_ZERO . . . . . .  	L NEAR	00DE	_TEXT

ENDPROGRAM . . . . . . . . . . .  	L NEAR	003B	_TEXT

INTPRINT . . . . . . . . . . . .  	L NEAR	00B8	_TEXT
INTPRINT_LEADING_ZERO  . . . . .  	L NEAR	00F0	_TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 0104

NEWLINE  . . . . . . . . . . . .  	NUMBER	000A	
NO_OVERFLOW  . . . . . . . . . .  	L NEAR	0058	_TEXT
NUM1 . . . . . . . . . . . . . .  	L WORD	0000	_DATA
NUM2 . . . . . . . . . . . . . .  	L WORD	0004	_DATA

OVER_10000 . . . . . . . . . . .  	L NEAR	0054	_TEXT

PRINT_CHAR . . . . . . . . . . .  	L NEAR	00C5	_TEXT
PRINT_DEC  . . . . . . . . . . .  	L NEAR	008D	_TEXT
PRINT_N  . . . . . . . . . . . .  	L NEAR	00CC	_TEXT
PRINT_NUM  . . . . . . . . . . .  	L NEAR	00A1	_TEXT
PRINT_NUM_LEADING_ZERO . . . . .  	L NEAR	00D4	_TEXT
PUSH_ZERO_LEADING_ZERO . . . . .  	L NEAR	00FD	_TEXT

RNUM . . . . . . . . . . . . . .  	L WORD	0008	_DATA

STARTCHECK_LEADING_ZERO  . . . .  	L NEAR	00E9	_TEXT
SUB_NO_OVERFLOW  . . . . . . . .  	L NEAR	0081	_TEXT
SUB_OVERFLOW . . . . . . . . . .  	L NEAR	0077	_TEXT

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  ALU		

Microsoft (R) Macro Assembler Version 5.00                  8/10/23 11:03:24
                                                             Symbols-2



    220 Source  Lines
    220 Total   Lines
     38 Symbols

  50404 + 449756 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
