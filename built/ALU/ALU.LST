Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  0033			num1    DW  0051d           ;51.5278d  
					   whole number    ;decimal number Ë¶Åa
					llocate ‰∏§‰∏™ WORD Êù•store 
       6 0002  05DC			        DW  1500d           ;          
					   mantissa   
       7				 
       8 0004  0000			num2    DW  0000d           ;45.8984d 
       9 0006  01F4			        DW  0500d            
      10				 
      11 = 000A				newline EQU 10 
      12 = 002E				decimal EQU 46d 
      13				 
      14 0000				.code 
      15 0000				main proc 
      16				 
      17 0000  B8 ---- R		mov ax,@data 
      18 0003  8E D8			mov ds,ax 
      19 0005  B8 4C00			mov ax,4c00h 
      20				 
      21				; start 
      22				 
      23 0008  E8 0107 R		call print_n            ;print newline 
      24				 
      25 000B  8D 36 0000 R		lea si,num1             ;load address o
					f num1 into si 
      26 000F  E8 00C8 R		call print_dec 
      27				 
      28 0012  E8 0107 R		call print_n 
      29 0015  E8 0107 R		call print_n 
      30				 
      31 0018  8D 36 0004 R		lea si,num2 
      32 001C  E8 00C8 R		call print_dec 
      33				 
      34 001F  E8 0107 R		call print_n 
      35 0022  E8 0107 R		call print_n 
      36				 
      37				;load addresses 
      38 0025  8D 36 0000 R		lea si,num1 
      39 0029  8D 3E 0004 R		lea di,num2 
      40				 
      41 002D  E8 0044 R		call dec_add          ;add function 
      42				; call dec_sub            ;sub function
					 
      43				; call dec_mul 
      44				 
      45				 
      46 0030  8D 36 0000 R		lea si,num1 
      47 0034  E8 00C8 R		call print_dec 
      48				 
      49				;end 
Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Page     1-2


      50				 
      51 0037  B4 4C			mov ah,4ch 
      52 0039  CD 21			int 21h 
      53				 
      54 003B				endProgram: 
      55 003B  B2 54			mov dl,"T" 
      56 003D  E8 0100 R		call print_char 
      57 0040  B4 4C			mov ah,4ch 
      58 0042  CD 21			int 21h 
      59				 
      60 0044				dec_add   :                            
					             ;performs decimal addition
					 from si and di, modifies value in si 
      61				                        ;load mantissa 
      62 0044  8B 44 02			                        mov ax, [si + 2
					]                  ;‰∏Ä‰∏™word 2 byteÔº
					å+2 Êù•ÊãøÁ¨¨‰∫å‰∏™word 
      63 0047  8B 5D 02			                        mov bx, [di + 2
					] 
      64				 
      65 004A  03 C3			                        add ax,bx      
					                     ;add mantissa 
      66				 
      67 004C  3D 2710			                        cmp ax,2710h   
					                     ;check if mantissa
					 exceeds 10000 
      68 004F  73 03			                        jae over_10000 
					                     ;if mantissa >= 10
					000 
      69				 
      70 0051  EB 05 90			                        jmp no_overflow
					                     ;if not exceed 100
					00 jump over over_10000: function 
      71				 
      72 0054				                        over_10000: 
      73 0054  2D 2710			                        sub ax,2710h   
					                     ;subtract 10000 fr
					om mantissa 
      74 0057  F9			                        STC            
					                     ;set carry flag fo
					r whole number addition 
      75				 
      76 0058				                        no_overflow: 
      77 0058  B9 0000			                        mov cx,0000h   
					                     ; 
      78 005B  89 4C 02			                        mov [si + 2],cx
					                     ;set [si + 2] to z
					ero 
      79				 
      80 005E  89 44 02			                        mov [si + 2],ax
					                   ;load calculated man
					tissa 
      81				 
      82				                        ;load whole num
Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Page     1-3


					ber 
      83 0061  8B 04			                        mov ax, [si] 
      84 0063  8B 1D			                        mov bx, [di] 
      85				 
      86 0065  13 C3			                        adc ax,bx      
					                     ;add with carry 
      87 0067  89 04			                        mov [si],ax    
					                   ;load into si 
      88				 
      89 0069  C3			                        ret 
      90				 
      91 006A				dec_sub   :                            
					             ;performs decimal addition
					 from si and di, modifies value in si 
      92 006A  8B 44 02			                        mov ax,[si + 2]
					                                 ;load 
					mantissa values in address 
      93 006D  8B 5D 02			                        mov bx,[di + 2]
					 
      94				 
      95 0070  2B C3			                        sub ax,bx      
					                                 ;subtr
					act mantissa 
      96				 
      97 0072  72 03			                        jc sub_overflow
					                                 ;if ca
					rry flag set (ÊúâËøõ‰Ωç) (eng???) jump 
					to sub_overflow
      98				 
      99 0074  EB 0B 90			                        jmp sub_no_over
					flow 
     100 0077				                        sub_overflow: 
     101 0077  F7 D8			                                neg ax 
					                                 ;negat
					e ax, reverse two's complement 
     102 0079  B9 2710			                                mov cx,
					10000d                           ;prepa
					re for substraction 
     103 007C  2B C8			                                sub cx,
					ax                               ;10000
					 subtract ax, to find the value of the 
					ax in the limit
     104 007E  8B C1			                                mov ax,
					cx 
     105 0080  F9			                                STC    
					                                 ;set c
					arry flag for whole number subtraction 
     106				 
     107 0081				                        sub_no_overflow
					: 
     108 0081  89 44 02			                        mov [si+2],ax  
					                                 ;load 
					mantisssa result in ax to si mantissa p
					art 
Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Page     1-4


     109				 
     110 0084  8B 04			                        mov ax,[si]    
					                                 ;load 
					whole numbers in memory to addresses 
     111 0086  8B 1D			                        mov bx,[di] 
     112				 
     113 0088  1B C3			                        sbb ax,bx      
					                                 ;subtr
					act with carry 
     114				 
     115 008A  89 04			                        mov [si],ax    
					                                 ;load 
					whole number result in ax to si whole n
					umber part 
     116				 
     117 008C  C3			                        ret 
     118				 
     119 008D				dec_mul   :                            
					             ;performs decimal multipli
					cation 
     120 008D  8B 44 02			                            mov     ax,
					[si + 2]                          ;load
					 mantissa 
     121 0090  8B 5D 02			                            mov     bx,
					[di + 2] 
     122 0093  F7 E3			                            mul     bx 
     123				                              
     124 0095  52			                            push    dx 
     125 0096  50			                            push    ax 
     126				 
     127 0097  8B 04			                            mov     ax,
					[si] 
     128 0099  F7 E3			                            mul     bx 
     129				 
     130 009B  59			                            pop     cx 
     131 009C  03 D1			                            add     dx,
					cx 
     132				 
     133 009E  50			                            push    ax 
     134 009F  52			                            push    dx 
     135				 
     136 00A0  8B 44 02			                            mov     ax,
					[si + 2] 
     137 00A3  8B 1D			                            mov     bx,
					[di] 
     138 00A5  F7 E3			                            mul     bx 
     139				 
     140 00A7  59			                            pop     cx 
     141 00A8  03 D1			                            add     dx,
					cx 
     142				 
     143 00AA  59			                            pop     cx 
     144 00AB  13 C1			                            adc     ax,
					cx 
Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Page     1-5


     145				 
     146 00AD  52			                            push    dx 
     147 00AE  50			                            push    ax 
     148				 
     149 00AF  8B 04			                            mov     ax,
					[si] 
     150 00B1  F7 E3			                            mul     bx 
     151				 
     152 00B3  59			                            pop     cx 
     153 00B4  03 D1			                            add     dx,
					cx 
     154				 
     155 00B6  52			                            push    dx 
     156 00B7  50			                            push    ax 
     157				 
     158 00B8  58			                            pop     ax 
     159 00B9  5B			                            pop     bx 
     160 00BA  59			                            pop     cx 
     161 00BB  5A			                            pop     dx 
     162				 
     163 00BC  89 05			                            mov     [di
					],ax 
     164 00BE  89 5D 02			                            mov     [di
					+2],bx 
     165 00C1  89 4D 04			                            mov     [di
					+4],cx 
     166 00C4  89 55 06			                            mov     [di
					+6],dx 
     167				                             
     168 00C7  C3			                            ret 
     169				 
     170 00C8				print_dec :                            
					             ;print decimal from si 
     171 00C8  B8 0000			                            mov     ax,
					 0000h                   ;clean ax regi
					ster 
     172 00CB  8B 04			                            mov     ax,
					 [si]                    ;load whole nu
					mber 
     173 00CD  E8 010F R		                            call    pri
					nt_num_leading_zero      ;print whole n
					umber 
     174				 
     175 00D0  B2 2E			                            mov     dl,
					 decimal                 ;print decimal
					 character 
     176 00D2  E8 0100 R		                            call    pri
					nt_char 
     177				 
     178 00D5  8B 44 02			                            mov     ax,
					 [si + 2]                ;load mantissa
					 
     179 00D8  E8 010F R		                            call    pri
					nt_num_leading_zero      ;print mantiss
Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Page     1-6


					a 
     180 00DB  C3			            ret 
     181				 
     182 00DC				print_num :                            
					             ;print from ax            
					  Ëøô‰∏™Ê≤°ÊúâÁî®Âà∞ 
     183 00DC  50			                            push    ax 
					            ;preserves original registe
					r values 
     184 00DD  53			                            push    bx 
     185 00DE  51			                            push    cx 
     186 00DF  52			                            push    dx 
     187 00E0  BB 000A			                            mov     bx,
					000Ah         
     188 00E3  B9 0000			                            mov     cx,
					0000h 
     189 00E6				            Divloop: 
     190 00E6  BA 0000			                            mov     dx,
					0000h 
     191 00E9  F7 F3			                            div     bx 
     192 00EB  52			                            push    dx 
     193 00EC  41			                            inc     cx 
     194 00ED  85 C0			                            test    ax,
					ax 
     195 00EF  75 F5			                            jnz     Div
					loop 
     196 00F1  B4 02			            mov ah,02h                 
					         ;setup for print 
     197 00F3  5A			            IntPrint:       pop     dx 
     198 00F4  83 C2 30			                            add     dx,
					48d 
     199 00F7  CD 21			                            int     21h
					 
     200 00F9  E2 F8			                            loop    Int
					Print 
     201				 
     202 00FB  5A			            pop dx                     
					         ;restore original ax value 
     203 00FC  59			            pop cx 
     204 00FD  5B			            pop bx 
     205 00FE  58			            pop ax 
     206 00FF  C3			            ret 
     207				 
     208 0100				print_char:                            
					             ;print from dl 
     209 0100  50			            push ax                    
					          
     210 0101  B4 02			            mov ah,02h 
     211 0103  CD 21			            int 21h 
     212 0105  58			            pop ax 
     213 0106  C3			            ret 
     214				 
     215 0107				print_n   :                            
					             ;print newline 
Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Page     1-7


     216 0107  52			            push dx 
     217 0108  B2 0A			            mov dl, newline 
     218 010A  E8 0100 R		            call print_char 
     219 010D  5A			            pop dx 
     220 010E  C3			            ret 
     221				 
     222 010F				print_num_leading_zero :               
					             ;print from ax with 4 plac
					es leading zeros. (eg. if ax=0021d, fun
					ction will prin
     223 010F  50			                            push    ax 
					             ;preserves original regist
					er values 
     224 0110  53			                            push    bx 
     225 0111  51			                            push    cx 
     226 0112  52			                            push    dx 
     227 0113  BB 000A			                            mov     bx,
					000Ah         
     228 0116  B9 0000			                            mov     cx,
					0000h 
     229 0119				            Divloop_leading_zero: 
     230 0119  BA 0000			                            mov     dx,
					0000h        ;clean dx 
     231 011C  F7 F3			                            div     bx 
					             ;divide ax by 10 
     232 011E  52			                            push    dx 
					             ;push remainder to stack 
     233 011F  41			                            inc     cx 
					             ;increment cx to record nu
					mber of times loop 
     234 0120  85 C0			                            test    ax,
					ax           ;test the number of ax 
     235 0122  75 F5			                            jnz     Div
					loop_leading_zero        ;if ax is not 
					zero jump to start of loop 
     236				             
     237 0124				            startCheck_leading_zero: 
     238 0124  83 F9 04			                            cmp cx,0004
					h                        ;if cx is belo
					w  
     239 0127  7C 0F			                            jl push_zer
					o_leading_zero           ;if cx is belo
					w 4 jump to function that puts 0 in sta
					ck and incremen
     240				 
     241 0129  B4 02			            mov ah,02h                 
					         ;setup for print 
     242 012B				            IntPrint_leading_zero:     
					         ;print data in stack, number o
					f data is recorded in cx 
     243 012B  5A			                            pop     dx 
     244 012C  83 C2 30			                            add     dx,
					"0" 
     245 012F  CD 21			                            int     21h
Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Page     1-8


					 
     246 0131  E2 C0			                            loop    Int
					Print     
     247				 
     248 0133  5A			            pop dx                     
					         ;restore original register val
					ue 
     249 0134  59			            pop cx 
     250 0135  5B			            pop bx 
     251 0136  58			            pop ax 
     252 0137  C3			            ret 
     253				 
     254 0138				            push_zero_leading_zero: 
     255 0138  B8 0000			                            mov ax,0h  
					                     ;prepare for push 
     256 013B  50			                            push ax    
					                     ;push 0 to stack 
     257 013C  41			                            inc cx     
					                     ;cx++ 
     258 013D  EB E5			                            jmp startCh
					eck_leading_zero     ;jump to leading z
					ero checker 
     259				 
     260				 
     261				 
     262 013F				main endp 
     263 013F				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0008	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	013F	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

DECIMAL  . . . . . . . . . . . .  	NUMBER	002E	
DEC_ADD  . . . . . . . . . . . .  	L NEAR	0044	_TEXT
DEC_MUL  . . . . . . . . . . . .  	L NEAR	008D	_TEXT
DEC_SUB  . . . . . . . . . . . .  	L NEAR	006A	_TEXT
DIVLOOP  . . . . . . . . . . . .  	L NEAR	00E6	_TEXT
DIVLOOP_LEADING_ZERO . . . . . .  	L NEAR	0119	_TEXT

ENDPROGRAM . . . . . . . . . . .  	L NEAR	003B	_TEXT

INTPRINT . . . . . . . . . . . .  	L NEAR	00F3	_TEXT
INTPRINT_LEADING_ZERO  . . . . .  	L NEAR	012B	_TEXT

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 013F

NEWLINE  . . . . . . . . . . . .  	NUMBER	000A	
NO_OVERFLOW  . . . . . . . . . .  	L NEAR	0058	_TEXT
NUM1 . . . . . . . . . . . . . .  	L WORD	0000	_DATA
NUM2 . . . . . . . . . . . . . .  	L WORD	0004	_DATA

OVER_10000 . . . . . . . . . . .  	L NEAR	0054	_TEXT

PRINT_CHAR . . . . . . . . . . .  	L NEAR	0100	_TEXT
PRINT_DEC  . . . . . . . . . . .  	L NEAR	00C8	_TEXT
PRINT_N  . . . . . . . . . . . .  	L NEAR	0107	_TEXT
PRINT_NUM  . . . . . . . . . . .  	L NEAR	00DC	_TEXT
PRINT_NUM_LEADING_ZERO . . . . .  	L NEAR	010F	_TEXT
PUSH_ZERO_LEADING_ZERO . . . . .  	L NEAR	0138	_TEXT

STARTCHECK_LEADING_ZERO  . . . .  	L NEAR	0124	_TEXT
SUB_NO_OVERFLOW  . . . . . . . .  	L NEAR	0081	_TEXT
SUB_OVERFLOW . . . . . . . . . .  	L NEAR	0077	_TEXT

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  ALU		

Microsoft (R) Macro Assembler Version 5.00                  8/11/23 11:34:05
                                                             Symbols-2



    263 Source  Lines
    263 Total   Lines
     38 Symbols

  50404 + 449756 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
