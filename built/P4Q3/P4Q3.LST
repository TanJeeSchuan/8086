Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:15:11
                                                             Page     1-1


       1				.model small 
       2 0064				.stack 100 
       3 0000				.data 
       4				 
       5 0000  49 6E 20 45 6E 67 6C	str1    DB "In English: $" 
       6       69 73 68 3A 20 24	
       7 000D  49 6E 20 45 67 67 6E	str2    DB "In Eggnglish: $" 
       8       67 6C 69 73 68 3A 20	
       9       24			
      10				 
      11 001C  59 6F 75 20 6C 69 6B	input   DB "You like english and espres
					so, excellent emotional ! $" 
      12       65 20 65 6E 67 6C 69	
      13       73 68 20 61 6E 64 20	
      14       65 73 70 72 65 73 73	
      15       6F 2C 20 65 78 63 65	
      16       6C 6C 65 6E 74 20 65	
      17       6D 6F 74 69 6F 6E 61	
      18       6C 20 21 20 24		
      19 0052  0064[			output  DB 100 DUP("$") 
      20	   24			
      21			 ]	
      22				
      23 00B6  24			        DB "$" 
      24				 
      25 0000				.code 
      26 0000				main proc 
      27				 
      28 0000  B8 ---- R		mov ax,@data 
      29 0003  8E D8			mov ds,ax 
      30 0005  8E C0			mov es,ax 
      31 0007  B8 0000			mov ax,0h 
      32				 
      33				; start 
      34				 
      35 000A  8D 16 0000 R		lea         dx,str1 
      36 000E  E8 005F R		call        PRINT_STR 
      37				 
      38 0011  8D 16 001C R		lea         dx,input 
      39 0015  E8 005F R		call        PRINT_STR 
      40				 
      41 0018  8D 36 001C R		lea         si,input 
      42 001C  8D 3E 0052 R		lea         di,output 
      43 0020				strLoop: 
      44 0020  8A 04			            mov         al,[si] 
      45				 
      46 0022  3C 24			            cmp         al,"$" 
      47 0024  74 21			            je          strLoopEnd 
      48				 
      49 0026  3C 65			            cmp         al,"e" 
      50 0028  74 05			            je          addEgg? 
      51				 
      52 002A				            noAddEgg: 
      53 002A  88 05			            mov         [di],al 
Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:15:11
                                                             Page     1-2


      54				             
      55 002C  EB 15 90			            jmp         addEggEnd 
      56				 
      57 002F				            addEgg?: 
      58 002F  8A 64 FF			                        mov         ah,
					[si-1] 
      59 0032  80 FC 20			                        cmp         ah,
					" " 
      60 0035  75 F3			                        jne         noA
					ddEgg 
      61				 
      62 0037				            addEgg: 
      63 0037  B4 65			                        mov         ah,
					"e" 
      64 0039  88 25			                        mov         [di
					],ah 
      65 003B  47			                        inc         di 
      66				 
      67 003C  B4 67			                        mov         ah,
					"g" 
      68 003E  88 25			                        mov         [di
					],ah 
      69 0040  47			                        inc         di 
      70 0041  88 25			                        mov         [di
					],ah 
      71 0043				            addEggEnd: 
      72 0043  46			            inc         si 
      73 0044  47			            inc         di 
      74 0045  EB D9			            jmp         strLoop 
      75 0047				strLoopEnd: 
      76				 
      77 0047  E8 0090 R		call        NEWLINE 
      78				 
      79 004A  8D 16 000D R		lea         dx,str2 
      80 004E  E8 005F R		call        PRINT_STR 
      81				 
      82 0051  8D 16 0052 R		lea         dx,output 
      83 0055  E8 005F R		call        PRINT_STR 
      84				 
      85 0058  E8 0090 R		call        NEWLINE 
      86				 
      87				;end 
      88				 
      89 005B  B4 4C			mov ah,4ch 
      90 005D  CD 21			int 21h 
      91				 
      92 005F				main endp 
      93				 
      94 005F				PRINT_STR       PROC 
      95 005F  50			                        push    ax 
      96 0060  B4 09			                        mov     ah,09h 
      97 0062  CD 21			                        int     21h 
      98 0064  58			                        pop    ax 
      99 0065  C3			                        ret 
Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:15:11
                                                             Page     1-3


     100 0066				PRINT_STR       ENDP 
     101				 
     102 0066				PRINT_NUM       PROC                   
					     ;print ax 
     103 0066  50			                            push    ax 
     104 0067  53			                            push    bx 
     105 0068  51			                            push    cx 
     106 0069  52			                            push    dx 
     107				 
     108 006A  BB 000A			                            mov     bx,
					0Ah      ;initalise divisor 
     109 006D  B9 0000			                            mov     cx,
					0h 
     110				                             
     111 0070				                            divLoop:   
					  
     112 0070  33 D2			                                       
					 xor     dx,dx       ;clear remainder 
     113 0072  F7 F3			                                       
					 div     bx 
     114 0074  52			                                       
					 push    dx          ;save remainder 
     115 0075  41			                                       
					 inc     cx          ;count looped numb
					er 
     116 0076  85 C0			                                       
					 test    ax,ax       ;if ax != 0, conti
					nue 
     117 0078  75 F6			                                       
					 jnz     divLoop 
     118				 
     119 007A  B4 02			                            mov     ah,
					02h 
     120				 
     121 007C				                            printLoop: 
					  
     122 007C  5A			                                       
					 pop     dx          ;get remainder 
     123 007D  80 C2 30			                                       
					 add     dl,"0" 
     124 0080  CD 21			                                       
					 int     21h         ;print 
     125 0082  E2 F8			                                       
					 loop    printLoop   ;loop until cx is 
					zero (the number of times divLoop) 
     126				 
     127 0084  58			                            pop    ax 
     128 0085  5B			                            pop    bx 
     129 0086  59			                            pop    cx 
     130 0087  5A			                            pop    dx 
     131				 
     132 0088  C3			                            ret 
     133 0089				PRINT_NUM       ENDP 
     134				 
Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:15:11
                                                             Page     1-4


     135 0089				PRINT_CHAR      PROC                   
					                     ;print cjaracter o
					f value in dl 
     136 0089  50			                            push    ax 
     137 008A  B4 02			                            mov     ah,
					02h 
     138 008C  CD 21			                            int     21h
					 
     139 008E  58			                            pop     ax 
     140 008F  C3			                            ret 
     141 0090				PRINT_CHAR      ENDP 
     142				 
     143 0090				NEWLINE         PROC 
     144 0090  52			                            push    dx 
     145 0091  B2 0A			                            mov     dl,
					0Ah 
     146 0093  E8 0089 R		                            call PRINT_
					CHAR 
     147 0096  5A			                            pop     dx 
     148 0097  C3			                            ret 
     149 0098				NEWLINE         ENDP 
     150				 
     151 0098				end main 
Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:15:11
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	00B7	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	0098	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ADDEGG . . . . . . . . . . . . .  	L NEAR	0037	_TEXT
ADDEGG?  . . . . . . . . . . . .  	L NEAR	002F	_TEXT
ADDEGGEND  . . . . . . . . . . .  	L NEAR	0043	_TEXT

DIVLOOP  . . . . . . . . . . . .  	L NEAR	0070	_TEXT

INPUT  . . . . . . . . . . . . .  	L BYTE	001C	_DATA

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 005F

NEWLINE  . . . . . . . . . . . .  	N PROC	0090	_TEXT	Length = 0008
NOADDEGG . . . . . . . . . . . .  	L NEAR	002A	_TEXT

OUTPUT . . . . . . . . . . . . .  	L BYTE	0052	_DATA	Length = 0064

PRINTLOOP  . . . . . . . . . . .  	L NEAR	007C	_TEXT
PRINT_CHAR . . . . . . . . . . .  	N PROC	0089	_TEXT	Length = 0007
PRINT_NUM  . . . . . . . . . . .  	N PROC	0066	_TEXT	Length = 0023
PRINT_STR  . . . . . . . . . . .  	N PROC	005F	_TEXT	Length = 0007

STR1 . . . . . . . . . . . . . .  	L BYTE	0000	_DATA
STR2 . . . . . . . . . . . . . .  	L BYTE	000D	_DATA
STRLOOP  . . . . . . . . . . . .  	L NEAR	0020	_TEXT
STRLOOPEND . . . . . . . . . . .  	L NEAR	0047	_TEXT

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  P4Q3		

Microsoft (R) Macro Assembler Version 5.00                  8/29/23 18:15:11
                                                             Symbols-2



    138 Source  Lines
    138 Total   Lines
     31 Symbols

  50384 + 466160 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
