Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-1


       1				.MODEL small 
       2 0064				.STACK 100 
       3 0000				.DATA 
       4				 
       5 0000  20			buffer          DB 32 
       6 0001  ??			                DB ? 
       7 0002  0020[			                DB 32 DUP(0) 
       8	   00			
       9			 ]	
      10				
      11 0022  24			                DB "$" 
      12				 
      13 0023  0015[			password        DB 21 DUP("0") 
      14	   30			
      15			 ]	
      16				
      17				 
      18 0038  31 32 33 34 35 41 42	correctPass     DB "12345ABC" 
      19       43			
      20 0040  24			                DB "$" 
      21				 
      22 0041  45 6E 74 65 72 20 50	enterText       DB "Enter Password: $" 
      23       61 73 73 77 6F 72 64	
      24       3A 20 24			
      25				 
      26 0052  49 6E 63 6F 72 72 65	pwIncorrect     DB "Incorrect password!
					 Chances left $" 
      27       63 74 20 70 61 73 73	
      28       77 6F 72 64 21 20 43	
      29       68 61 6E 63 65 73 20	
      30       6C 65 66 74 20 24	
      31 0074  43 6F 72 72 65 63 74	pwCorrect       DB "Correct password! W
					elcome!$" 
      32       20 70 61 73 73 77 6F	
      33       72 64 21 20 57 65 6C	
      34       63 6F 6D 65 21 24	
      35				 
      36 008F  05			loginChances    DB 5 
      37				 
      38 0090  09 09 09 09 41 42 43	logo            DB "		
							ABC$" 
      39       24			
      40				 
      41				;ORDER SYSTEM 
      42 0098  49 74 65 6D 20 49 44	itemHeader      DB "Item ID" 
      43 009F  09			                DB 09h 
      44 00A0  09			                DB 09h 
      45 00A1  50 72 6F 64 75 63 74	                DB "Product Name" 
      46       20 4E 61 6D 65		
      47 00AD  09			                DB 09h 
      48 00AE  50 72 69 63 65		                DB "Price" 
      49 00B3  24			                DB "$" 
      50				 
      51 00B4  01 41 50 50 4C 45 24	item            DB 1, "APPLE$----------
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-2


					---1.20$-----"               
      52       2D 2D 2D 2D 2D 2D 2D	
      53       2D 2D 2D 2D 2D 2D 31	
      54       2E 32 30 24 2D 2D 2D	
      55       2D 2D			
      56				 
      57 00D2  02 42 41 4E 41 4E 41	                DB 2, "BANANA$---------
					---5.50$-----" 
      58       24 2D 2D 2D 2D 2D 2D	
      59       2D 2D 2D 2D 2D 2D 35	
      60       2E 35 30 24 2D 2D 2D	
      61       2D 2D			
      62				 
      63 00F0  03			                DB 3        
      64 00F1  44 55 52 49 41 4E 24	                DB "DURIAN$------------
					"  
      65       2D 2D 2D 2D 2D 2D 2D	
      66       2D 2D 2D 2D 2D		
      67 0104  32 35 2E 37 39 24 2D	                DB "25.79$----" 
      68       2D 2D 2D			
      69				 
      70 010E  04			                DB 4        
      71 010F  52 41 4D 42 55 54 4E	                DB "RAMBUTN$-----------
					" 
      72       24 2D 2D 2D 2D 2D 2D	
      73       2D 2D 2D 2D 2D		
      74 0122  34 2E 30 30 24 2D 2D	                DB "4.00$-----" 
      75       2D 2D 2D			
      76				 
      77 012C  05			                DB 5        
      78 012D  50 45 41 43 48 24 2D	                DB "PEACH$-------------
					"  
      79       2D 2D 2D 2D 2D 2D 2D	
      80       2D 2D 2D 2D 2D		
      81 0140  31 30 2E 30 30 24 2D	                DB "10.00$----"     
      82       2D 2D 2D			
      83				 
      84 014A  06			                DB 6        
      85 014B  50 45 41 52 24 2D 2D	                DB "PEAR$--------------
					"  
      86       2D 2D 2D 2D 2D 2D 2D	
      87       2D 2D 2D 2D 2D		
      88 015E  31 35 2E 30 30 24 2D	                DB "15.00$----" 
      89       2D 2D 2D			
      90				 
      91 0168  24			                DB "$" 
      92				 
      93 0169  53 65 6C 65 63 74 20	itemSelection   DB "Select the item: $"
					 
      94       74 68 65 20 69 74 65	
      95       6D 3A 20 24		
      96				 
      97 017B  57 72 6F 6E 67 20 69	wrongItemSelection DB "Wrong item selec
					tion!" 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-3


      98       74 65 6D 20 73 65 6C	
      99       65 63 74 69 6F 6E 21	
     100				 
     101				;;offsets for item "array" 
     102 = 001E				itemSize    EQU     30 
     103 = 0000				id          EQU     0 
     104 = 0001				itemName    EQU     1 
     105 = 0014				itemPrice   EQU     20 
     106				 
     107 0000				.CODE 
     108 0000				MAIN PROC 
     109				 
     110 0000  B8 ---- R		mov ax,@data 
     111 0003  8E D8			mov ds,ax 
     112 0005  B8 4C00			mov ax,4c00h 
     113 0008  8D 16 0090 R		lea         dx,logo 
     114 000C  E8 014D R		call        PRINT_STR 
     115				 
     116				; start 
     117				 
     118 000F				passCheck: 
     119 000F  E8 0178 R		            call        NEWLINE 
     120 0012  E8 0178 R		            call        NEWLINE 
     121				 
     122 0015  8D 16 0041 R		            lea         dx,enterText 
     123 0019  E8 014D R		            call        PRINT_STR 
     124				 
     125 001C  8D 3E 0023 R		            lea         di,password 
     126 0020  E8 0100 R		            call        input_str 
     127				 
     128 0023  E8 0178 R		            call        NEWLINE 
     129				 
     130 0026  8D 36 0023 R		            lea         si,password 
     131 002A  8D 3E 0038 R		            lea         di,correctPass 
     132 002E  E8 0134 R		            call        STRCMP         
					                     ;will return 0 if 
					string matches   
     133				 
     134 0031  3D 0000			            cmp         ax,0 
     135 0034  74 26			            jz          pass_correct   
					                     ;jump if password 
					is correct 
     136				            ;;this code will run if pas
					sword is incorrect 
     137 0036  8A 16 008F R		            mov         dl,[loginChance
					s] 
     138 003A  80 FA 00			            cmp         dl,0 
     139 003D  74 19			            jz          exit           
					                     ;if no chances lef
					t 
     140				 
     141 003F  8D 16 0052 R		            lea         dx,pwIncorrect 
     142 0043  E8 014D R		            call        PRINT_STR 
     143				 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-4


     144 0046  8A 16 008F R		            mov         dl,[loginChance
					s] 
     145 004A  FE CA			            dec         dl 
     146 004C  88 16 008F R		            mov         [loginChances],
					dl 
     147 0050  80 C2 30			            add         dl,48d 
     148 0053  E8 0180 R		            call        PRINT_CHAR 
     149				 
     150 0056  EB B7			            jmp         passCheck 
     151 0058				exit: 
     152 0058  B4 4C			            mov ah,4ch 
     153 005A  CD 21			            int 21h 
     154				 
     155 005C				pass_correct: 
     156 005C  E8 0178 R		            call        NEWLINE 
     157 005F  8D 16 0074 R		            lea         dx,pwCorrect 
     158 0063  E8 014D R		            call        PRINT_STR 
     159 0066				pass_check_end: 
     160				 
     161 0066  E8 0178 R		call        NEWLINE 
     162 0069  E8 0178 R		call        NEWLINE 
     163				 
     164 006C  8D 16 0098 R		lea         dx,itemHeader 
     165 0070  E8 014D R		call        PRINT_STR 
     166				 
     167 0073  E8 0178 R		call        NEWLINE 
     168				 
     169				;print all items 
     170 0076  33 C0			xor         ax,ax 
     171 0078  33 C9			xor         cx,cx 
     172 007A  33 FF			xor         di,di 
     173				 
     174 007C  8D 36 00B4 R		lea         si,item                    
					         ;address of item array 
     175 0080				print_item_loop:  
     176 0080  8A 04			            mov         al,[si]        
					         ;move id in si to al 
     177 0082  3C 24			            cmp         al,"$"         
					         ;if is end of array, exit loop
					 
     178 0084  74 37			            je          print_item_loop
					_exit     
     179				 
     180 0086  E8 0154 R		            call        PRINT_NUM      
					         ;print id 
     181				             
     182 0089  50			            push        ax 
     183 008A  52			            push        dx 
     184 008B  B4 02			            mov         ah,02h 
     185 008D  B2 09			            mov         dl,9d 
     186 008F  CD 21			            int         21h            
					         ;print 2 of tabs 
     187 0091  CD 21			            int         21h 
     188 0093  5A			            pop         dx 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-5


     189 0094  58			            pop         ax 
     190				 
     191 0095  56			            push        si 
     192 0096  83 C6 01			            add         si,itemName    
					         ;offset si to address of itemN
					ame 
     193 0099  8B D6			            mov         dx,si 
     194 009B  E8 014D R		            call        PRINT_STR      
					         ;print string in SI 
     195 009E  5E			            pop         si 
     196				 
     197 009F  50			            push        ax 
     198 00A0  52			            push        dx 
     199 00A1  B4 02			            mov         ah,02h 
     200 00A3  B2 09			            mov         dl,9d 
     201 00A5  CD 21			            int         21h            
					         ;print 2 of tabs 
     202 00A7  CD 21			            int         21h 
     203 00A9  5A			            pop         dx 
     204 00AA  58			            pop         ax 
     205				 
     206				 
     207 00AB  56			            push        si 
     208 00AC  83 C6 14			            add         si,itemPrice   
					         ;offset si to address of itemP
					rice 
     209 00AF  8B D6			            mov         dx,si 
     210 00B1  E8 014D R		            call        PRINT_STR      
					         ;print string in SI 
     211 00B4  5E			            pop         si 
     212				 
     213 00B5  E8 0178 R		            call        NEWLINE 
     214				 
     215 00B8  83 C6 1E			            add         si,itemSize    
					         ;increment si by the size of a
					 item element 
     216				 
     217 00BB  EB C3			            jmp         print_item_loop
					 
     218 00BD				print_item_loop_exit: 
     219				 
     220				;input and validation 
     221 00BD				ITEM_SELECTION_INPUT: 
     222 00BD  E8 0178 R		            call        NEWLINE 
     223 00C0  8D 16 0169 R		            lea         dx,itemSelectio
					n 
     224 00C4  E8 014D R		            call        PRINT_STR 
     225 00C7  B4 01			            mov         ah,01h 
     226 00C9  CD 21			            int         21h 
     227				 
     228 00CB  3C 31			            cmp         al,"1" 
     229 00CD  72 0A			            jb          WRONG_ITEM_SELE
					CTION_INPUT 
     230 00CF  3C 36			            cmp         al,"6" 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-6


     231 00D1  77 06			            ja          WRONG_ITEM_SELE
					CTION_INPUT 
     232				 
     233 00D3  E8 0178 R		            call        NEWLINE 
     234				 
     235 00D6  EB 10 90			            jmp         CORRECT_ITEM_SE
					LECTION_INPUT 
     236				 
     237 00D9				            WRONG_ITEM_SELECTION_INPUT:
					 
     238 00D9  E8 0178 R		                        call        NEW
					LINE 
     239 00DC  8D 16 017B R		                        lea         dx,
					wrongItemSelection 
     240 00E0  E8 014D R		                        call        PRI
					NT_STR 
     241 00E3  E8 0178 R		                        call        NEW
					LINE 
     242 00E6  EB D5			                        jmp         ITE
					M_SELECTION_INPUT 
     243				 
     244 00E8				CORRECT_ITEM_SELECTION_INPUT: 
     245				 
     246				 
     247				 
     248				;end 
     249 00E8  B4 4C			mov ah,4ch 
     250 00EA  CD 21			int 21h 
     251				 
     252 00EC				MAIN ENDP 
     253				 
     254 00EC				LOGIN           PROC 
     255				                         
     256 00EC				LOGIN           ENDP 
     257				 
     258 00EC				STRLEN          PROC                   
					                     ;output length of 
					si in ax 
     259 00EC  56			                        push        si 
     260 00ED  33 D2			                        xor         dx,
					dx 
     261 00EF  33 DB			                        xor         bx,
					bx 
     262 00F1  33 C0			                        xor         ax,
					ax 
     263				 
     264 00F3				                        strlenLoop: 
     265 00F3  8A 1C			                                    mov
					     bl,[si] 
     266 00F5  80 FB 24			                                    cmp
					     bl,"$" 
     267 00F8  74 04			                                    je 
					     strlenLoopEnd 
     268				 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-7


     269 00FA  46			                                    inc
					     si 
     270 00FB  40			                                    inc
					     ax 
     271				 
     272 00FC  EB F5			                                    jmp
					     strlenLoop 
     273				 
     274 00FE				                        strlenLoopEnd: 
     275				 
     276 00FE  5E			                        pop         si 
     277 00FF  C3			                        ret 
     278 0100				STRLEN          ENDP 
     279				 
     280 0100				INPUT_STR       PROC                   
					                     ;read input and mo
					ve to address in di 
     281 0100  50			                            push       
					 ax 
     282 0101  52			                            push       
					 dx 
     283 0102  57			                            push       
					 di 
     284 0103  33 C0			                            xor        
					 ax,ax 
     285 0105  33 C9			                            xor        
					 cx,cx 
     286				 
     287 0107  BA 0000 R		                            mov        
					 dx, offset buffer               ;input
					 string 
     288 010A  B4 0A			                            mov        
					 ah,0Ah 
     289 010C  CD 21			                            int        
					 21h 
     290				 
     291 010E  33 C9			                            xor        
					 cx,cx 
     292 0110  8A 0E 0001 R		                            mov        
					 cl,[buffer+1]                   ;move 
					length of input to cl 
     293				 
     294 0114  B4 24			                            mov        
					 ah, "$" 
     295 0116  8D 3E 0002 R		                            lea        
					 di, buffer+2                     ;offs
					et to start of string value 
     296 011A  03 F9			                            add        
					 di, cx                           ;move
					 to after last character 
     297 011C  88 25			                            mov        
					 [di],ah                         ;move 
					$ character to last place 
     298				 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-8


     299 011E  5F			                            pop        
					 di 
     300 011F  57			                            push       
					 di 
     301				 
     302 0120  8D 36 0002 R		                            lea        
					 si,buffer+2 
     303 0124  32 ED			                            xor        
					 ch,ch 
     304 0126  FE C1			                            inc        
					 cl 
     305 0128				                            input_str_c
					py: 
     306 0128  8A 24			                                       
					 mov         ah,[si] 
     307 012A  88 25			                                       
					 mov         [di],ah 
     308				 
     309 012C  46			                                       
					 inc         si 
     310 012D  47			                                       
					 inc         di 
     311 012E  E2 F8			                                       
					 loop        input_str_cpy 
     312				 
     313 0130  5F			                            pop        
					 di 
     314 0131  5A			                            pop        
					 dx 
     315 0132  58			                            pop        
					 ax 
     316 0133  C3			                            ret 
     317 0134				INPUT_STR       ENDP 
     318				 
     319 0134				STRCMP          PROC                   
					                     ;compares string i
					n si and di, if equal will return 0 in 
					ax 
     320 0134  56			                            push       
					 si 
     321 0135  57			                            push       
					 di 
     322				 
     323 0136  33 C0			                            xor        
					 ax,ax 
     324 0138				                            STRCMP_LOOP
					_START: 
     325 0138  8A 04			                                       
					 mov         al,[si] 
     326 013A  8A 25			                                       
					 mov         ah,[di] 
     327				                                       
					  
     328 013C  46			                                       
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-9


					 inc         si 
     329 013D  47			                                       
					 inc         di 
     330				 
     331 013E  3C 24			                                       
					 cmp         al,"$" 
     332 0140  74 04			                                       
					 je          STRCMP_LOOP_END 
     333				 
     334 0142  3A C4			                                       
					 cmp         al,ah 
     335 0144  74 F2			                                       
					 je          STRCMP_LOOP_START 
     336				 
     337 0146				                            STRCMP_LOOP
					_END: 
     338 0146  2A C4			                            sub        
					 al,ah               ;return sub of bot
					h strings 
     339 0148  32 E4			                            xor        
					 ah,ah 
     340				 
     341 014A  5F			                            pop        
					 di 
     342 014B  5E			                            pop        
					 si 
     343 014C  C3			                            ret 
     344 014D				STRCMP          ENDP 
     345				 
     346 014D				PRINT_STR       PROC 
     347 014D  50			                            push       
					 ax 
     348 014E  B4 09			                            mov        
					 ah,09d 
     349 0150  CD 21			                            int        
					 21h 
     350 0152  58			                            pop        
					 ax 
     351 0153  C3			                            ret 
     352 0154				PRINT_STR       ENDP 
     353				 
     354 0154				PRINT_NUM       PROC                   
					                     ;print from ax    
					           
     355 0154  50			                        push    ax     
					                     ;preserves origina
					l register values 
     356 0155  53			                        push    bx 
     357 0156  51			                        push    cx 
     358 0157  52			                        push    dx 
     359 0158  BB 000A			                        mov     bx,000A
					h         
     360 015B  B9 0000			                        mov     cx,0000
					h 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Page     1-10


     361 015E				            Divloop: 
     362 015E  BA 0000			                        mov     dx,0000
					h 
     363 0161  F7 F3			                        div     bx 
     364 0163  52			                        push    dx 
     365 0164  41			                        inc     cx 
     366 0165  85 C0			                        test    ax,ax 
     367 0167  75 F5			                        jnz     Divloop
					 
     368				 
     369 0169  B4 02			                        mov ah,02h     
					                     ;setup for print 
     370				 
     371 016B				            IntPrint:    
     372 016B  5A			                        pop     dx 
     373 016C  83 C2 30			                        add     dx,48d 
     374 016F  CD 21			                        int     21h 
     375 0171  E2 F8			                        loop    IntPrin
					t 
     376				 
     377 0173  5A			                        pop dx         
					                     ;restore original 
					ax value 
     378 0174  59			                        pop cx 
     379 0175  5B			                        pop bx 
     380 0176  58			                        pop ax 
     381 0177  C3			                        ret 
     382 0178				PRINT_NUM       ENDP 
     383				 
     384 0178				NEWLINE         PROC 
     385 0178  52			                            push    dx 
     386 0179  B2 0A			                            mov     dl,
					0Ah 
     387 017B  E8 0180 R		                            call PRINT_
					CHAR 
     388 017E  5A			                            pop     dx 
     389 017F  C3			                            ret 
     390 0180				NEWLINE         ENDP 
     391				 
     392 0180				PRINT_CHAR      PROC                   
					                     ;print cjaracter o
					f value in dl 
     393 0180  50			                            push    ax 
     394 0181  B4 02			                            mov     ah,
					02h 
     395 0183  CD 21			                            int     21h
					 
     396 0185  58			                            pop     ax 
     397 0186  C3			                            ret 
     398 0187				PRINT_CHAR      ENDP 
     399				 
     400 0187				END MAIN 
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	0190	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	0064	PARA	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	0187	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

BUFFER . . . . . . . . . . . . .  	L BYTE	0000	_DATA

CORRECTPASS  . . . . . . . . . .  	L BYTE	0038	_DATA
CORRECT_ITEM_SELECTION_INPUT . .  	L NEAR	00E8	_TEXT

DIVLOOP  . . . . . . . . . . . .  	L NEAR	015E	_TEXT

ENTERTEXT  . . . . . . . . . . .  	L BYTE	0041	_DATA
EXIT . . . . . . . . . . . . . .  	L NEAR	0058	_TEXT

ID . . . . . . . . . . . . . . .  	NUMBER	0000	
INPUT_STR  . . . . . . . . . . .  	N PROC	0100	_TEXT	Length = 0034
INPUT_STR_CPY  . . . . . . . . .  	L NEAR	0128	_TEXT
INTPRINT . . . . . . . . . . . .  	L NEAR	016B	_TEXT
ITEM . . . . . . . . . . . . . .  	L BYTE	00B4	_DATA
ITEMHEADER . . . . . . . . . . .  	L BYTE	0098	_DATA
ITEMNAME . . . . . . . . . . . .  	NUMBER	0001	
ITEMPRICE  . . . . . . . . . . .  	NUMBER	0014	
ITEMSELECTION  . . . . . . . . .  	L BYTE	0169	_DATA
ITEMSIZE . . . . . . . . . . . .  	NUMBER	001E	
ITEM_SELECTION_INPUT . . . . . .  	L NEAR	00BD	_TEXT

LOGIN  . . . . . . . . . . . . .  	N PROC	00EC	_TEXT	Length = 0000
LOGINCHANCES . . . . . . . . . .  	L BYTE	008F	_DATA
LOGO . . . . . . . . . . . . . .  	L BYTE	0090	_DATA

MAIN . . . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 00EC

NEWLINE  . . . . . . . . . . . .  	N PROC	0178	_TEXT	Length = 0008

PASSCHECK  . . . . . . . . . . .  	L NEAR	000F	_TEXT
PASSWORD . . . . . . . . . . . .  	L BYTE	0023	_DATA	Length = 0015
PASS_CHECK_END . . . . . . . . .  	L NEAR	0066	_TEXT
PASS_CORRECT . . . . . . . . . .  	L NEAR	005C	_TEXT
PRINT_CHAR . . . . . . . . . . .  	N PROC	0180	_TEXT	Length = 0007
PRINT_ITEM_LOOP  . . . . . . . .  	L NEAR	0080	_TEXT
PRINT_ITEM_LOOP_EXIT . . . . . .  	L NEAR	00BD	_TEXT
PRINT_NUM  . . . . . . . . . . .  	N PROC	0154	_TEXT	Length = 0024
PRINT_STR  . . . . . . . . . . .  	N PROC	014D	_TEXT	Length = 0007
PWCORRECT  . . . . . . . . . . .  	L BYTE	0074	_DATA
PWINCORRECT  . . . . . . . . . .  	L BYTE	0052	_DATA
Microsoft (R) Macro Assembler Version 5.00                  9/7/23 10:18:20
                                                             Symbols-2



STRCMP . . . . . . . . . . . . .  	N PROC	0134	_TEXT	Length = 0019
STRCMP_LOOP_END  . . . . . . . .  	L NEAR	0146	_TEXT
STRCMP_LOOP_START  . . . . . . .  	L NEAR	0138	_TEXT
STRLEN . . . . . . . . . . . . .  	N PROC	00EC	_TEXT	Length = 0014
STRLENLOOP . . . . . . . . . . .  	L NEAR	00F3	_TEXT
STRLENLOOPEND  . . . . . . . . .  	L NEAR	00FE	_TEXT

WRONGITEMSELECTION . . . . . . .  	L BYTE	017B	_DATA
WRONG_ITEM_SELECTION_INPUT . . .  	L NEAR	00D9	_TEXT

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  main		


    358 Source  Lines
    358 Total   Lines
     55 Symbols

  50388 + 449772 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
